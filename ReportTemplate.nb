(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    100301,       2603]
NotebookOptionsPosition[     84350,       2289]
NotebookOutlinePosition[     91978,       2485]
CellTagsIndexPosition[     91935,       2482]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Report Project X ", "Title",ExpressionUUID->"2e086750-1cf1-4c43-bc57-bac07652a650"],

Cell["\<\
Course code: IX1500
Date: 2022-09-xx\
\>", "Text",
 CellChangeTimes->{{3.872254125705349*^9, 
  3.8722541618100367`*^9}},ExpressionUUID->"679e81cd-23f2-4ac3-aad0-\
55498a6469d8"],

Cell["\<\
Deni Person, denip@kth.se
William Eriksson, werik@kth.se\
\>", "Text",
 CellChangeTimes->{{3.8722541653374987`*^9, 
  3.872254206594503*^9}},ExpressionUUID->"39bfcd1a-7896-4364-9d2c-\
9b6c98366775"],

Cell[CellGroupData[{

Cell["Task 1: Texas Hold \[OpenCurlyQuote]em Probabilities ", "Subchapter",
 CellChangeTimes->{{3.872254212221635*^9, 3.872254271374174*^9}, {
  3.8722549587709703`*^9, 
  3.872254972015833*^9}},ExpressionUUID->"2760ab7a-2fed-4ae4-a63f-\
890119ad5062"],

Cell[CellGroupData[{

Cell["Summary", "Section",
 CellChangeTimes->{{3.87225428117244*^9, 
  3.872254281320321*^9}},ExpressionUUID->"28ab532a-4f99-4328-b494-\
a8a51a0e3e70"],

Cell[CellGroupData[{

Cell["Task", "Subsection",ExpressionUUID->"4df8543c-22f8-401d-8973-c66d5fa62864"],

Cell["\<\
In Texas Hold \[OpenCurlyQuote]em poker (7 cards), there are a set number of \
hands - each ranking either higher or lower than the other based on the \
probability of their existence.
The hands are, ranked high-to-low in order of occurrence:
\t* Pair
\t* Two pairs
\t* No pair/high card
\t* Three of a kind
\t* Straight
\t* Flush
\t* Full house
\t* Four of a kind
\t* Straight Flush
\t* Royal Straight Flush
\t
(task 1.a). Determine the probability of each hand after a player\
\[CloseCurlyQuote]s hole cards have been dealt.
(task 1.b). Determine the probability of each hand after a player\
\[CloseCurlyQuote]s hole cards have been dealt plus 3 of the 5 community \
cards. 
\
\>", "Text",
 CellChangeTimes->{{3.872254293363721*^9, 3.8722543246063137`*^9}, {
  3.8722543646734343`*^9, 3.872254687890245*^9}, {3.8722547255972548`*^9, 
  3.8722548527600517`*^9}, {3.872254895436355*^9, 3.872254948223963*^9}, {
  3.872255013992981*^9, 
  3.872255232490035*^9}},ExpressionUUID->"8ad5d4da-afa2-434b-a402-\
a9f9b705fa59"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Result", "Subsection",ExpressionUUID->"39a0ef6c-6a2c-4081-9062-84513a76c571"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"ClearAll", "[", "\"\<`*\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.872256436003867*^9, 3.872256436373304*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"32be9a5f-94e1-47ff-bec6-06b360fcaaa5"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Road Construction", "Section",ExpressionUUID->"6943093f-8a76-4b29-9b2d-76d8c3875b28"],

Cell[CellGroupData[{

Cell["Model for cross section area", "Subsection",ExpressionUUID->"7e65a304-4725-4568-8fa8-1b4ca87c4741"],

Cell[BoxData[""], "Text",
 CellChangeTimes->{{3.872257045445806*^9, 
  3.872257045856019*^9}},ExpressionUUID->"57c81f3b-dc2c-428a-855d-\
1236601a6b98"],

Cell["\<\
The total number of different 7 cards sets from a standard poker deck where \
order does not matter is \
\>", "Text",
 CellChangeTimes->{{3.872257072503236*^9, 
  3.872257138944038*^9}},ExpressionUUID->"b5296189-ed85-4987-8559-\
0d74e0c1f6bb"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"a", "(", "h", ")"}], "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"10", "+", 
      RowBox[{"2", "h"}]}], ")"}], "h"}]}], 
  TraditionalForm]], "DisplayFormula",ExpressionUUID->"573237c8-75ae-4199-\
9bf0-4ac72198bfe5"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.8722570564031143`*^9, 
  3.8722570564041033`*^9}},ExpressionUUID->"47fdcca8-2461-4bbc-b04b-\
1a672350c9e6"],

Cell[TextData[{
 "The data is interpolated as a function ",
 Cell[BoxData[
  FormBox[
   RowBox[{"A", "(", "x", ")"}], TraditionalForm]],ExpressionUUID->
  "7924b629-c152-4c1d-abce-8159f0cfc2ef"],
 "."
}], "Text",ExpressionUUID->"d0114fc7-f658-4d48-baf9-5a780b6aa139"],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
     "]]}},
  AspectRatio->NCache[
    Rational[1, 3], 0.3333333333333333],
  Axes->{True, True},
  AxesLabel->{
    FormBox[
     InterpretationBox["\"\\!\\(TraditionalForm\\`x\\) [m]\"", 
      StringForm["`1` [m]", $CellContext`x], Editable -> False], 
     TraditionalForm], 
    FormBox[
     InterpretationBox[
     "\"\\!\\(TraditionalForm\\`\\(A(x)\\)\\) \
[\\!\\(TraditionalForm\\`\\\"m\\\"\\^2\\)]\"", 
      StringForm["`1` [`2`]", 
       $CellContext`A[$CellContext`x], "m"^2], Editable -> False], 
     TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{0, 2000}, {0., 142.3782844176261}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Text",ExpressionUUID->"8bfb2cc7-6ae9-413a-\
aff0-d6caabb7a3f7"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Model for volume", "Subsection",ExpressionUUID->"1db48066-a568-4f09-a9b7-7f37a8e3983c"],

Cell["\<\
The requested volume to be transported can be calculated numerically with the \
integral\
\>", "Text",ExpressionUUID->"120fe2be-e9fd-490f-97d7-443683eceefc"],

Cell[BoxData[
 FormBox[
  RowBox[{"V", "=", 
   RowBox[{
    SubsuperscriptBox["\[Integral]", "0", "2000"], 
    RowBox[{
     RowBox[{"A", "(", "x", ")"}], "d", "\[InvisibleSpace]", "x"}]}]}], 
  TraditionalForm]], "DisplayFormula",ExpressionUUID->"5148f49d-d583-4470-\
9eb3-2dfd15ad68fc"],

Cell[BoxData[
 FormBox[
  RowBox[{"V", "\[TildeTilde]", 
   RowBox[{"101", "\[Times]", 
    SuperscriptBox["10", "3"], 
    SuperscriptBox[
     StyleBox["m",
      FontSlant->"Plain"], "3"]}]}], TraditionalForm]], "DisplayFormula",Expre\
ssionUUID->"2d9be42f-b4f3-4733-92b9-c8c8674f099e"],

Cell[TextData[{
 "I.e. about 0.1 k",
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    StyleBox["m",
     FontSlant->"Plain"], "3"], TraditionalForm]],ExpressionUUID->
  "ffe4c858-ee3a-4fdd-8999-39a6522a16a3"],
 " must be transported."
}], "Text",ExpressionUUID->"f501fe3a-3b2d-4a60-a1c1-3ae1716bef10"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Mathematica Data", "Section",
 CellChangeTimes->{{3.8722554975359793`*^9, 
  3.872255501652152*^9}},ExpressionUUID->"eb232638-2837-4382-9654-\
616c94d28459"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ClearAll", "[", "\"\<`*\>\"", "]"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.8722554297870073`*^9, 3.872255431032365*^9}, {
  3.872255506231618*^9, 
  3.872255507076623*^9}},ExpressionUUID->"724ad548-2c8d-4dfd-82a4-\
53b64348dd55"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"data", " ", "=", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", " ", 
     RowBox[{",", " ", 
      RowBox[{"2", "KnownCards"}], ",", " ", 
      RowBox[{"5", "KnownCards"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "OnePair", ",", " ", "0.7767146821725915", ",", " ", 
      "0.5855689176688251"}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{
     "TwoPairs", ",", " ", "0.2533897185146029", ",", " ", 
      "0.08325624421831637"}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{
     "ThreeOfAKind", ",", " ", "0.0683569635069569", ",", " ", 
      "0.013876040703052728"}], "}"}], ",", " ", "\n", 
    RowBox[{"{", 
     RowBox[{
     "Straight", ",", " ", "0.02688364892673073", ",", " ", 
      "0.1517113783533765"}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"Flush", ",", " ", "0.01971813702354207", ",", " ", "0"}], "}"}],
     ",", " ", 
    RowBox[{"{", 
     RowBox[{"FullHouse", ",", " ", "0.022329098151749136", ",", " ", "0"}], 
     "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{
     "FourOfAKind", ",", " ", "0.0012592270950933565", ",", " ", "0"}], "}"}],
     ",", " ", "\n", 
    RowBox[{"{", 
     RowBox[{
     "StraightFlush", ",", " ", "0.0008316184938360173", ",", " ", "0"}], 
     "}"}], ",", "\n", 
    RowBox[{"{", 
     RowBox[{
     "RoyalStraightFlush", ",", " ", "0.00000320942438029791", ",", " ", 
      "0"}], "}"}]}], "}"}]}]], "Code",
 CellChangeTimes->{{3.8722553528509817`*^9, 3.872255397491025*^9}, {
   3.872255559651288*^9, 3.872255596959303*^9}, {3.872255717280254*^9, 
   3.872255727504229*^9}, 3.872255778658567*^9, {3.8722558407645283`*^9, 
   3.872256000149041*^9}, {3.872256059727187*^9, 3.872256110817519*^9}, {
   3.872256182218224*^9, 3.872256263952137*^9}, {3.872256315633278*^9, 
   3.872256421929593*^9}, {3.8722566499282837`*^9, 3.872256878014625*^9}, {
   3.872256909189598*^9, 3.872256966317938*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"4c0cfd7e-bd83-42cd-9ed5-b121f577894f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Null", ",", 
     RowBox[{"2", " ", "KnownCards"}], ",", 
     RowBox[{"5", " ", "KnownCards"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "OnePair", ",", "0.7767146821725915`", ",", "0.5855689176688251`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "TwoPairs", ",", "0.2533897185146029`", ",", "0.08325624421831637`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "ThreeOfAKind", ",", "0.0683569635069569`", ",", 
     "0.013876040703052728`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "Straight", ",", "0.02688364892673073`", ",", "0.1517113783533765`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"Flush", ",", "0.01971813702354207`", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"FullHouse", ",", "0.022329098151749136`", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"FourOfAKind", ",", "0.0012592270950933565`", ",", "0"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"StraightFlush", ",", "0.0008316184938360173`", ",", "0"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{"RoyalStraightFlush", ",", "3.20942438029791`*^-6", ",", "0"}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.872256901305196*^9, 3.8722569358334503`*^9, 
  3.872256966621626*^9},
 CellLabel->"Out[27]=",ExpressionUUID->"59bba24f-2d09-4f8c-a573-5d36ffd94829"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"ass", "=", " ", 
   RowBox[{"Grid", "[", 
    RowBox[{"data", ",", 
     RowBox[{"Alignment", "->", "Left"}], ",", 
     RowBox[{"Spacings", "->", 
      RowBox[{"{", 
       RowBox[{"2", ",", "1"}], "}"}]}], ",", 
     RowBox[{"Frame", "->", "All"}], ",", 
     RowBox[{"ItemStyle", "->", "\"\<Text\>\""}], ",", 
     RowBox[{"Background", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Gray", ",", "None"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"LightGray", ",", "None"}], "}"}]}], "}"}]}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.87225550982402*^9, 3.872255517609007*^9}, {
  3.872256538576326*^9, 3.8722565395367813`*^9}, {3.872256592834446*^9, 
  3.8722565975952883`*^9}},
 CellLabel->"In[30]:=",ExpressionUUID->"10119438-007f-4429-a5a0-bee11d87af84"],

Cell[BoxData[
 TagBox[GridBox[{
    {"", 
     RowBox[{"2", " ", "KnownCards"}], 
     RowBox[{"5", " ", "KnownCards"}]},
    {"OnePair", "0.7767146821725915`", "0.5855689176688251`"},
    {"TwoPairs", "0.2533897185146029`", "0.08325624421831637`"},
    {"ThreeOfAKind", "0.0683569635069569`", "0.013876040703052728`"},
    {"Straight", "0.02688364892673073`", "0.1517113783533765`"},
    {"Flush", "0.01971813702354207`", "0"},
    {"FullHouse", "0.022329098151749136`", "0"},
    {"FourOfAKind", "0.0012592270950933565`", "0"},
    {"StraightFlush", "0.0008316184938360173`", "0"},
    {"RoyalStraightFlush", "3.20942438029791`*^-6", "0"}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxBackground->{"Columns" -> {
       GrayLevel[0.5], None}, "Rows" -> {
       GrayLevel[0.85], None}},
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxItemStyle->{"Columns" -> {{"Text"}}, "Rows" -> {{"Text"}}},
   GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{1}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.8722569831343927`*^9},
 CellLabel->"Out[30]=",ExpressionUUID->"f9b04900-031a-44e3-953d-a1a4e8d75a0d"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Code", "Section",
 CellChangeTimes->{{3.872255470155498*^9, 
  3.872255477558011*^9}},ExpressionUUID->"d13fe2a6-2314-4011-bd36-\
9098b2a50549"],

Cell[BoxData[{
 RowBox[{"import", " ", "math"}], "\n", 
 RowBox[{"import", " ", "random"}], "\n", 
 RowBox[{"from", " ", "itertools", " ", "import", " ", "combinations"}], "\n", 
 RowBox[{
  RowBox[{"from", " ", "operator", " ", "import", " ", "attrgetter"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
  "\"\<\>\"", 
   "\"\< \n\n* one pair\n* two pairs\n* three of a kind\n* straight\n* flush\n\
* full house \n* four of a kinddqdq\n* straight flush\n* straight royal flush\
\n\n\>\"", "\"\<\>\""}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"class", " ", 
   RowBox[{"Card", ":", "\n", "\n", "    ", "color"}]}], " ", "=", " ", 
  "\"\<\>\""}], "\n", 
 RowBox[{"    ", 
  RowBox[{"number", " ", "=", " ", "0"}], "\n"}], "\n", 
 RowBox[{"    ", 
  RowBox[{
   RowBox[{
    RowBox[{"def", " ", "__init", "__", 
     RowBox[{"(", 
      RowBox[{"self", ",", " ", "c", ",", " ", "n"}], ")"}]}], ":", "\n", 
    "        ", 
    RowBox[{"self", ".", "color"}]}], " ", "=", " ", "c"}]}], "\n", 
 RowBox[{"        ", 
  RowBox[{
   RowBox[{"self", ".", "number"}], " ", "=", " ", "n"}], "\n", 
  "    "}], "\n", 
 RowBox[{"    ", 
  RowBox[{
   RowBox[{"def", " ", "__repr", "__", 
    RowBox[{"(", "self", ")"}]}], ":", "\n", "        ", 
   RowBox[{"return", " ", "f", "\"\<{self.color}, {self.number}\>\""}]}], 
  "\n", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"def", " ", "main", 
    RowBox[{"(", ")"}]}], ":", "\n", "    ", "deck"}], " ", "=", " ", 
  RowBox[{"generate_deck", 
   RowBox[{"(", ")"}]}]}], "\n", 
 RowBox[{"    ", 
  RowBox[{"hand", " ", "=", " ", 
   RowBox[{"pull_cards", "_from", "_deck", 
    RowBox[{"(", 
     RowBox[{"deck", ",", " ", "2"}], ")"}]}]}]}], "\n", 
 RowBox[{"    ", 
  RowBox[{"print", 
   RowBox[{"(", "\"\<First round:\>\"", ")"}]}]}], "\n", 
 RowBox[{"    ", 
  RowBox[{"test_hand", " ", "=", " ", 
   RowBox[{"[", 
    RowBox[{
     RowBox[{"Card", 
      RowBox[{"(", 
       RowBox[{"\"\<Ass\>\"", ",", " ", "2"}], ")"}]}], ",", " ", 
     RowBox[{"Card", 
      RowBox[{"(", 
       RowBox[{"\"\<Ass\>\"", ",", " ", "1"}], ")"}]}], ",", " ", 
     RowBox[{"Card", 
      RowBox[{"(", 
       RowBox[{"\"\<Ass\>\"", ",", " ", "2"}], ")"}]}], ",", " ", 
     RowBox[{"Card", 
      RowBox[{"(", 
       RowBox[{"\"\<Ass\>\"", ",", " ", "1"}], ")"}]}]}], "]"}]}]}], "\n", 
 RowBox[{"    ", 
  RowBox[{"calculate_prob", 
   RowBox[{"(", 
    RowBox[{"hand", ",", " ", "deck", ",", " ", "5"}], ")"}]}]}], "\n", 
 RowBox[{"    ", 
  RowBox[{"hand", " ", "+=", " ", 
   RowBox[{"pull_cards", "_from", "_deck", 
    RowBox[{"(", 
     RowBox[{"deck", ",", " ", "3"}], ")"}]}]}]}], "\n", 
 RowBox[{"    ", 
  RowBox[{"print", 
   RowBox[{"(", "\"\<Second round:\>\"", ")"}]}]}], "\n", 
 RowBox[{"    ", 
  RowBox[{"calculate_prob", 
   RowBox[{"(", 
    RowBox[{"hand", ",", " ", "deck", ",", " ", "2"}], ")"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"def", " ", "print_cards", 
    RowBox[{"(", 
     RowBox[{"cards", ",", " ", "description"}], ")"}]}], ":", "\n", "\n", 
   "    ", 
   RowBox[{"print", 
    RowBox[{"(", "description", ")"}]}]}], "\n"}], "\n", 
 RowBox[{"    ", 
  RowBox[{
   RowBox[{"for", " ", "c", " ", "in", " ", "range", 
    RowBox[{"(", 
     RowBox[{"len", 
      RowBox[{"(", "cards", ")"}]}], ")"}]}], ":", "\n", "        ", 
   RowBox[{"print", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"cards", "[", "c", "]"}], ".", "color"}], ",", " ", 
      RowBox[{
       RowBox[{"cards", "[", "c", "]"}], ".", "number"}], ",", " ", 
      RowBox[{"end", "=", "\"\< \>\""}]}], ")"}]}]}], "\n"}], "\n", 
 RowBox[{"    ", 
  RowBox[{"print", 
   RowBox[{"(", "\"\<\\n\>\"", ")"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"def", " ", "calculate_prob", 
   RowBox[{"(", 
    RowBox[{"hand", ",", " ", "deck", ",", " ", 
     RowBox[{"community_card", "_count"}]}], ")"}]}], ":", "\n", "\n", "    ", 
  RowBox[{"print", 
   RowBox[{"(", "hand", ")"}]}]}], "\n", 
 RowBox[{"    ", 
  RowBox[{"unknowns", " ", "=", " ", 
   RowBox[{"combinations", 
    RowBox[{"(", 
     RowBox[{"deck", ",", " ", 
      RowBox[{"community_card", "_count"}]}], ")"}]}]}], "\n"}], "\n", 
 RowBox[{"    ", 
  RowBox[{"tuples", " ", "=", " ", 
   RowBox[{"[", "]"}]}], "\n"}], "\n", 
 RowBox[{"    ", 
  RowBox[{
   RowBox[{"for", " ", "j", " ", "in", " ", "combinations", 
    RowBox[{"(", 
     RowBox[{"deck", ",", " ", 
      RowBox[{"community_card", "_count"}]}], ")"}]}], ":", "\n", "        ", 
   RowBox[{
    RowBox[{"tuples", ".", "append"}], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"unknowns", ".", "__next"}], "__", 
      RowBox[{"(", ")"}]}], ")"}]}]}], "\n"}], "\n", 
 RowBox[{"    ", 
  RowBox[{"found_pairs", " ", "=", " ", "0"}]}], "\n", 
 RowBox[{"    ", 
  RowBox[{
   RowBox[{"found_two", "_pair"}], " ", "=", " ", "0"}]}], "\n", 
 RowBox[{"    ", 
  RowBox[{
   RowBox[{"found_three", "_of"}], " ", "=", " ", "0"}]}], "\n", 
 RowBox[{"    ", 
  RowBox[{
   RowBox[{"found_royal", "_flushes"}], " ", "=", " ", "0"}]}], "\n", 
 RowBox[{"    ", 
  RowBox[{"found_flushes", " ", "=", " ", "0"}]}], "\n", 
 RowBox[{"    ", 
  RowBox[{
   RowBox[{"found_straight", "_flushes"}], " ", "=", " ", "0"}]}], "\n", 
 RowBox[{"    ", 
  RowBox[{"found_straight", " ", "=", " ", "0"}]}], "\n", 
 RowBox[{"    ", 
  RowBox[{
   RowBox[{"found_full", "_house"}], " ", "=", " ", "0"}]}], "\n", 
 RowBox[{"    ", 
  RowBox[{
   RowBox[{"found_four", "_of", "_a", "_kind"}], " ", "=", " ", "0"}], 
  "\n"}], "\n", 
 RowBox[{"    ", 
  RowBox[{
   RowBox[{
    RowBox[{"for", " ", "i", " ", "in", " ", "range", 
     RowBox[{"(", 
      RowBox[{"len", 
       RowBox[{"(", "tuples", ")"}]}], ")"}]}], ":", "\n", "        ", 
    "combo"}], " ", "=", " ", 
   RowBox[{"[", "]"}]}]}], "\n", 
 RowBox[{"        ", 
  RowBox[{
   RowBox[{"for", " ", "j", " ", "in", " ", "range", 
    RowBox[{"(", 
     RowBox[{"community_card", "_count"}], ")"}]}], ":", "\n", "            ", 
   RowBox[{
    RowBox[{"combo", ".", "append"}], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"tuples", "[", "i", "]"}], "[", "j", "]"}], ")"}]}]}], 
  "\n"}], "\n", 
 RowBox[{"        ", 
  RowBox[{"found_pairs", " ", "+=", " ", 
   RowBox[{"one_pair", 
    RowBox[{"(", 
     RowBox[{"combo", "+", "hand"}], ")"}]}]}]}], "\n", 
 RowBox[{"        ", 
  RowBox[{
   RowBox[{"found_two", "_pair"}], " ", "+=", " ", 
   RowBox[{"two_pairs", 
    RowBox[{"(", 
     RowBox[{"combo", "+", "hand"}], ")"}]}]}]}], "\n", 
 RowBox[{"        ", 
  RowBox[{
   RowBox[{"found_three", "_of"}], " ", "+=", " ", 
   RowBox[{"three_of", "_a", "_kind", 
    RowBox[{"(", 
     RowBox[{"combo", "+", "hand"}], ")"}]}]}]}], "\n", 
 RowBox[{"        ", 
  RowBox[{
   RowBox[{"found_royal", "_flushes"}], " ", "+=", " ", 
   RowBox[{"royal_straight", "_flush", 
    RowBox[{"(", 
     RowBox[{"combo", "+", "hand"}], ")"}]}]}]}], "\n", 
 RowBox[{"        ", 
  RowBox[{"found_straight", " ", "+=", " ", 
   RowBox[{"check_straight", 
    RowBox[{"(", 
     RowBox[{"combo", "+", "hand"}], ")"}]}]}]}], "\n", 
 RowBox[{"        ", 
  RowBox[{"found_flushes", " ", "+=", " ", 
   RowBox[{"check_flush", 
    RowBox[{"(", 
     RowBox[{"combo", "+", "hand"}], ")"}]}]}]}], "\n", 
 RowBox[{"        ", 
  RowBox[{
   RowBox[{"found_straight", "_flushes"}], " ", "+=", " ", 
   RowBox[{"check_straight", "_flush", 
    RowBox[{"(", 
     RowBox[{"combo", "+", "hand"}], ")"}]}]}]}], "\n", 
 RowBox[{"        ", 
  RowBox[{
   RowBox[{"found_full", "_house"}], " ", "+=", " ", 
   RowBox[{"full_house", 
    RowBox[{"(", 
     RowBox[{"combo", "+", "hand"}], ")"}]}]}]}], "\n", 
 RowBox[{"        ", 
  RowBox[{
   RowBox[{"found_four", "_of", "_a", "_kind"}], " ", "+=", " ", 
   RowBox[{"four_of", "_a", "_kind", 
    RowBox[{"(", 
     RowBox[{"combo", "+", "hand"}], ")"}]}]}], "\n", "\n", "    "}], "\n", 
 RowBox[{"    ", 
  RowBox[{"print", 
   RowBox[{"(", "\"\<Probabilities:\>\"", ")"}]}]}], "\n", 
 RowBox[{"    ", 
  RowBox[{"print", 
   RowBox[{"(", "\"\<\>\"", ")"}]}]}], "\n", 
 RowBox[{"    ", 
  RowBox[{"print", 
   RowBox[{"(", 
    RowBox[{"\"\<One pair: \>\"", ",", " ", 
     RowBox[{
      RowBox[{"found_pairs", "/", "len"}], 
      RowBox[{"(", "tuples", ")"}]}]}], ")"}]}]}], "\n", 
 RowBox[{"    ", 
  RowBox[{"print", 
   RowBox[{"(", 
    RowBox[{"\"\<Two pairs: \>\"", ",", " ", 
     RowBox[{"found_two", 
      RowBox[{"_pair", "/", "len"}], 
      RowBox[{"(", "tuples", ")"}]}]}], ")"}]}]}], "\n", 
 RowBox[{"    ", 
  RowBox[{"print", 
   RowBox[{"(", 
    RowBox[{"\"\<Three of a kind: \>\"", ",", " ", 
     RowBox[{"found_three", 
      RowBox[{"_of", "/", "len"}], 
      RowBox[{"(", "tuples", ")"}]}]}], ")"}]}]}], "\n", 
 RowBox[{"    ", 
  RowBox[{"print", 
   RowBox[{"(", 
    RowBox[{"\"\<Straight: \>\"", ",", " ", 
     RowBox[{
      RowBox[{"found_straight", "/", "len"}], 
      RowBox[{"(", "tuples", ")"}]}]}], ")"}]}]}], "\n", 
 RowBox[{"    ", 
  RowBox[{"print", 
   RowBox[{"(", 
    RowBox[{"\"\<Flush: \>\"", ",", " ", 
     RowBox[{
      RowBox[{"found_flushes", "/", "len"}], 
      RowBox[{"(", "tuples", ")"}]}]}], ")"}]}]}], "\n", 
 RowBox[{"    ", 
  RowBox[{"print", 
   RowBox[{"(", 
    RowBox[{"\"\<Full house: \>\"", ",", " ", 
     RowBox[{"found_full", 
      RowBox[{"_house", "/", "len"}], 
      RowBox[{"(", "tuples", ")"}]}]}], ")"}]}]}], "\n", 
 RowBox[{"    ", 
  RowBox[{"print", 
   RowBox[{"(", 
    RowBox[{"\"\<Four of a kind: \>\"", ",", " ", 
     RowBox[{"found_four", "_of", "_a", 
      RowBox[{"_kind", "/", "len"}], 
      RowBox[{"(", "tuples", ")"}]}]}], ")"}]}]}], "\n", 
 RowBox[{"    ", 
  RowBox[{"print", 
   RowBox[{"(", 
    RowBox[{"\"\<Straight flush: \>\"", ",", " ", 
     RowBox[{"found_straight", 
      RowBox[{"_flushes", "/", "len"}], 
      RowBox[{"(", "tuples", ")"}]}]}], ")"}]}]}], "\n", 
 RowBox[{"    ", 
  RowBox[{"print", 
   RowBox[{"(", 
    RowBox[{"\"\<Royal straight flush: \>\"", ",", " ", 
     RowBox[{"found_royal", 
      RowBox[{"_flushes", "/", "len"}], 
      RowBox[{"(", "tuples", ")"}]}]}], ")"}]}]}], "\n", 
 RowBox[{"    ", 
  RowBox[{"print", 
   RowBox[{"(", "\"\<\>\"", ")"}]}], "\n", "\n"}], "\n", 
 RowBox[{
  RowBox[{"def", " ", "one_pair", 
   RowBox[{"(", "combination", ")"}]}], " ", "->", " ", 
  RowBox[{"int", ":", "\n", "    ", 
   RowBox[{"for", " ", "i", " ", "in", " ", "range", 
    RowBox[{"(", 
     RowBox[{"len", 
      RowBox[{"(", "combination", ")"}]}], ")"}]}], ":", "    ", "\n", 
   "        ", 
   RowBox[{"for", " ", "j", " ", "in", " ", "range", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"i", "+", "1"}], ",", 
      RowBox[{"len", 
       RowBox[{"(", "combination", ")"}]}]}], ")"}]}], ":", "\n", 
   "            ", 
   RowBox[{
    RowBox[{"if", " ", "j"}], " ", ">=", " ", 
    RowBox[{"len", 
     RowBox[{"(", "combination", ")"}]}]}], ":", "\n", "                ", 
   "break"}]}], "\n", 
 RowBox[{"            ", 
  RowBox[{
   RowBox[{"if", " ", 
    RowBox[{
     RowBox[{"combination", "[", "i", "]"}], ".", "number"}]}], " ", "==", 
   " ", 
   RowBox[{
    RowBox[{"combination", "[", "j", "]"}], ".", 
    RowBox[{"number", ":", "\n", "                ", 
     RowBox[{"#print", 
      RowBox[{"(", 
       RowBox[{
       "f", "\"\<{combination[i].number} | {combination[j].number}\>\""}], 
       ")"}]}]}]}]}]}], "\n", 
 RowBox[{"                ", 
  RowBox[{"return", " ", "1"}]}], "\n", 
 RowBox[{"    ", 
  RowBox[{"return", " ", "0"}], "\n", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"def", " ", "two_pairs", 
     RowBox[{"(", "combination", ")"}]}], " ", "->", " ", 
    RowBox[{"int", ":", "\n", "    ", "found_pairs"}]}], " ", "=", " ", "0"}],
   "\n", "    "}], "\n", 
 RowBox[{"    ", 
  RowBox[{
   RowBox[{"for", " ", "i", " ", "in", " ", "range", 
    RowBox[{"(", 
     RowBox[{"len", 
      RowBox[{"(", "combination", ")"}]}], ")"}]}], ":", "    ", "\n", 
   "        ", 
   RowBox[{"for", " ", "j", " ", "in", " ", "range", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"i", "+", "1"}], ",", 
      RowBox[{"len", 
       RowBox[{"(", "combination", ")"}]}]}], ")"}]}], ":", "\n", 
   "            ", 
   RowBox[{
    RowBox[{"if", " ", "j"}], " ", ">=", " ", 
    RowBox[{"len", 
     RowBox[{"(", "combination", ")"}]}]}], ":", "\n", "                ", 
   "break"}]}], "\n", 
 RowBox[{"            ", 
  RowBox[{
   RowBox[{"if", " ", 
    RowBox[{
     RowBox[{"combination", "[", "i", "]"}], ".", "number"}]}], " ", "==", 
   " ", 
   RowBox[{
    RowBox[{"combination", "[", "j", "]"}], ".", 
    RowBox[{"number", ":", "\n", "                ", 
     RowBox[{
      RowBox[{"combination", ".", "remove"}], 
      RowBox[{"(", 
       RowBox[{"combination", "[", "i", "]"}], ")"}]}]}]}]}]}], "\n", 
 RowBox[{"                ", 
  RowBox[{
   RowBox[{"combination", ".", "remove"}], 
   RowBox[{"(", 
    RowBox[{"combination", "[", 
     RowBox[{"j", "-", "1"}], "]"}], ")"}]}]}], "\n", 
 RowBox[{"                ", 
  RowBox[{"found_pairs", "+=", " ", "1"}], "\n"}], "\n", 
 RowBox[{"    ", 
  RowBox[{
   RowBox[{"for", " ", "i", " ", "in", " ", "range", 
    RowBox[{"(", 
     RowBox[{"len", 
      RowBox[{"(", "combination", ")"}]}], ")"}]}], ":", "    ", "\n", 
   "        ", 
   RowBox[{"for", " ", "j", " ", "in", " ", "range", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"i", "+", "1"}], ",", 
      RowBox[{"len", 
       RowBox[{"(", "combination", ")"}]}]}], ")"}]}], ":", "\n", 
   "            ", 
   RowBox[{
    RowBox[{"if", " ", "j"}], " ", ">=", " ", 
    RowBox[{"len", 
     RowBox[{"(", "combination", ")"}]}]}], ":", "\n", "                ", 
   "break"}]}], "\n", 
 RowBox[{"            ", 
  RowBox[{
   RowBox[{
    RowBox[{"if", " ", 
     RowBox[{
      RowBox[{"combination", "[", "i", "]"}], ".", "number"}]}], " ", "==", 
    " ", 
    RowBox[{
     RowBox[{"combination", "[", "j", "]"}], ".", 
     RowBox[{"number", ":", "\n", "                ", "found_pairs"}]}]}], "+=",
    " ", "1"}]}], "\n", 
 RowBox[{"                ", "break", "\n"}], "\n", 
 RowBox[{"    ", 
  RowBox[{
   RowBox[{
    RowBox[{"if", " ", "found_pairs"}], " ", ">=", " ", "2"}], ":", "\n", 
   "        ", 
   RowBox[{"return", " ", "1"}]}], "\n"}], "\n", 
 RowBox[{"    ", 
  RowBox[{"return", " ", "0"}], "\n", "\n", "\n", "            "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"def", " ", "three_of", "_a", "_kind", 
    RowBox[{"(", "combinations", ")"}]}], ":", "\n", "    ", 
   RowBox[{
    RowBox[{"combinations", ".", "sort"}], 
    RowBox[{"(", 
     RowBox[{"key", "=", " ", 
      RowBox[{"attrgetter", 
       RowBox[{"(", 
        RowBox[{"'", 
         RowBox[{"number", "'"}]}], ")"}]}]}], ")"}]}]}], "\n"}], "\n", 
 RowBox[{"    ", 
  RowBox[{"found", " ", "=", " ", "0"}], "\n"}], "\n", 
 RowBox[{"    ", 
  RowBox[{
   RowBox[{
    RowBox[{"for", " ", "i", " ", "in", " ", "range", 
     RowBox[{"(", 
      RowBox[{"len", 
       RowBox[{"(", "combinations", ")"}]}], ")"}]}], ":", "\n", "\n", 
    "        ", "cards"}], " ", "=", " ", "1"}]}], "\n", 
 RowBox[{"        ", 
  RowBox[{
   RowBox[{"for", " ", "j", " ", "in", " ", "range", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"i", "+", "1"}], ",", " ", 
      RowBox[{"len", 
       RowBox[{"(", "combinations", ")"}]}]}], ")"}]}], ":", "\n", "\n", 
   "            ", 
   RowBox[{
    RowBox[{"if", " ", 
     RowBox[{
      RowBox[{"combinations", "[", "j", "]"}], ".", "number"}]}], " ", "!=", 
    " ", 
    RowBox[{
     RowBox[{"combinations", "[", "i", "]"}], ".", "number"}]}], ":", "\n", 
   "                ", "break"}]}], "\n", 
 RowBox[{"            ", 
  RowBox[{
   RowBox[{"else", ":", "\n", "                ", "cards"}], " ", "+=", " ", 
   "1"}], "\n"}], "\n", 
 RowBox[{"            ", 
  RowBox[{
   RowBox[{
    RowBox[{"if", 
     RowBox[{"(", 
      RowBox[{"cards", " ", ">=", " ", "3"}], ")"}]}], ":", "\n", 
    "                ", "found"}], " ", "=", " ", "1"}]}], "\n", 
 RowBox[{"                ", "break", "\n"}], "\n", 
 RowBox[{"    ", 
  RowBox[{"return", " ", "found"}], " ", "\n", "\n", "           "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"def", " ", "four_of", "_a", "_kind", 
    RowBox[{"(", "combinations", ")"}]}], ":", "\n", "    ", 
   RowBox[{
    RowBox[{"combinations", ".", "sort"}], 
    RowBox[{"(", 
     RowBox[{"key", "=", " ", 
      RowBox[{"attrgetter", 
       RowBox[{"(", 
        RowBox[{"'", 
         RowBox[{"number", "'"}]}], ")"}]}]}], ")"}]}]}], "\n"}], "\n", 
 RowBox[{"    ", 
  RowBox[{"found", " ", "=", " ", "0"}], "\n"}], "\n", 
 RowBox[{"    ", 
  RowBox[{
   RowBox[{
    RowBox[{"for", " ", "i", " ", "in", " ", "range", 
     RowBox[{"(", 
      RowBox[{"len", 
       RowBox[{"(", "combinations", ")"}]}], ")"}]}], ":", "\n", "\n", 
    "        ", "cards"}], " ", "=", " ", "1"}]}], "\n", 
 RowBox[{"        ", 
  RowBox[{
   RowBox[{"for", " ", "j", " ", "in", " ", "range", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"i", "+", "1"}], ",", " ", 
      RowBox[{"len", 
       RowBox[{"(", "combinations", ")"}]}]}], ")"}]}], ":", "\n", "\n", 
   "            ", 
   RowBox[{
    RowBox[{"if", " ", 
     RowBox[{
      RowBox[{"combinations", "[", "j", "]"}], ".", "number"}]}], " ", "!=", 
    " ", 
    RowBox[{
     RowBox[{"combinations", "[", "i", "]"}], ".", "number"}]}], ":", "\n", 
   "                ", "break"}]}], "\n", 
 RowBox[{"            ", 
  RowBox[{
   RowBox[{"else", ":", "\n", "                ", "cards"}], " ", "+=", " ", 
   "1"}], "\n"}], "\n", 
 RowBox[{"            ", 
  RowBox[{
   RowBox[{
    RowBox[{"if", 
     RowBox[{"(", 
      RowBox[{"cards", " ", ">=", " ", "4"}], ")"}]}], ":", "\n", 
    "                ", "found"}], " ", "=", " ", "1"}]}], "\n", 
 RowBox[{"                ", "break", "\n"}], "\n", 
 RowBox[{"    ", 
  RowBox[{"return", " ", "found"}], " ", "\n", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"def", " ", "full_house", 
    RowBox[{"(", "combinations", ")"}]}], ":", "\n", "    ", 
   RowBox[{
    RowBox[{"combinations", ".", "sort"}], 
    RowBox[{"(", 
     RowBox[{"key", "=", " ", 
      RowBox[{"attrgetter", 
       RowBox[{"(", 
        RowBox[{"'", 
         RowBox[{"number", "'"}]}], ")"}]}]}], ")"}]}]}], "\n"}], "\n", 
 RowBox[{"    ", 
  RowBox[{"found", " ", "=", " ", "0"}], "\n"}], "\n", 
 RowBox[{"    ", 
  RowBox[{
   RowBox[{
    RowBox[{"for", " ", "i", " ", "in", " ", "range", 
     RowBox[{"(", 
      RowBox[{"len", 
       RowBox[{"(", "combinations", ")"}]}], ")"}]}], ":", "\n", "\n", 
    "        ", "cards"}], " ", "=", " ", "1"}]}], "\n", 
 RowBox[{"        ", 
  RowBox[{
   RowBox[{"for", " ", "j", " ", "in", " ", "range", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"i", "+", "1"}], ",", " ", 
      RowBox[{"len", 
       RowBox[{"(", "combinations", ")"}]}]}], ")"}]}], ":", "\n", "\n", 
   "            ", 
   RowBox[{
    RowBox[{"if", " ", 
     RowBox[{
      RowBox[{"combinations", "[", "j", "]"}], ".", "number"}]}], " ", "!=", 
    " ", 
    RowBox[{
     RowBox[{"combinations", "[", "i", "]"}], ".", "number"}]}], ":", "\n", 
   "                ", "break"}]}], "\n", 
 RowBox[{"            ", 
  RowBox[{
   RowBox[{"else", ":", "\n", "                ", "cards"}], " ", "+=", " ", 
   "1"}], "\n"}], "\n", 
 RowBox[{"            ", 
  RowBox[{
   RowBox[{
    RowBox[{"if", 
     RowBox[{"(", 
      RowBox[{"cards", " ", ">=", " ", "3"}], ")"}]}], ":", "\n", 
    "                ", "found"}], " ", "=", " ", "1"}]}], "\n", 
 RowBox[{"                ", 
  RowBox[{
   RowBox[{"combinations", ".", "remove"}], 
   RowBox[{"(", 
    RowBox[{"combinations", "[", "j", "]"}], ")"}]}]}], "\n", 
 RowBox[{"                ", 
  RowBox[{
   RowBox[{"combinations", ".", "remove"}], 
   RowBox[{"(", 
    RowBox[{"combinations", "[", 
     RowBox[{"j", "-", "1"}], "]"}], ")"}]}]}], "\n", 
 RowBox[{"                ", 
  RowBox[{
   RowBox[{"combinations", ".", "remove"}], 
   RowBox[{"(", 
    RowBox[{"combinations", "[", 
     RowBox[{"j", "-", "2"}], "]"}], ")"}]}]}], "\n", 
 RowBox[{"                ", "break", "\n", "\n"}], "\n", 
 RowBox[{"    ", 
  RowBox[{
   RowBox[{
    RowBox[{"if", 
     RowBox[{"(", 
      RowBox[{"found", " ", "==", " ", "1"}], ")"}]}], ":", "\n", "        ", 
    "found"}], " ", "=", " ", 
   RowBox[{"one_pair", 
    RowBox[{"(", "combinations", ")"}]}]}], "\n"}], "\n", 
 RowBox[{"    ", 
  RowBox[{"return", " ", "found"}], " ", "\n", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"def", " ", "check_flush", 
     RowBox[{"(", "combinations", ")"}]}], ":", "\n", "\n", "    ", "flush"}],
    " ", "=", " ", "0"}], "\n"}], "\n", 
 RowBox[{"    ", 
  RowBox[{
   RowBox[{
    RowBox[{"for", " ", "i", " ", "in", " ", "range", 
     RowBox[{"(", 
      RowBox[{"len", 
       RowBox[{"(", "combinations", ")"}]}], ")"}]}], ":", "\n", "        ", 
    "same_suit"}], " ", "=", " ", "1"}]}], "\n", 
 RowBox[{"        ", 
  RowBox[{
   RowBox[{
    RowBox[{"for", " ", "j", " ", "in", " ", "range", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"i", "+", "1"}], ",", " ", 
       RowBox[{"len", 
        RowBox[{"(", "combinations", ")"}]}]}], ")"}]}], ":", "\n", 
    "            ", 
    RowBox[{"if", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"combinations", "[", "i", "]"}], ".", "color"}], " ", "==", 
       " ", 
       RowBox[{
        RowBox[{"combinations", "[", "j", "]"}], ".", "color"}]}], ")"}]}], 
    ":", "\n", "                ", "same_suit"}], " ", "+=", " ", "1"}], "\n",
   "            "}], "\n", 
 RowBox[{"            ", 
  RowBox[{
   RowBox[{
    RowBox[{"if", 
     RowBox[{"(", 
      RowBox[{"same_suit", " ", ">=", " ", "5"}], ")"}]}], ":", "\n", 
    "                ", "flush"}], " ", "=", " ", "1"}]}], "\n", 
 RowBox[{"                ", "break", "   ", "\n"}], "\n", 
 RowBox[{"    ", 
  RowBox[{"return", " ", "flush"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"def", " ", "check_straight", 
    RowBox[{"(", "combinations", ")"}]}], ":", "\n", "    ", 
   RowBox[{
    RowBox[{"combinations", ".", "sort"}], 
    RowBox[{"(", 
     RowBox[{"key", "=", " ", 
      RowBox[{"attrgetter", 
       RowBox[{"(", 
        RowBox[{"'", 
         RowBox[{"number", "'"}]}], ")"}]}]}], ")"}]}]}], "\n"}], "\n", 
 RowBox[{"    ", 
  RowBox[{"found", " ", "=", " ", "0"}], "\n"}], "\n", 
 RowBox[{"    ", 
  RowBox[{
   RowBox[{
    RowBox[{"for", " ", "i", " ", "in", " ", "range", 
     RowBox[{"(", 
      RowBox[{"len", 
       RowBox[{"(", "combinations", ")"}]}], ")"}]}], ":", "\n", "        ", 
    "straight"}], " ", "=", " ", "1"}]}], "\n", 
 RowBox[{"        ", 
  RowBox[{
   RowBox[{"for", " ", "j", " ", "in", " ", "range", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"i", "+", "1"}], ",", " ", 
      RowBox[{"len", 
       RowBox[{"(", "combinations", ")"}]}]}], ")"}]}], ":", "\n", "\n", 
   "            ", 
   RowBox[{
    RowBox[{"if", " ", 
     RowBox[{
      RowBox[{"combinations", "[", "j", "]"}], ".", "number"}]}], " ", "!=", 
    " ", 
    RowBox[{
     RowBox[{
      RowBox[{"combinations", "[", "i", "]"}], ".", "number"}], " ", "+", " ",
      "j", " ", "-", " ", "i"}]}], ":", "\n", "                ", 
   "break"}]}], "\n", 
 RowBox[{"            ", 
  RowBox[{
   RowBox[{"else", ":", "\n", "                ", "straight"}], " ", "+=", 
   " ", "1"}]}], "\n", 
 RowBox[{"                ", 
  RowBox[{
   RowBox[{
    RowBox[{"if", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"combinations", "[", "j", "]"}], ".", "number"}], " ", "==", 
       " ", 
       RowBox[{"13", " ", "and", " ", "straight"}], " ", "==", " ", "4"}], 
      ")"}]}], ":", "\n", "                    ", 
    RowBox[{"if", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"combinations", "[", "0", "]"}], ".", "number"}], " ", "==", 
       " ", "1"}], ")"}]}], ":", "\n", "                        ", "found"}], 
   " ", "=", " ", "1"}]}], "\n", 
 RowBox[{"                        ", "break", "\n"}], "\n", 
 RowBox[{"            ", 
  RowBox[{
   RowBox[{
    RowBox[{"if", 
     RowBox[{"(", 
      RowBox[{"straight", " ", ">=", " ", "5"}], ")"}]}], ":", "\n", 
    "                ", "found"}], " ", "=", " ", "1"}]}], "\n", 
 RowBox[{"                ", "break", "\n"}], "\n", 
 RowBox[{"    ", 
  RowBox[{"return", " ", "found"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"def", " ", "check_straight", "_flush", 
   RowBox[{"(", "combinations", ")"}]}], ":", "\n", "    ", 
  RowBox[{"if", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"check_straight", 
      RowBox[{"(", "combinations", ")"}]}], " ", "==", " ", 
     RowBox[{"1", " ", "and", " ", "check_flush", 
      RowBox[{"(", "combinations", ")"}]}], "==", " ", "1"}], ")"}]}], ":", 
  "\n", "        ", 
  RowBox[{"return", " ", "1"}]}], "\n", 
 RowBox[{"    ", 
  RowBox[{"else", ":", "\n", "        ", 
   RowBox[{"return", " ", "0"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"def", " ", "royal_straight", "_flush", 
    RowBox[{"(", "combinations", ")"}]}], ":", "\n", "    ", "king_exists"}], 
  " ", "=", " ", "False"}], "\n", 
 RowBox[{"    ", 
  RowBox[{"s_exists", " ", "=", " ", "False"}], "\n"}], "\n", 
 RowBox[{"    ", 
  RowBox[{
   RowBox[{
    RowBox[{"for", " ", "i", " ", "in", " ", "range", 
     RowBox[{"(", 
      RowBox[{"len", 
       RowBox[{"(", "combinations", ")"}]}], ")"}]}], ":", "\n", "        ", 
    RowBox[{"if", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"combinations", "[", "i", "]"}], ".", "number"}], " ", "==", 
       " ", "1"}], ")"}]}], ":", "\n", "            ", "s_exists"}], " ", "=",
    " ", "True"}]}], "\n", 
 RowBox[{"        ", 
  RowBox[{
   RowBox[{
    RowBox[{"if", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"combinations", "[", "i", "]"}], ".", "number"}], " ", "==", 
       " ", "13"}], ")"}]}], ":", "\n", "            ", "king_exists"}], " ", 
   "=", " ", "True"}], "\n", "    "}], "\n", 
 RowBox[{"    ", 
  RowBox[{
   RowBox[{"if", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
      "king_exists", " ", "and", " ", "s_exists", " ", "and", " ", 
       "check_straight", "_flush", 
       RowBox[{"(", "combinations", ")"}]}], " ", "==", " ", "1"}], ")"}]}], 
   ":", "\n", "        ", 
   RowBox[{"return", " ", "1"}]}], "\n", "    "}], "\n", 
 RowBox[{"    ", 
  RowBox[{"return", " ", "0"}], "\n", "\n", "\n", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"def", " ", "generate_deck", 
    RowBox[{"(", ")"}]}], ":", "\n", "    ", "colors"}], " ", "=", " ", 
  RowBox[{"[", 
   RowBox[{
   "\"\<hj\[ADoubleDot]rter\>\"", ",", " ", "\"\<spader\>\"", ",", " ", 
    "\"\<ruter\>\"", ",", " ", "\"\<kl\[ODoubleDot]ver\>\""}], "]"}]}], "\n", 
 RowBox[{"    ", 
  RowBox[{"numbers", " ", "=", " ", 
   RowBox[{"[", 
    RowBox[{
    "1", ",", " ", "2", ",", " ", "3", ",", " ", "4", ",", " ", "5", ",", " ",
      "6", ",", " ", "7", ",", " ", "8", ",", " ", "9", ",", " ", "10", ",", 
     " ", "11", ",", " ", "12", ",", " ", "13"}], "]"}]}]}], "\n", 
 RowBox[{"    ", 
  RowBox[{"cards", " ", "=", " ", 
   RowBox[{"[", "]"}]}]}], "\n", 
 RowBox[{"    ", 
  RowBox[{
   RowBox[{"for", " ", "j", " ", "in", " ", 
    RowBox[{"numbers", ":", "\n", "        ", 
     RowBox[{"for", " ", "i", " ", "in", " ", "colors"}], ":", "\n", 
     "            ", "new_card"}]}], " ", "=", " ", 
   RowBox[{"Card", 
    RowBox[{"(", 
     RowBox[{"i", ",", " ", "j"}], ")"}]}]}]}], "\n", 
 RowBox[{"            ", 
  RowBox[{
   RowBox[{"cards", ".", "append"}], 
   RowBox[{"(", "new_card", ")"}]}], "\n"}], "\n", 
 RowBox[{"    ", 
  RowBox[{"return", " ", "cards"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"def", " ", "pull_cards", "_from", "_deck", 
     RowBox[{"(", 
      RowBox[{"deck", ",", " ", 
       RowBox[{"cards_to", "_draw"}]}], ")"}]}], ":", "\n", "    ", "\n", 
    "    ", "pulled_cards"}], " ", "=", " ", 
   RowBox[{"[", "]"}]}], "\n"}], "\n", 
 RowBox[{"    ", 
  RowBox[{
   RowBox[{
    RowBox[{"for", " ", "i", " ", "in", " ", "range", 
     RowBox[{"(", 
      RowBox[{"cards_to", "_draw"}], ")"}]}], ":", "\n", "        ", "card"}],
    " ", "=", " ", 
   RowBox[{"deck", "[", 
    RowBox[{
     RowBox[{"random", ".", "randint"}], 
     RowBox[{"(", 
      RowBox[{"0", ",", " ", 
       RowBox[{
        RowBox[{"len", 
         RowBox[{"(", "deck", ")"}]}], "-", "1"}]}], ")"}]}], "]"}]}]}], "\n", 
 RowBox[{"        ", 
  RowBox[{
   RowBox[{"deck", ".", "remove"}], 
   RowBox[{"(", "card", ")"}]}]}], "\n", 
 RowBox[{"        ", 
  RowBox[{
   RowBox[{"pulled_cards", ".", "append"}], 
   RowBox[{"(", "card", ")"}]}], "\n"}], "\n", 
 RowBox[{"    ", 
  RowBox[{"return", " ", "pulled_cards"}], "\n", "\n", "        ", 
  "\n"}], "\n", 
 RowBox[{"main", 
  RowBox[{"(", ")"}]}], "\[IndentingNewLine]"}], "Code",
 CellChangeTimes->{{3.872255433736515*^9, 3.8722554414366283`*^9}, 
   3.872255479849684*^9},ExpressionUUID->"f10aa016-c174-4f35-8bc4-\
31815cb2be6a"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Task 2: Kick Length", "Subchapter",ExpressionUUID->"099ee814-8db2-4a63-8b88-1c9110418edc"],

Cell[CellGroupData[{

Cell["Summary", "Section",
 CellChangeTimes->{{3.872254283514531*^9, 
  3.8722542835845203`*^9}},ExpressionUUID->"4332511c-4b0e-4fff-a557-\
cc5bbf57a309"],

Cell[CellGroupData[{

Cell["Task", "Subsection",ExpressionUUID->"5c103694-4f0e-4da5-8449-310c802b22a8"],

Cell["\<\
A certain football path can be described by the following differential \
equations.\
\>", "Text",ExpressionUUID->"c299c6da-f79a-4138-80fb-9d77fb5a52bc"],

Cell[BoxData[
 FormBox[
  TagBox[Cell[BoxData[
    FormBox[
     RowBox[{"\[Piecewise]", GridBox[{
        {
         RowBox[{
          RowBox[{"m", " ", 
           SuperscriptBox["x", "\[Prime]\[Prime]",
            MultilineFunction->None], 
           RowBox[{"(", "t", ")"}]}], "=", 
          RowBox[{
           RowBox[{"-", "\[Mu]"}], " ", 
           RowBox[{
            SuperscriptBox["x", "\[Prime]",
             MultilineFunction->None], "(", "t", ")"}], " ", 
           TemplateBox[{
             RowBox[{
               SuperscriptBox["x", "\[Prime]", MultilineFunction -> None], 
               "(", "t", ")"}]},
            "Abs"]}]}]},
        {
         RowBox[{
          RowBox[{"m", " ", 
           SuperscriptBox["y", "\[Prime]\[Prime]",
            MultilineFunction->None], 
           RowBox[{"(", "t", ")"}]}], "=", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "m"}], " ", "g"}], "-", 
           RowBox[{"\[Mu]", " ", 
            RowBox[{
             SuperscriptBox["y", "\[Prime]",
              MultilineFunction->None], "(", "t", ")"}], 
            TemplateBox[{
              RowBox[{
                SuperscriptBox["y", "\[Prime]", MultilineFunction -> None], 
                "(", "t", ")"}]},
             "Abs"]}]}]}]}
       }]}], TraditionalForm]], "DisplayFormula",
    CellChangeTimes->{{3.6494831153047237`*^9, 3.64948315219319*^9}, 
      3.649483223906516*^9, {3.6494834560349236`*^9, 
      3.6494834618069334`*^9}, {3.6494839443781815`*^9, 
      3.6494839449709826`*^9}, {3.649484703294715*^9, 3.649484718894743*^9}, 
      3.6494847524816017`*^9, {3.649484784617658*^9, 3.649484791965271*^9}, {
      3.649484822291724*^9, 3.649484854427781*^9}, {3.649484932505918*^9, 
      3.649484974610392*^9}, {3.64948505320333*^9, 3.6494850973202076`*^9}, 
      3.649485157817114*^9},ExpressionUUID->
    "c1687d82-81fd-405e-b8f1-eefbba282e2f"],
   DisplayForm], TraditionalForm]], "DisplayFormula",
 GridBoxOptions->{
 GridBoxAlignment->{
  "Columns" -> {{
     Left}}}},ExpressionUUID->"27cae548-12cc-478c-8bfe-277d63403154"],

Cell[TextData[{
 "In this case, the friction force is proportional to the square of the speed \
",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["v", "2"], TraditionalForm]],ExpressionUUID->
  "ee8adf0b-9dcd-4f62-baaa-a4d46811639a"],
 " and opposite to the velocity ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["v", "\[RightVector]"], TraditionalForm]],ExpressionUUID->
  "9ddd38b7-a128-4db8-b217-9a16b36ec110"],
 ". Determine the kick angle toward the ground which gives the greatest kick \
length. Assume the following data:"
}], "Text",ExpressionUUID->"4b8eab51-f160-44c4-ab8d-a5efeaede9d4"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"m", "=", 
    RowBox[{"0.4", "kg"}]}], ",", " ", 
   RowBox[{"\[Mu]", "=", 
    RowBox[{"0.01", " ", 
     RowBox[{"kg", "/", 
      StyleBox["m",
       FontSlant->"Plain"]}]}]}], ",", " ", 
   RowBox[{"g", "=", 
    RowBox[{"9.8", 
     RowBox[{
      StyleBox["m",
       FontSlant->"Plain"], "/", 
      SuperscriptBox[
       StyleBox["s",
        FontSlant->"Plain"], "2"]}]}]}]}], TraditionalForm]], "DisplayFormula",\
ExpressionUUID->"138da779-b707-4019-a122-1b30b08c05c4"]
}, Closed]],

Cell[CellGroupData[{

Cell["Result", "Subsection",ExpressionUUID->"7b609863-e4df-4ca9-8aa1-cbe4137518cf"],

Cell[TextData[{
 "The differential equations are solved numerically for different angles and \
then a function ",
 Cell[BoxData[
  FormBox[
   RowBox[{"L", "(", "\[Theta]", ")"}], TraditionalForm]],ExpressionUUID->
  "95baba6d-6f77-4b09-bee3-408dfc157207"],
 " is interpolated whose maximum is determined."
}], "Text",ExpressionUUID->"e21c54be-d0fb-4236-8998-57acdd091c0d"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    SubscriptBox["L", "max"], "\[TildeTilde]", 
    RowBox[{"35", 
     StyleBox["m",
      FontSlant->"Plain"]}]}], ",", " ", 
   RowBox[{
    SubscriptBox["\[Theta]", "max"], "\[TildeTilde]", 
    RowBox[{"42", "\[Degree]"}]}]}], TraditionalForm]], "DisplayFormula",Expre\
ssionUUID->"fe607734-3729-4e8e-b73e-a849bf3e3f4d"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Kick Length", "Section",ExpressionUUID->"83cb7efb-74f9-49c7-bc0a-32c858940cc2"],

Cell[CellGroupData[{

Cell["Solution to the differential equations", "Subsection",ExpressionUUID->"0689b3ed-5547-40c0-815e-4d3bc101d4e9"],

Cell[TextData[{
 "The angle ",
 Cell[BoxData[
  FormBox["\[Theta]", TraditionalForm]],ExpressionUUID->
  "c49e2c50-b65e-4b1a-beb7-08f82a0ab1d9"],
 " is set which gives initial values ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"x", "(", "0", ")"}], ",", 
      RowBox[{"y", "(", "0", ")"}]}], ")"}], "=", 
    RowBox[{"(", 
     RowBox[{"0", ",", "0"}], ")"}]}], TraditionalForm]],ExpressionUUID->
  "0c6ca47d-fe9a-4595-96e1-225659863361"],
 " och ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SuperscriptBox["x", "\[Prime]",
        MultilineFunction->None], "(", "0", ")"}], ",", 
      RowBox[{
       SuperscriptBox["y", "\[Prime]",
        MultilineFunction->None], "(", "0", ")"}]}], ")"}], "=", 
    RowBox[{
     SubscriptBox["v", "0"], "(", 
     RowBox[{
      RowBox[{"cos", "(", "\[Theta]", ")"}], ",", 
      RowBox[{"sin", "(", "\[Theta]", ")"}]}], ")"}]}], TraditionalForm]],
  ExpressionUUID->"a26259d0-cb7f-4698-802a-9789cd1fcea3"],
 ". Thereafter, the differential equations are solved numerically."
}], "Text",ExpressionUUID->"383b1d75-69c5-40a2-b206-cf298a0dbe4c"],

Cell[BoxData[
 FormBox[
  TagBox[Cell[BoxData[
    FormBox[
     RowBox[{"\[Piecewise]", GridBox[{
        {
         RowBox[{
          RowBox[{"m", " ", 
           SuperscriptBox["x", "\[Prime]\[Prime]",
            MultilineFunction->None], 
           RowBox[{"(", "t", ")"}]}], "=", 
          RowBox[{
           RowBox[{"-", "\[Mu]"}], " ", 
           RowBox[{
            SuperscriptBox["x", "\[Prime]",
             MultilineFunction->None], "(", "t", ")"}], 
           SqrtBox[
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox["x", "\[Prime]",
                MultilineFunction->None], "(", "t", ")"}], ")"}], "2"]]}]}]},
        {
         RowBox[{
          RowBox[{"m", " ", 
           SuperscriptBox["y", "\[Prime]\[Prime]",
            MultilineFunction->None], 
           RowBox[{"(", "t", ")"}]}], "=", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "m"}], " ", "g"}], "-", 
           RowBox[{"\[Mu]", " ", 
            RowBox[{
             SuperscriptBox["y", "\[Prime]",
              MultilineFunction->None], "(", "t", ")"}], 
            SqrtBox[
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                SuperscriptBox["y", "\[Prime]",
                 MultilineFunction->None], "(", "t", ")"}], ")"}], "2"]]}]}]}]}
       }]}], TraditionalForm]], "DisplayFormula",
    CellChangeTimes->{{3.6494831153047237`*^9, 3.64948315219319*^9}, 
      3.649483223906516*^9, {3.6494834560349236`*^9, 
      3.6494834618069334`*^9}, {3.6494839443781815`*^9, 
      3.6494839449709826`*^9}, {3.649484703294715*^9, 3.649484718894743*^9}, 
      3.6494847524816017`*^9, {3.649484784617658*^9, 3.649484791965271*^9}, {
      3.649484822291724*^9, 3.649484854427781*^9}, {3.649484932505918*^9, 
      3.649484974610392*^9}, {3.64948505320333*^9, 3.6494850973202076`*^9}, 
      3.649485157817114*^9},ExpressionUUID->
    "1e80ff74-68c4-4ae6-b7e5-b49c5b8efe66"],
   DisplayForm], TraditionalForm]], "DisplayFormula",
 GridBoxOptions->{
 GridBoxAlignment->{
  "Columns" -> {{
     Left}}}},ExpressionUUID->"118ed50e-a293-4853-8a2e-287f0e82de88"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`\[Theta]$$ = 45 Degree, Typeset`show$$ = 
    True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`\[Theta]$$], 45 Degree}, 25 Degree, 55 Degree}}, 
    Typeset`size$$ = {360., {100., 106.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    False, $CellContext`\[Theta]$160158$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`\[Theta]$$ = 45 Degree}, 
      "ControllerVariables" :> {
        Hold[$CellContext`\[Theta]$$, $CellContext`\[Theta]$160158$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> ParametricPlot[
        Evaluate[
         ReplaceAll[{
           $CellContext`x[$CellContext`t], 
           $CellContext`y[$CellContext`t]}, 
          $CellContext`sol[$CellContext`\[Theta]$$]]], {$CellContext`t, 0, 
         3.5}, AxesLabel -> {
         "\!\(\*\nStyleBox[\"x\",\nFontSlant->\"Italic\"]\)", 
          "\!\(\*\nStyleBox[\"y\",\nFontSlant->\"Italic\"]\)"}, PlotLabel -> 
        StringForm["\[Theta] = `1`\[Degree]", $CellContext`\[Theta]$$/Degree],
         PlotRange -> {{0, 40}, {-5, 15}}], 
      "Specifications" :> {{{$CellContext`\[Theta]$$, 45 Degree}, 25 Degree, 
         55 Degree}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{405., {148., 154.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({$CellContext`sol[
         Pattern[$CellContext`\[Theta], 
          Blank[]]] := NDSolve[
         $CellContext`de[$CellContext`\[Theta]], {$CellContext`x, \
$CellContext`y}, {$CellContext`t, 0, 5}], $CellContext`de[
         Pattern[$CellContext`\[Theta], 
          Blank[]]] := {$CellContext`m 
          Derivative[
           2][$CellContext`x][$CellContext`t] == ((-$CellContext`\[Mu]) 
           Derivative[1][$CellContext`x][$CellContext`t]) 
          Sqrt[Derivative[
             1][$CellContext`x][$CellContext`t]^2], $CellContext`m 
          Derivative[
           2][$CellContext`y][$CellContext`t] == (-$CellContext`m) \
$CellContext`g - ($CellContext`\[Mu] 
           Derivative[1][$CellContext`y][$CellContext`t]) 
          Sqrt[Derivative[
             1][$CellContext`y][$CellContext`t]^2], $CellContext`x[0] == 
         0, $CellContext`y[0] == 0, 
         Derivative[1][$CellContext`x][0] == $CellContext`v0 
          Cos[$CellContext`\[Theta]], 
         Derivative[1][$CellContext`y][0] == $CellContext`v0 
          Sin[$CellContext`\[Theta]]}, $CellContext`m = 0.4, 
       Attributes[Derivative] = {NHoldAll, ReadProtected}, $CellContext`\[Mu] = 
       0.01, $CellContext`g = 9.8, $CellContext`v0 = 25}; 
     Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Text",
 CellContext->Cell,ExpressionUUID->"074ea7d8-b624-46a1-b77a-71901ede70e6"],

Cell[TextData[{
 "The kick time ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["t", "0"], TraditionalForm]],ExpressionUUID->
  "3e4fc240-500b-4eda-b341-bd57def15825"],
 " is determined so that ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"y", "(", 
     SubscriptBox["t", "0"], ")"}], "=", "0"}], TraditionalForm]],
  ExpressionUUID->"1d15cef2-fceb-4268-b442-a5749adf2d92"],
 ". Finally, the kick length is ",
 Cell[BoxData[
  FormBox[
   RowBox[{"L", "=", 
    RowBox[{"x", "(", 
     SubscriptBox["t", "0"], ")"}]}], TraditionalForm]],ExpressionUUID->
  "68470181-c55f-44e1-a2a9-d5b4141774ea"],
 ". "
}], "Text",ExpressionUUID->"427597e8-0af3-4ace-b4d8-fdc224fc7b7b"],

Cell[TextData[{
 "The above procedure is repeated for different angles and then interpolated \
a function ",
 Cell[BoxData[
  FormBox[
   RowBox[{"L", "(", "\[Theta]", ")"}], TraditionalForm]],ExpressionUUID->
  "6dd02b23-5d53-491c-ab05-898142e99c84"],
 " whose maximum is determined."
}], "Text",ExpressionUUID->"72c1b14d-47b0-4f44-a221-f0ce2ebcfc6d"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    SubscriptBox["L", "max"], "\[TildeTilde]", 
    RowBox[{"35", 
     StyleBox["m",
      FontSlant->"Plain"]}]}], ",", " ", 
   RowBox[{
    SubscriptBox["\[Theta]", "max"], "\[TildeTilde]", 
    RowBox[{"42", "\[Degree]"}]}]}], TraditionalForm]], "DisplayFormula",Expre\
ssionUUID->"69a267a0-0db2-4395-843b-559dcfa8d60e"]
}, Closed]],

Cell[CellGroupData[{

Cell["Calculation of kick time and kick length", "Subsection",ExpressionUUID->"a5dee6dc-e40d-412d-bc72-cb48cb6b5209"],

Cell[TextData[{
 "The time ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["t", "0"], TraditionalForm]],ExpressionUUID->
  "0eb6b34b-1170-4217-a3b1-6302439caad8"],
 " is determined so that ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"y", "(", 
     SubscriptBox["t", "0"], ")"}], "=", "0"}], TraditionalForm]],
  ExpressionUUID->"45f4f3bf-a1ad-4153-b77a-75584136cc83"],
 ". Finally the kick length is computed as ",
 Cell[BoxData[
  FormBox[
   RowBox[{"L", "=", 
    RowBox[{"x", "(", 
     SubscriptBox["t", "0"], ")"}]}], TraditionalForm]],ExpressionUUID->
  "56b1e9a8-d11c-47b1-8cdb-7e002e4f3d97"],
 ". "
}], "Text",ExpressionUUID->"ebaa4d63-b840-4196-9d61-9d15c1aaff02"],

Cell[TextData[{
 "The solution is repeated for different angles and then interpolated a \
function ",
 Cell[BoxData[
  FormBox[
   RowBox[{"L", "(", "\[Theta]", ")"}], TraditionalForm]],ExpressionUUID->
  "d401c41b-d511-48d2-af98-f5ec77c9f6f5"],
 " whose maximum is determined."
}], "Text",ExpressionUUID->"ab555893-fa7c-4ce4-a382-a9aa18010de5"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      TagBox["\[Theta]",
       HoldForm], "10", "20", "30", "40", "50", "60", "70", "80"},
     {
      TagBox["L",
       HoldForm], "17.243398938857474`", "27.352586387741027`", 
      "32.738772881100324`", "34.632738588882226`", "33.66937491639685`", 
      "30.080861252865706`", "23.75454675154313`", "14.159124216955485`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxDividers->{
     "Columns" -> {False, True, {False}, False}, "ColumnsIndexed" -> {}, 
      "Rows" -> {{False}}, "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   {OutputFormsDump`HeadedRows, None}],
  Function[BoxForm`e$, 
   TableForm[
   BoxForm`e$, 
    TableHeadings -> {{$CellContext`\[Theta], $CellContext`L}, 
      None}]]]], "Output",
 ShowCellBracket->Automatic,
 FontSize->12,ExpressionUUID->"14145529-9fe8-4221-afab-f2abafa6225d"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.019444444444444445`],
      AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
9Jd/nJB+qagkSLAS/wNcK+Y0
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox[
     InterpretationBox["\"\\!\\(TraditionalForm\\`\[Theta]\\) [\[Degree]]\"", 
      StringForm["`1` [\[Degree]]", $CellContext`\[Theta]], Editable -> 
      False], TraditionalForm], 
    FormBox[
     InterpretationBox["\"\\!\\(TraditionalForm\\`\\(L(\[Theta])\\)\\) [m]\"", 
      StringForm["`1` [m]", 
       $CellContext`L[$CellContext`\[Theta]]], Editable -> False], 
     TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotLabel->FormBox["\"sparkl\[ADoubleDot]ngd\"", TraditionalForm],
  PlotRange->{{0, 80.}, {0, 36}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Text",ExpressionUUID->"7d165e76-d0c4-40b4-\
80a4-49a6f50ee15a"],

Cell["The maximum is computed as", "Text",ExpressionUUID->"7197b174-85aa-49df-bc5e-85781da71591"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    SubscriptBox["L", "max"], "\[TildeTilde]", 
    RowBox[{"35", 
     StyleBox["m",
      FontSlant->"Plain"]}]}], ",", " ", 
   RowBox[{
    SubscriptBox["\[Theta]", "max"], "\[TildeTilde]", 
    RowBox[{"41", "\[Degree]"}]}]}], TraditionalForm]], "DisplayFormula",Expre\
ssionUUID->"39d3b2ac-2f35-4c84-97c8-c2f8d5d81890"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Code", "Section",ExpressionUUID->"2b00b3de-35aa-4a76-8352-7cea3b011e46"],

Cell[BoxData[
 RowBox[{"ClearAll", "[", "\"\<`*\>\"", "]"}]], "Input",ExpressionUUID->"78e95c2b-95b5-4921-b45f-4811389e3a38"],

Cell["Enter given data.", "Text",ExpressionUUID->"21d50c9e-bfb9-428e-9d3b-9e853d34952e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"m", "=", "0.4"}], ";", 
  RowBox[{"\[Mu]", "=", "0.01"}], ";", 
  RowBox[{"g", "=", "9.8"}], ";", 
  RowBox[{"v0", "=", "25"}], ";"}]], "Input",ExpressionUUID->"db8547b6-be31-\
4d85-a136-942a242ce9fb"],

Cell["Define differential equations and there initial conditions.", "Text",ExpressionUUID->"0e68d567-cdba-47e3-9079-16529b597a21"],

Cell[BoxData[
 RowBox[{
  RowBox[{"de", "[", "\[Theta]_", "]"}], ":=", 
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"m", " ", 
      RowBox[{
       RowBox[{"x", "''"}], "[", "t", "]"}]}], "\[Equal]", 
     RowBox[{
      RowBox[{"-", "\[Mu]"}], " ", 
      RowBox[{
       RowBox[{"x", "'"}], "[", "t", "]"}], 
      SqrtBox[
       SuperscriptBox[
        RowBox[{
         RowBox[{"x", "'"}], "[", "t", "]"}], "2"]]}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"m", " ", 
      RowBox[{
       RowBox[{"y", "''"}], "[", "t", "]"}]}], "\[Equal]", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "m"}], " ", "g"}], "-", 
      RowBox[{"\[Mu]", " ", 
       RowBox[{
        RowBox[{"y", "'"}], "[", "t", "]"}], 
       SqrtBox[
        SuperscriptBox[
         RowBox[{
          RowBox[{"y", "'"}], "[", "t", "]"}], "2"]]}]}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"x", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
    RowBox[{
     RowBox[{"y", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"x", "'"}], "[", "0", "]"}], "\[Equal]", 
     RowBox[{"v0", " ", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"y", "'"}], "[", "0", "]"}], "\[Equal]", 
     RowBox[{"v0", " ", 
      RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}]}], "\[IndentingNewLine]", 
   "}"}]}]], "Input",ExpressionUUID->"303396bf-bb07-4ba4-aeca-b45289854016"],

Cell["Solve the DE.", "Text",ExpressionUUID->"7ee4ab93-a1fa-46f3-ad38-91bbd6196442"],

Cell[BoxData[
 RowBox[{
  RowBox[{"sol", "[", "\[Theta]_", "]"}], ":=", 
  RowBox[{"NDSolve", "[", 
   RowBox[{
    RowBox[{"de", "[", "\[Theta]", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "y"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", "5"}], "}"}]}], "]"}]}]], "Input",ExpressionU\
UID->"7e612b5b-a362-4a99-aefa-d8ef28cbcf1d"],

Cell[TextData[{
 "Example for ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Theta]", "=", 
    RowBox[{"45", "\[Degree]"}]}], TraditionalForm]],ExpressionUUID->
  "b38c910e-83de-4ca5-a47a-ced3d9feceae"]
}], "Text",ExpressionUUID->"6be87396-4d51-49a2-96ef-fb9955751f49"],

Cell[BoxData[
 RowBox[{"sol", "[", 
  RowBox[{"45", "\[Degree]"}], "]"}]], "Input",ExpressionUUID->"cb160d51-ab97-\
43f8-b291-f08aa366cf8b"],

Cell[BoxData[
 RowBox[{"ParametricPlot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"x", "[", "t", "]"}], ",", 
       RowBox[{"y", "[", "t", "]"}]}], "}"}], "/.", 
     RowBox[{"sol", "[", 
      RowBox[{"45", "\[Degree]"}], "]"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "3.5"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*StyleBox[\"x\",FontSlant->\"Italic\"]\)\>\"", ",", 
      "\"\<\!\(\*StyleBox[\"y\",FontSlant->\"Italic\"]\)\>\""}], "}"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "40"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "5"}], ",", "15"}], "}"}]}], "}"}]}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",ExpressionUUID->"dcc29bc3-7a9f-4ce0-\
97c4-6735ba118825"],

Cell["The curve for different angles.", "Text",ExpressionUUID->"d52e22f7-3cd0-4d5a-8d9b-8dfad5ccbff0"],

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ParametricPlot", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "[", "t", "]"}], ",", 
         RowBox[{"y", "[", "t", "]"}]}], "}"}], "/.", 
       RowBox[{"sol", "[", "\[Theta]", "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "3.5"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\!\(\*StyleBox[\"x\",FontSlant->\"Italic\"]\)\>\"", ",", 
        "\"\<\!\(\*StyleBox[\"y\",FontSlant->\"Italic\"]\)\>\""}], "}"}]}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"PlotLabel", "\[Rule]", 
      RowBox[{"StringForm", "[", 
       RowBox[{"\"\<\[Theta] = `1`\[Degree]\>\"", ",", 
        RowBox[{"\[Theta]", "/", "Degree"}]}], "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "40"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "5"}], ",", "15"}], "}"}]}], "}"}]}]}], 
    "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Theta]", ",", 
       RowBox[{"45", "\[Degree]"}]}], "}"}], ",", 
     RowBox[{"25", "\[Degree]"}], ",", 
     RowBox[{"55", "\[Degree]"}]}], "}"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",ExpressionUUID->"fbf96614-bbbb-49fc-9e4b-97abdc499a76"],

Cell["The function for kick length.", "Text",ExpressionUUID->"fa917d29-08a1-4229-a772-c50846b24666"],

Cell[BoxData[
 RowBox[{
  RowBox[{"len", "[", "\[Theta]_", "]"}], ":=", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", "t0", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"t0", "=", 
      RowBox[{"t", "/.", 
       RowBox[{"FindRoot", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Evaluate", "[", 
           RowBox[{
            RowBox[{"y", "[", "t", "]"}], "/.", 
            RowBox[{"sol", "[", "\[Theta]", "]"}]}], "]"}], "\[Equal]", "0"}],
          ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "2", ",", "4"}], "}"}]}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"First", "[", 
      RowBox[{
       RowBox[{"x", "[", "t0", "]"}], "/.", 
       RowBox[{"sol", "[", "\[Theta]", "]"}]}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",ExpressionUUID->"c1e034ed-d2a6-\
408c-94b9-25c49699acb1"],

Cell["Example", "Text",ExpressionUUID->"00d812ab-572e-47ed-acf5-365ddd647edb"],

Cell[BoxData[
 RowBox[{"len", "[", 
  RowBox[{"45", "\[Degree]"}], "]"}]], "Input",ExpressionUUID->"ad6e56a3-7579-\
40a4-9bd1-26f4acf6a37a"],

Cell["A table for different angles.", "Text",ExpressionUUID->"fceafb35-1f98-460f-8274-1a8c8e8f8417"],

Cell[BoxData[
 RowBox[{"data", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\[Theta]", ",", 
      RowBox[{"len", "[", 
       RowBox[{"\[Theta]", " ", "\[Degree]"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Theta]", ",", "10", ",", "80", ",", "10"}], "}"}]}], 
   "]"}]}]], "Input",ExpressionUUID->"0471da91-f836-431c-8caa-5d5056014222"],

Cell[BoxData[
 RowBox[{"TableForm", "[", 
  RowBox[{
   RowBox[{"Transpose", "[", "data", "]"}], ",", 
   RowBox[{"TableHeadings", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[Theta]", ",", "L"}], "}"}], ",", "None"}], "}"}]}]}], 
  "]"}]], "Input",ExpressionUUID->"e5f86be7-1a31-4c62-856b-4aa788e537d8"],

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{"data", ",", 
   RowBox[{"InterpolationOrder", "\[Rule]", "3"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "36"}], "}"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"StringForm", "[", 
       RowBox[{"\"\<`1` [\[Degree]]\>\"", ",", "\[Theta]"}], "]"}], ",", 
      RowBox[{"StringForm", "[", 
       RowBox[{"\"\<`1` [m]\>\"", ",", 
        RowBox[{"L", "[", "\[Theta]", "]"}]}], "]"}]}], "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<sparkl\[ADoubleDot]ngd\>\""}]}], 
  "]"}]], "Input",ExpressionUUID->"a5f4b01e-b579-4738-a9b8-215607b2c092"],

Cell["Higher accuracy around the max value.", "Text",ExpressionUUID->"3641d113-384a-42e6-95e5-66f241fec469"],

Cell[BoxData[
 RowBox[{"data2", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Theta]", " ", "Degree"}], ",", 
      RowBox[{"len", "[", 
       RowBox[{"\[Theta]", " ", "Degree"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Theta]", ",", "35", ",", "45", ",", "1"}], "}"}]}], 
   "]"}]}]], "Input",ExpressionUUID->"6f53c218-118e-4a94-b689-b278e7515043"],

Cell["Now, search for the maximum.", "Text",ExpressionUUID->"2109f8c6-bc29-4def-80c9-3b09adcdfcd8"],

Cell[BoxData[
 RowBox[{"max", "=", 
  RowBox[{"FindMaximum", "[", 
   RowBox[{
    RowBox[{"length", "[", "\[Theta]", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Theta]", ",", 
      RowBox[{"40", "\[Degree]"}], ",", 
      RowBox[{"45", "\[Degree]"}]}], "}"}]}], "]"}]}]], "Input",ExpressionUUID\
->"9181b388-7a00-421f-8c68-de58e9ad6534"],

Cell[BoxData[
 RowBox[{"\[Theta]0", "=", 
  FractionBox[
   RowBox[{"\[Theta]", "/.", 
    RowBox[{"max", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
   "Degree"]}]], "Input",ExpressionUUID->"7cd982a4-cee1-46b0-b034-\
8f77e4d519e9"]
}, Closed]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{Full, Full},
WindowMargins->{{12, Automatic}, {Automatic, 24}},
PageHeaders->{{None, None, None}, {
   Cell[
    TextData[{"KTH/ICT - Kommunikationssystem"}], "PageHeader", FontFamily -> 
    "Arial", FontSize -> 9], None, None}},
PageFooters->{{None, None, None}, {None, 
   Cell[
    TextData[{
      CounterBox["Page"]}], "PageNumber"], None}},
PrintingOptions->{"FacingPages"->False},
TrackCellChangeTimes->True,
FrontEndVersion->"12.3 for Mac OS X ARM (64-bit) (September 30, 2021)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]], 
   Cell["Modify the definitions below to change the default appearance of all \
cells in a given style. \nMake modifications to any definition using commands \
in the Format menu.", "Text"], 
   Cell[
    CellGroupData[{
      Cell["Notebook Options Settings", "Section"], 
      Cell[
       StyleData["Notebook"], ShowCellBracket -> Automatic]}, Closed]], 
   Cell[
    CellGroupData[{
      Cell["Styles for Title and Section Cells", "Section"], 
      Cell[
       CellGroupData[{
         Cell["Title", "Subsection"], 
         Cell[
          StyleData["Title"], FontFamily -> "Arial", FontSize -> 36, 
          FontWeight -> "Bold", FontColor -> GrayLevel[0.5]], 
         Cell[
          StyleData["Subtitle"], FontFamily -> "Arial", FontWeight -> "Bold"], 
         Cell[
          StyleData["Subsubtitle"], FontFamily -> "Arial", FontSize -> 18]}, 
        Closed]], 
      Cell[
       CellGroupData[{
         Cell[
         "Chapter", "Subsection", 
          CellChangeTimes -> {{3.6182073006504073`*^9, 
           3.6182073204926414`*^9}}], 
         Cell[
          StyleData["Chapter"], FontFamily -> "Arial", FontSize -> 34, 
          FontWeight -> "Plain", FontSlant -> "Plain", 
          FontVariations -> {"StrikeThrough" -> False, "Underline" -> False}], 
         Cell[
          StyleData["Subchapter"], CellDingbat -> 
          StyleBox["\[FilledSmallSquare]", Alignment -> Baseline, 
            RGBColor[
            0.09803921568627451, 0.32941176470588235`, 0.6509803921568628]], 
          FontFamily -> "Arial", FontSize -> 28, FontWeight -> "Plain", 
          FontSlant -> "Plain", 
          FontVariations -> {
           "StrikeThrough" -> False, "Underline" -> False}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Section", "Subsection"], 
         Cell[
          StyleData["Section"], CellDingbat -> None, ShowGroupOpener -> True, 
          FontFamily -> "Arial", FontSize -> 24, FontWeight -> "Bold", 
          FontColor -> GrayLevel[0.5]], 
         Cell[
          StyleData["Subsection"], CellDingbat -> None, ShowGroupOpener -> 
          True, CellMargins -> {{40., 3.}, {8., 12.}}, FontFamily -> "Arial", 
          FontSize -> 18, FontWeight -> "Bold", FontColor -> GrayLevel[0.3]], 
         Cell[
          StyleData["Subsubsection"], CellDingbat -> None, ShowGroupOpener -> 
          True, CellMargins -> {{53., Inherited}, {2, 10}}, FontFamily -> 
          "Arial", FontSize -> 16, FontWeight -> "Bold", FontColor -> 
          GrayLevel[0.]], 
         Cell[
          StyleData["Subsubsubsection"], CellDingbat -> None, ShowGroupOpener -> 
          True, MenuSortingValue -> 1400, FontFamily -> "Arial Narrow", 
          FontSize -> 14, FontWeight -> "Bold", FontSlant -> "Plain", 
          FontVariations -> {"StrikeThrough" -> False, "Underline" -> False}, 
          FontColor -> GrayLevel[0]]}, Closed]]}, Closed]], 
   Cell[
    CellGroupData[{
      Cell["Styles for Body Text", "Section"], 
      Cell[
       CellGroupData[{
         Cell["Standard", "Subsection"], 
         Cell[
          StyleData["Text"], FontFamily -> "Times"], 
         Cell[
          StyleData["SmallText"], MenuSortingValue -> 1425, FontFamily -> 
          "Times"]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Display", "Subsection"], 
         Cell[
          CellGroupData[{
            Cell["Lists", "Subsubsection"], 
            Cell[
             StyleData["Item"], CellDingbat -> 
             StyleBox["\[FilledCircle]", Alignment -> Baseline, 
               GrayLevel[0.3]], FontFamily -> "Times"], 
            Cell[
             StyleData["ItemParagraph"], FontFamily -> "Times"], 
            Cell[
             StyleData["Subitem"], CellDingbat -> 
             StyleBox["\[FilledSmallCircle]", Alignment -> Baseline, 
               GrayLevel[0.3]], FontFamily -> "Times"], 
            Cell[
             StyleData["SubitemParagraph"], FontFamily -> "Times"], 
            Cell[
             StyleData["Subsubitem"], CellDingbat -> 
             StyleBox["\[FilledSmallCircle]", Alignment -> Baseline, 
               GrayLevel[0.5]], FontFamily -> "Times"], 
            Cell[
             StyleData["SubsubitemParagraph"], FontFamily -> "Times"], 
            Cell[
             StyleData["ItemNumbered"], FontFamily -> "Times"], 
            Cell[
             StyleData["SubitemNumbered"], FontFamily -> "Times"], 
            Cell[
             StyleData["SubsubitemNumbered"], FontFamily -> "Times"]}, 
           Closed]], 
         Cell[
          CellGroupData[{
            Cell["Templates", "Subsubsection"], 
            Cell[
             StyleData[
             "SideCaptionArray", StyleDefinitions -> StyleData["Text"]], 
             GridBoxOptions -> {
              GridBoxAlignment -> {"Columns" -> {Left}, "Rows" -> {Center}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}}], 
            Cell[
             StyleData[
             "SideCaption", StyleDefinitions -> StyleData["SmallText"]]]}, 
           Closed]]}, Closed]]}, Closed]], 
   Cell[
    CellGroupData[{
      Cell["Styles for Input and Output Cells", "Section"], 
      Cell[
       StyleData["Input"], ShowCellBracket -> True], 
      Cell[
       StyleData["InputOnly"], ShowCellBracket -> True], 
      Cell[
       StyleData["Code"], ShowCellBracket -> True], 
      Cell[
       StyleData["Output"], ShowCellBracket -> True], 
      Cell[
       StyleData["Message"], ShowCellBracket -> True], 
      Cell[
       StyleData["Print"], ShowCellBracket -> True]}, Closed]], 
   Cell[
    CellGroupData[{
      Cell["Styles for Formulas and Programming", "Section"], 
      Cell[
       StyleData["InlineFormula"]], 
      Cell[
       StyleData["DisplayFormula"], FontFamily -> "Times"], 
      Cell[
       StyleData["DisplayFormulaNumbered"], FontFamily -> "Times"], 
      Cell[
       StyleData["Program"], ShowCellBracket -> True]}, Closed]], 
   Cell[
    CellGroupData[{
      Cell["Citation Styles", "Section"], 
      Cell[
       StyleData["Reference"]]}, Closed]], 
   Cell[
    CellGroupData[{
      Cell[
       TextData[{"Styles for ", 
         StyleBox["Mathematica", FontSlant -> "Italic"], 
         " System\[Hyphen]specific Elements"}], "Section"], 
      Cell[
       CellGroupData[{
         Cell["Default Box Styles", "Subsection"], 
         Cell[
          StyleData["Graphics"], FontFamily -> "Times"], 
         Cell[
          StyleData["Graphics3D"], FontFamily -> "Times"], 
         Cell[
          StyleData["NetworkGraphics"], FontFamily -> "Times"]}, Closed]]}, 
     Closed]]}, Visible -> False, FrontEndVersion -> 
  "12.3 for Mac OS X ARM (64-bit) (September 30, 2021)", StyleDefinitions -> 
  "PrivateStylesheetFormatting.nb"],
ExpressionUUID->"e0763a5c-f8dd-4d45-9e7f-074fd360102d"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 89, 0, 81, "Title",ExpressionUUID->"2e086750-1cf1-4c43-bc57-bac07652a650"],
Cell[672, 24, 188, 6, 50, "Text",ExpressionUUID->"679e81cd-23f2-4ac3-aad0-55498a6469d8"],
Cell[863, 32, 208, 6, 50, "Text",ExpressionUUID->"39bfcd1a-7896-4364-9d2c-9b6c98366775"],
Cell[CellGroupData[{
Cell[1096, 42, 252, 4, 63, "Subchapter",ExpressionUUID->"2760ab7a-2fed-4ae4-a63f-890119ad5062"],
Cell[CellGroupData[{
Cell[1373, 50, 151, 3, 59, "Section",ExpressionUUID->"28ab532a-4f99-4328-b494-a8a51a0e3e70"],
Cell[CellGroupData[{
Cell[1549, 57, 81, 0, 41, "Subsection",ExpressionUUID->"4df8543c-22f8-401d-8973-c66d5fa62864"],
Cell[1633, 59, 1028, 28, 316, "Text",ExpressionUUID->"8ad5d4da-afa2-434b-a402-a9f9b705fa59"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2698, 92, 83, 0, 41, "Subsection",ExpressionUUID->"39a0ef6c-6a2c-4081-9062-84513a76c571"],
Cell[2784, 94, 250, 4, 52, "Input",ExpressionUUID->"32be9a5f-94e1-47ff-bec6-06b360fcaaa5"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[3083, 104, 91, 0, 59, "Section",ExpressionUUID->"6943093f-8a76-4b29-9b2d-76d8c3875b28"],
Cell[CellGroupData[{
Cell[3199, 108, 105, 0, 41, "Subsection",ExpressionUUID->"7e65a304-4725-4568-8fa8-1b4ca87c4741"],
Cell[3307, 110, 151, 3, 34, "Text",ExpressionUUID->"57c81f3b-dc2c-428a-855d-1236601a6b98"],
Cell[3461, 115, 253, 6, 31, "Text",ExpressionUUID->"b5296189-ed85-4987-8559-0d74e0c1f6bb"],
Cell[3717, 123, 269, 9, 22, "DisplayFormula",ExpressionUUID->"573237c8-75ae-4199-9bf0-4ac72198bfe5"],
Cell[3989, 134, 156, 3, 30, InheritFromParent,ExpressionUUID->"47fdcca8-2461-4bbc-b04b-1a672350c9e6"],
Cell[4148, 139, 268, 7, 32, "Text",ExpressionUUID->"d0114fc7-f658-4d48-baf9-5a780b6aa139"],
Cell[4419, 148, 12534, 222, 150, "Text",ExpressionUUID->"8bfb2cc7-6ae9-413a-aff0-d6caabb7a3f7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[16990, 375, 93, 0, 41, "Subsection",ExpressionUUID->"1db48066-a568-4f09-a9b7-7f37a8e3983c"],
Cell[17086, 377, 167, 3, 31, "Text",ExpressionUUID->"120fe2be-e9fd-490f-97d7-443683eceefc"],
Cell[17256, 382, 290, 8, 42, "DisplayFormula",ExpressionUUID->"5148f49d-d583-4470-9eb3-2dfd15ad68fc"],
Cell[17549, 392, 289, 8, 26, "DisplayFormula",ExpressionUUID->"2d9be42f-b4f3-4733-92b9-c8c8674f099e"],
Cell[17841, 402, 301, 9, 34, "Text",ExpressionUUID->"f501fe3a-3b2d-4a60-a1c1-3ae1716bef10"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[18191, 417, 163, 3, 59, "Section",ExpressionUUID->"eb232638-2837-4382-9654-616c94d28459"],
Cell[18357, 422, 286, 7, 52, "Input",ExpressionUUID->"724ad548-2c8d-4dfd-82a4-53b64348dd55"],
Cell[CellGroupData[{
Cell[18668, 433, 1997, 49, 110, "Code",ExpressionUUID->"4c0cfd7e-bd83-42cd-9ed5-b121f577894f"],
Cell[20668, 484, 1371, 38, 60, "Output",ExpressionUUID->"59bba24f-2d09-4f8c-a573-5d36ffd94829"]
}, Open  ]],
Cell[CellGroupData[{
Cell[22076, 527, 875, 22, 52, "Input",ExpressionUUID->"10119438-007f-4429-a5a0-bee11d87af84"],
Cell[22954, 551, 1238, 26, 299, "Output",ExpressionUUID->"f9b04900-031a-44e3-953d-a1a4e8d75a0d"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[24241, 583, 149, 3, 59, "Section",ExpressionUUID->"d13fe2a6-2314-4011-bd36-9098b2a50549"],
Cell[24393, 588, 29012, 863, 5772, "Code",ExpressionUUID->"f10aa016-c174-4f35-8bc4-31815cb2be6a"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[53454, 1457, 96, 0, 63, "Subchapter",ExpressionUUID->"099ee814-8db2-4a63-8b88-1c9110418edc"],
Cell[CellGroupData[{
Cell[53575, 1461, 154, 3, 59, "Section",ExpressionUUID->"4332511c-4b0e-4fff-a557-cc5bbf57a309"],
Cell[CellGroupData[{
Cell[53754, 1468, 81, 0, 41, "Subsection",ExpressionUUID->"5c103694-4f0e-4da5-8449-310c802b22a8"],
Cell[53838, 1470, 162, 3, 30, "Text",ExpressionUUID->"c299c6da-f79a-4138-80fb-9d77fb5a52bc"],
Cell[54003, 1475, 2092, 53, 46, "DisplayFormula",ExpressionUUID->"27cae548-12cc-478c-8bfe-277d63403154"],
Cell[56098, 1530, 593, 14, 49, "Text",ExpressionUUID->"4b8eab51-f160-44c4-ab8d-a5efeaede9d4"],
Cell[56694, 1546, 528, 18, 30, "DisplayFormula",ExpressionUUID->"138da779-b707-4019-a122-1b30b08c05c4"]
}, Closed]],
Cell[CellGroupData[{
Cell[57259, 1569, 83, 0, 33, "Subsection",ExpressionUUID->"7b609863-e4df-4ca9-8aa1-cbe4137518cf"],
Cell[57345, 1571, 373, 8, 49, "Text",ExpressionUUID->"e21c54be-d0fb-4236-8998-57acdd091c0d"],
Cell[57721, 1581, 372, 11, 24, "DisplayFormula",ExpressionUUID->"fe607734-3729-4e8e-b73e-a849bf3e3f4d"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[58142, 1598, 85, 0, 45, "Section",ExpressionUUID->"83cb7efb-74f9-49c7-bc0a-32c858940cc2"],
Cell[CellGroupData[{
Cell[58252, 1602, 115, 0, 41, "Subsection",ExpressionUUID->"0689b3ed-5547-40c0-815e-4d3bc101d4e9"],
Cell[58370, 1604, 1176, 35, 49, "Text",ExpressionUUID->"383b1d75-69c5-40a2-b206-cf298a0dbe4c"],
Cell[59549, 1641, 2172, 55, 70, "DisplayFormula",ExpressionUUID->"118ed50e-a293-4853-8a2e-287f0e82de88"],
Cell[61724, 1698, 3500, 69, 319, "Text",ExpressionUUID->"074ea7d8-b624-46a1-b77a-71901ede70e6"],
Cell[65227, 1769, 675, 21, 30, "Text",ExpressionUUID->"427597e8-0af3-4ace-b4d8-fdc224fc7b7b"],
Cell[65905, 1792, 352, 8, 49, "Text",ExpressionUUID->"72c1b14d-47b0-4f44-a221-f0ce2ebcfc6d"],
Cell[66260, 1802, 372, 11, 24, "DisplayFormula",ExpressionUUID->"69a267a0-0db2-4395-843b-559dcfa8d60e"]
}, Closed]],
Cell[CellGroupData[{
Cell[66669, 1818, 117, 0, 33, "Subsection",ExpressionUUID->"a5dee6dc-e40d-412d-bc72-cb48cb6b5209"],
Cell[66789, 1820, 681, 21, 30, "Text",ExpressionUUID->"ebaa4d63-b840-4196-9d61-9d15c1aaff02"],
Cell[67473, 1843, 345, 8, 30, "Text",ExpressionUUID->"ab555893-fa7c-4ce4-a382-a9aa18010de5"],
Cell[67821, 1853, 1229, 32, 42, "Output",ExpressionUUID->"14145529-9fe8-4221-afab-f2abafa6225d"],
Cell[69053, 1887, 5051, 95, 262, "Text",ExpressionUUID->"7d165e76-d0c4-40b4-80a4-49a6f50ee15a"],
Cell[74107, 1984, 97, 0, 30, "Text",ExpressionUUID->"7197b174-85aa-49df-bc5e-85781da71591"],
Cell[74207, 1986, 372, 11, 24, "DisplayFormula",ExpressionUUID->"39d3b2ac-2f35-4c84-97c8-c2f8d5d81890"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[74628, 2003, 78, 0, 45, "Section",ExpressionUUID->"2b00b3de-35aa-4a76-8352-7cea3b011e46"],
Cell[74709, 2005, 125, 1, 30, "Input",ExpressionUUID->"78e95c2b-95b5-4921-b45f-4811389e3a38"],
Cell[74837, 2008, 88, 0, 30, "Text",ExpressionUUID->"21d50c9e-bfb9-428e-9d3b-9e853d34952e"],
Cell[74928, 2010, 236, 6, 30, "Input",ExpressionUUID->"db8547b6-be31-4d85-a136-942a242ce9fb"],
Cell[75167, 2018, 130, 0, 30, "Text",ExpressionUUID->"0e68d567-cdba-47e3-9079-16529b597a21"],
Cell[75300, 2020, 1488, 47, 144, "Input",ExpressionUUID->"303396bf-bb07-4ba4-aeca-b45289854016"],
Cell[76791, 2069, 84, 0, 30, "Text",ExpressionUUID->"7ee4ab93-a1fa-46f3-ad38-91bbd6196442"],
Cell[76878, 2071, 363, 10, 30, "Input",ExpressionUUID->"7e612b5b-a362-4a99-aefa-d8ef28cbcf1d"],
Cell[77244, 2083, 266, 7, 30, "Text",ExpressionUUID->"6be87396-4d51-49a2-96ef-fb9955751f49"],
Cell[77513, 2092, 140, 3, 30, "Input",ExpressionUUID->"cb160d51-ab97-43f8-b291-f08aa366cf8b"],
Cell[77656, 2097, 976, 27, 88, "Input",ExpressionUUID->"dcc29bc3-7a9f-4ce0-97c4-6735ba118825"],
Cell[78635, 2126, 102, 0, 30, "Text",ExpressionUUID->"d52e22f7-3cd0-4d5a-8d9b-8dfad5ccbff0"],
Cell[78740, 2128, 1590, 41, 183, "Input",ExpressionUUID->"fbf96614-bbbb-49fc-9e4b-97abdc499a76"],
Cell[80333, 2171, 100, 0, 30, "Text",ExpressionUUID->"fa917d29-08a1-4229-a772-c50846b24666"],
Cell[80436, 2173, 897, 25, 107, "Input",ExpressionUUID->"c1e034ed-d2a6-408c-94b9-25c49699acb1"],
Cell[81336, 2200, 78, 0, 30, "Text",ExpressionUUID->"00d812ab-572e-47ed-acf5-365ddd647edb"],
Cell[81417, 2202, 140, 3, 30, "Input",ExpressionUUID->"ad6e56a3-7579-40a4-9bd1-26f4acf6a37a"],
Cell[81560, 2207, 100, 0, 30, "Text",ExpressionUUID->"fceafb35-1f98-460f-8274-1a8c8e8f8417"],
Cell[81663, 2209, 383, 10, 30, "Input",ExpressionUUID->"0471da91-f836-431c-8caa-5d5056014222"],
Cell[82049, 2221, 341, 9, 30, "Input",ExpressionUUID->"e5f86be7-1a31-4c62-856b-4aa788e537d8"],
Cell[82393, 2232, 694, 16, 69, "Input",ExpressionUUID->"a5f4b01e-b579-4738-a9b8-215607b2c092"],
Cell[83090, 2250, 108, 0, 30, "Text",ExpressionUUID->"3641d113-384a-42e6-95e5-66f241fec469"],
Cell[83201, 2252, 412, 11, 30, "Input",ExpressionUUID->"6f53c218-118e-4a94-b689-b278e7515043"],
Cell[83616, 2265, 99, 0, 30, "Text",ExpressionUUID->"2109f8c6-bc29-4def-80c9-3b09adcdfcd8"],
Cell[83718, 2267, 342, 9, 30, "Input",ExpressionUUID->"9181b388-7a00-421f-8c68-de58e9ad6534"],
Cell[84063, 2278, 247, 6, 49, "Input",ExpressionUUID->"7cd982a4-cee1-46b0-b034-8f77e4d519e9"]
}, Closed]]
}, Open  ]]
}, Open  ]]
}
]
*)

