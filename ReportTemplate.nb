(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    225644,       4635]
NotebookOptionsPosition[    212005,       4339]
NotebookOutlinePosition[    219655,       4537]
CellTagsIndexPosition[    219612,       4534]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.872345465875473*^9, 
  3.87234546774129*^9}},ExpressionUUID->"1a1a54d1-f16f-4663-92d9-\
341db90aaaca"],

Cell[CellGroupData[{

Cell["Report on Problem Set 1 ", "Title",
 CellChangeTimes->{{3.8724174192894583`*^9, 3.8724174217695208`*^9}, {
  3.8724234485772057`*^9, 3.872423459643263*^9}, {3.872423623896852*^9, 
  3.872423630794244*^9}},ExpressionUUID->"2e086750-1cf1-4c43-bc57-\
bac07652a650"],

Cell["\<\
Course code: IX1500
Date: 2022-09-18\
\>", "Text",
 CellChangeTimes->{{3.872254125705349*^9, 3.8722541618100367`*^9}, {
  3.8725170015308533`*^9, 
  3.872517005438706*^9}},ExpressionUUID->"679e81cd-23f2-4ac3-aad0-\
55498a6469d8"],

Cell["\<\
AUTHORS:
\tDeni Persson, denip@kth.se
\tWilliam Eriksson, werik@kth.se\
\>", "Text",
 CellChangeTimes->{{3.8722541653374987`*^9, 3.872254206594503*^9}, {
  3.872516998360544*^9, 
  3.872517025344953*^9}},ExpressionUUID->"39bfcd1a-7896-4364-9d2c-\
9b6c98366775"],

Cell[CellGroupData[{

Cell["Task 1: Texas Hold \[OpenCurlyQuote]em Probabilities ", "Subchapter",
 CellChangeTimes->{{3.872254212221635*^9, 3.872254271374174*^9}, {
  3.8722549587709703`*^9, 
  3.872254972015833*^9}},ExpressionUUID->"2760ab7a-2fed-4ae4-a63f-\
890119ad5062"],

Cell[CellGroupData[{

Cell["Summary", "Section",
 CellChangeTimes->{{3.87225428117244*^9, 
  3.872254281320321*^9}},ExpressionUUID->"28ab532a-4f99-4328-b494-\
a8a51a0e3e70"],

Cell[CellGroupData[{

Cell["Task 1", "Subsection",
 CellChangeTimes->{{3.8725168617466*^9, 
  3.872516861913562*^9}},ExpressionUUID->"4df8543c-22f8-401d-8973-\
c66d5fa62864"],

Cell["\<\
In Texas Hold \[OpenCurlyQuote]em poker (7 cards), there are a set number of \
hands - each ranking either higher or lower than the other based on the \
probability of their existence.
The hands are, ranked low-to-high in order of score :
\t* Pair
\t* Two pairs
\t* No pair/high card
\t* Three of a kind
\t* Straight
\t* Flush
\t* Full house
\t* Four of a kind
\t* Straight Flush
\t* Royal Straight Flush
\t
(task 1.a). Determine the probability of each hand after a player\
\[CloseCurlyQuote]s hole cards have been dealt.
(task 1.b). Determine the probability of each hand after a player\
\[CloseCurlyQuote]s hole cards have been dealt plus 3 of 
\tthe 5 community cards has been shown.
\
\>", "Text",
 CellChangeTimes->{{3.872254293363721*^9, 3.8722543246063137`*^9}, {
  3.8722543646734343`*^9, 3.872254687890245*^9}, {3.8722547255972548`*^9, 
  3.8722548527600517`*^9}, {3.872254895436355*^9, 3.872254948223963*^9}, {
  3.872255013992981*^9, 3.872255232490035*^9}, {3.87234553003161*^9, 
  3.872345571601205*^9}, {3.8723462556048822`*^9, 3.872346282708173*^9}, {
  3.872347893233926*^9, 
  3.872347895009287*^9}},ExpressionUUID->"8ad5d4da-afa2-434b-a402-\
a9f9b705fa59"]
}, Closed]],

Cell[CellGroupData[{

Cell["Result", "Subsection",ExpressionUUID->"39a0ef6c-6a2c-4081-9062-84513a76c571"],

Cell["\<\
Running our program, we got the hole cards:
\t{Ace of  Hearts, 7 of Diamonds} 
as well as the community cards:
\t{8 of Diamonds, 11 of Clubs, King of Hearts}.

With these, we ran our program that uses the census method to go through all \
of the 
combinations and got these probabilites.\
\>", "Text",
 CellChangeTimes->{{3.8723464638509283`*^9, 3.872346503309616*^9}, {
  3.872346541426227*^9, 3.872346560182078*^9}, {3.8723466057004843`*^9, 
  3.8723466118211117`*^9}, {3.87234716105091*^9, 3.872347183482136*^9}, {
  3.8723472345330048`*^9, 3.8723473778990507`*^9}, {3.872347430416937*^9, 
  3.872347436733974*^9}, {3.872347471213707*^9, 3.872347515449273*^9}, {
  3.872347855195854*^9, 3.872347886279975*^9}, {3.872495908239771*^9, 
  3.8724959087137127`*^9}},ExpressionUUID->"c5065607-a7e6-4da3-87ac-\
93d5a0d99f57"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  TagBox[GridBox[{
     {"", 
      RowBox[{"        ", 
       RowBox[{"two", " ", "known", " ", "cards"}]}], 
      RowBox[{"       ", 
       RowBox[{"five", " ", "known", " ", "cards"}]}]},
     {
      RowBox[{"One", " ", "Pair"}], "0.7767146821725915", 
      "0.5855689176688251"},
     {
      RowBox[{"Two", " ", "Pairs"}], "0.2533897185146029", 
      "0.08325624421831637"},
     {
      RowBox[{"Three", " ", "Of", " ", "A", " ", "Kind"}], 
      "0.0683569635069569", "0.013876040703052728"},
     {"Straight", "0.027246125092034962", "0.02960222016651249"},
     {"Flush", "0.01971813702354207", "0"},
     {
      RowBox[{"Full", " ", "House"}], "0.022340425531914895", "0"},
     {
      RowBox[{"Four", " ", "Of", " ", "A", " ", "Kind"}], 
      "0.0012592270950933565", "0"},
     {
      RowBox[{"Straight", " ", "Flush"}], "0.0008410579773074818", "0"},
     {
      RowBox[{"Royal", " ", "Straight", " ", "Flush"}], 
      "0.0002331552417451717", "0"}
    },
    AutoDelete->False,
    GridBoxAlignment->{"Columns" -> {{Left}}},
    GridBoxBackground->{"Columns" -> {
        GrayLevel[0.5], None}, "Rows" -> {
        GrayLevel[0.85], None}},
    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
    GridBoxItemStyle->{"Columns" -> {{"Text"}}, "Rows" -> {{"Text"}}},
    GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{1}}}],
   "Grid"]}]], "Text",
 CellChangeTimes->{{3.872256436003867*^9, 3.872256436373304*^9}, {
   3.872346311909375*^9, 3.872346330383478*^9}, 3.872346437529422*^9, {
   3.872346509379629*^9, 3.872346519248699*^9}, {3.87234657684409*^9, 
   3.872346655193584*^9}, 3.872347092239058*^9, {3.872347141345746*^9, 
   3.8723471579347277`*^9}, {3.872347300414731*^9, 3.8723473110407333`*^9}, {
   3.872347638026177*^9, 3.8723476411076612`*^9}, {3.872347676503723*^9, 
   3.872347714523531*^9}, {3.872347756148241*^9, 
   3.87234783240492*^9}},ExpressionUUID->"32be9a5f-94e1-47ff-bec6-\
06b360fcaaa5"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Mathematical Formulas:", "Section",
 CellChangeTimes->{{3.872346149970783*^9, 3.87234615698*^9}, {
  3.872346217801449*^9, 3.8723462257941008`*^9}, {3.872349458889336*^9, 
  3.872349461966363*^9}, {3.872349513540574*^9, 3.872349515119709*^9}, {
  3.8723521077534323`*^9, 
  3.872352113240444*^9}},ExpressionUUID->"6943093f-8a76-4b29-9b2d-\
76d8c3875b28"],

Cell[TextData[{
 "Binomial coefficient for 7 cards in a deck of 52: ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"(", 
     OverscriptBox["7", "52"], ")"}], "=", 
    SubscriptBox["C", "7"]}], TraditionalForm]],ExpressionUUID->
  "b309c010-cede-4ef3-a076-96320f440405"]
}], "Text",
 CellChangeTimes->{{3.87234965878272*^9, 3.8723496991538973`*^9}, {
  3.8723497438202887`*^9, 3.872349745491056*^9}, {3.872349796549922*^9, 
  3.8723498107912197`*^9}, {3.872349852060348*^9, 3.87234989612589*^9}, {
  3.872349935302765*^9, 3.872349971890308*^9}, {3.87235106518473*^9, 
  3.872351086227701*^9}, {3.8723512424041643`*^9, 3.8723512667130213`*^9}, {
  3.872488140004874*^9, 3.8724881431954403`*^9}, {3.872488193781816*^9, 
  3.872488223996332*^9}},ExpressionUUID->"95e29c9d-1ee9-442e-84bd-\
9a6693494379"],

Cell[TextData[{
 "Binomial coefficient for 5 cards ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"(", 
     OverscriptBox["5", "52"], ")"}], "=", 
    SubscriptBox["C", "5"]}], TraditionalForm]],ExpressionUUID->
  "5fd49fcb-9c7b-4108-aa4c-9d3d59ebdf8a"]
}], "Text",
 CellChangeTimes->{{3.872350631058275*^9, 3.872350710486158*^9}, {
  3.872350836673708*^9, 3.872350882040196*^9}, {3.872350917261042*^9, 
  3.872351056900157*^9}},ExpressionUUID->"86caaedd-0425-447b-b5bd-\
657f82723c6d"],

Cell[TextData[{
 "Probability of a certain hand:  ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["P", "h"], "=", " ", 
    FractionBox[
     RowBox[{"|", 
      RowBox[{"h", "(", "S", ")"}], "|"}], 
     RowBox[{"|", "S", "|"}]]}], TraditionalForm]],ExpressionUUID->
  "e943ba21-7796-408d-b2db-46056dc7aa04"],
 ",\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{"|", 
    RowBox[{"h", "(", "S", ")"}], "|"}], TraditionalForm]],ExpressionUUID->
  "d745a2c7-7971-4b0c-9834-48c0e9738979"],
 " is the amount of occurrencies of a certain hand,\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{"S", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"h", "\[Union]", "e"}], ",", " ", 
      RowBox[{"e", "\[Element]", 
       SubscriptBox["C", "n"]}]}], "}"}]}], TraditionalForm]],ExpressionUUID->
  "6aefa5ba-cc0d-42a2-a3bb-9ee8dc3d4bf4"],
 ", \n\t\t",
 Cell[BoxData[
  FormBox["n", TraditionalForm]],ExpressionUUID->
  "3f58e598-c386-4459-8fc1-09cc5ec46810"],
 " is the amount of undetermined cards in the game,\n\t\t",
 Cell[BoxData[
  FormBox["e", TraditionalForm]],ExpressionUUID->
  "ebf96699-d9bd-4982-b89a-ab57abb39c7a"],
 " is an element in the set of possible combinations from C (a set of 5 or 2 \
cards in our task)."
}], "Text",
 InitializationCell->True,
 CellChangeTimes->{{3.8723499117440042`*^9, 3.8723499319611807`*^9}, {
  3.8723499824842787`*^9, 3.8723501116127872`*^9}, {3.872350273007386*^9, 
  3.87235059055064*^9}, {3.872351093205241*^9, 3.8723511011856117`*^9}, {
  3.872351158278903*^9, 3.872351210203948*^9}, {3.8723518383447638`*^9, 
  3.872351969846108*^9}, {3.87235200007402*^9, 3.872352100084441*^9}, {
  3.872488162767235*^9, 
  3.872488167150278*^9}},ExpressionUUID->"048bc31b-4354-46b5-b370-\
6c9a9c48c07f"],

Cell["", "Text",
 CellChangeTimes->{{3.8723501246932993`*^9, 3.872350157459509*^9}, 
   3.872350240146942*^9},ExpressionUUID->"51d4c73d-9e3c-4a0f-a734-\
c6d26821de38"],

Cell["", "Text",
 CellChangeTimes->{{3.872350297510244*^9, 3.8723503034639587`*^9}, {
  3.8723511263866987`*^9, 
  3.8723511273511333`*^9}},ExpressionUUID->"a3aa7323-0445-4aa5-b87e-\
525409f92273"]
}, Closed]],

Cell[CellGroupData[{

Cell["Discussion", "Section",
 CellChangeTimes->{{3.8723492782159557`*^9, 
  3.8723492799442873`*^9}},ExpressionUUID->"0f01609e-0763-4fcd-8fcd-\
2d660c380476"],

Cell[TextData[{
 "We made the choice to make this simulation using python instead of \
mathematica mostly because it is a lot more fun.\n\nThe census method lets us \
simulate the frequency of the various poker hands. \nThe steps in our program \
is as follows:\n\t1. Generate deck.\n\t2. Take two random cards from the deck \
(hole cards).\n\t3. Generate frequencies of each hand based from the hole \
cards.\n\t4. Use the formula ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["P", "h"], TraditionalForm]],ExpressionUUID->
  "9033f896-abf5-4013-8d8f-5746b366ab56"],
 " for each of the hands in the list.\n\t5. Take 3 cards from the deck and \
use as community cards.\n\t6. Generate frequencies of each hand based from \
the previous hole cards and the new community cards.\n\t7. Use the formula ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["P", "h"], TraditionalForm]],ExpressionUUID->
  "c1fcb117-8016-4deb-8484-3e963777664a"],
 " for each of the hands in the list.\n\n\t  "
}], "Text",
 CellChangeTimes->{
  3.8723494492554007`*^9, {3.872351425496168*^9, 3.872351593428549*^9}, {
   3.872351767321464*^9, 3.872351817900375*^9}, {3.872352120428548*^9, 
   3.872352284310174*^9}, {3.872352345263768*^9, 3.872352397895553*^9}, {
   3.8723526073143473`*^9, 3.872353031791637*^9}, {3.872353083234585*^9, 
   3.872353083817994*^9}, {3.872353223736713*^9, 3.872353257384261*^9}, {
   3.8723533297344923`*^9, 3.872353392605516*^9}, {3.872353571171473*^9, 
   3.8723535812999487`*^9}, {3.872353706892126*^9, 3.872353749179049*^9}, 
   3.8725168092065687`*^9, {3.872516882147694*^9, 
   3.872516924042049*^9}},ExpressionUUID->"7db1cf4d-848e-436d-bfb6-\
d2bde7a8a488"]
}, Closed]],

Cell[CellGroupData[{

Cell["Conclusion", "Section",
 CellChangeTimes->{{3.872349381340708*^9, 
  3.872349385214888*^9}},ExpressionUUID->"3c88e56c-4768-4de7-b81a-\
146942b7ddcc"],

Cell["\<\
Taking cards from the deck reduces the general uncertainty of the game and \
looking at the table in the result
\tsection, it empirically shows that reduced \[OpenCurlyDoubleQuote]spread\
\[CloseCurlyDoubleQuote]. Five out of nine rows are reduced to impossible. If \
the
\trow with the probability of getting a high card had been added, it would \
have attracted most of the 
\t\[OpenCurlyDoubleQuote]missing\[CloseCurlyDoubleQuote] probabilities that \
occurred with five cards known. 
\t\
\>", "Text",
 CellChangeTimes->{{3.87234939183327*^9, 3.872349391974028*^9}, {
  3.8725168127360477`*^9, 3.872516848993184*^9}, {3.872519957541539*^9, 
  3.87252014979431*^9}},ExpressionUUID->"b0a4dfc3-f51a-490c-bb63-\
651909969ee8"]
}, Closed]],

Cell[CellGroupData[{

Cell["Mathematica Data", "Section",
 CellChangeTimes->{{3.8722554975359793`*^9, 
  3.872255501652152*^9}},ExpressionUUID->"eb232638-2837-4382-9654-\
616c94d28459"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ClearAll", "[", "\"\<`*\>\"", "]"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.8722554297870073`*^9, 3.872255431032365*^9}, {
  3.872255506231618*^9, 
  3.872255507076623*^9}},ExpressionUUID->"724ad548-2c8d-4dfd-82a4-\
53b64348dd55"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"data1", " ", "=", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", " ", 
     RowBox[{",", " ", 
      RowBox[{"2", "KnownCards"}], ",", " ", 
      RowBox[{"5", "KnownCards"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "OnePair", ",", " ", "0.7767146821725915", ",", " ", 
      "0.5855689176688251"}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{
     "TwoPairs", ",", " ", "0.2533897185146029", ",", " ", 
      "0.08325624421831637"}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{
     "ThreeOfAKind", ",", " ", "0.0683569635069569", ",", " ", 
      "0.013876040703052728"}], "}"}], ",", " ", "\n", 
    RowBox[{"{", 
     RowBox[{
     "Straight", ",", " ", "0.02688364892673073", ",", " ", 
      "0.1517113783533765"}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"Flush", ",", " ", "0.01971813702354207", ",", " ", "0"}], "}"}],
     ",", " ", 
    RowBox[{"{", 
     RowBox[{"FullHouse", ",", " ", "0.022329098151749136", ",", " ", "0"}], 
     "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{
     "FourOfAKind", ",", " ", "0.0012592270950933565", ",", " ", "0"}], "}"}],
     ",", " ", "\n", 
    RowBox[{"{", 
     RowBox[{
     "StraightFlush", ",", " ", "0.0008316184938360173", ",", " ", "0"}], 
     "}"}], ",", "\n", 
    RowBox[{"{", 
     RowBox[{
     "RoyalStraightFlush", ",", " ", "0.00000320942438029791", ",", " ", 
      "0"}], "}"}]}], "}"}]}]], "Code",
 CellChangeTimes->{{3.8722553528509817`*^9, 3.872255397491025*^9}, {
   3.872255559651288*^9, 3.872255596959303*^9}, {3.872255717280254*^9, 
   3.872255727504229*^9}, 3.872255778658567*^9, {3.8722558407645283`*^9, 
   3.872256000149041*^9}, {3.872256059727187*^9, 3.872256110817519*^9}, {
   3.872256182218224*^9, 3.872256263952137*^9}, {3.872256315633278*^9, 
   3.872256421929593*^9}, {3.8722566499282837`*^9, 3.872256878014625*^9}, {
   3.872256909189598*^9, 3.872256966317938*^9}, 3.872514704184814*^9},
 CellLabel->"In[1]:=",ExpressionUUID->"4c0cfd7e-bd83-42cd-9ed5-b121f577894f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Null", ",", 
     RowBox[{"2", " ", "KnownCards"}], ",", 
     RowBox[{"5", " ", "KnownCards"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "OnePair", ",", "0.7767146821725915`", ",", "0.5855689176688251`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "TwoPairs", ",", "0.2533897185146029`", ",", "0.08325624421831637`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "ThreeOfAKind", ",", "0.0683569635069569`", ",", 
     "0.013876040703052728`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "Straight", ",", "0.02688364892673073`", ",", "0.1517113783533765`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"Flush", ",", "0.01971813702354207`", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"FullHouse", ",", "0.022329098151749136`", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"FourOfAKind", ",", "0.0012592270950933565`", ",", "0"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"StraightFlush", ",", "0.0008316184938360173`", ",", "0"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{"RoyalStraightFlush", ",", "3.20942438029791`*^-6", ",", "0"}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.872514733848188*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"862cb8a1-2449-4e7a-bf1f-c73891124916"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"gggggg", "=", " ", 
   RowBox[{"Grid", "[", 
    RowBox[{"data", ",", 
     RowBox[{"Alignment", "->", "Left"}], ",", 
     RowBox[{"Spacings", "->", 
      RowBox[{"{", 
       RowBox[{"2", ",", "1"}], "}"}]}], ",", 
     RowBox[{"Frame", "->", "All"}], ",", 
     RowBox[{"ItemStyle", "->", "\"\<Text\>\""}], ",", 
     RowBox[{"Background", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Gray", ",", "None"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"LightGray", ",", "None"}], "}"}]}], "}"}]}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.87225550982402*^9, 3.872255517609007*^9}, {
  3.872256538576326*^9, 3.8722565395367813`*^9}, {3.872256592834446*^9, 
  3.8722565975952883`*^9}, {3.8723482382178497`*^9, 
  3.872348240098659*^9}},ExpressionUUID->"10119438-007f-4429-a5a0-\
bee11d87af84"],

Cell[BoxData[
 TagBox[GridBox[{
    {"", 
     RowBox[{"        ", 
      RowBox[{"two", " ", "known", " ", "cards"}]}], 
     RowBox[{"       ", 
      RowBox[{"five", " ", "known", " ", "cards"}]}]},
    {
     RowBox[{"One", " ", "Pair"}], "0.7767146821725915", "0.5855689176688251"},
    {
     RowBox[{"Two", " ", "Pairs"}], "0.2533897185146029", 
     "0.08325624421831637"},
    {
     RowBox[{"Three", " ", "Of", " ", "A", " ", "Kind"}], 
     "0.0683569635069569", "0.013876040703052728"},
    {"Straight", "0.027246125092034962", "0.02960222016651249"},
    {"Flush", "0.01971813702354207", "0"},
    {
     RowBox[{"Full", " ", "House"}], "0.022340425531914895", "0"},
    {
     RowBox[{"Four", " ", "Of", " ", "A", " ", "Kind"}], 
     "0.0012592270950933565", "0"},
    {
     RowBox[{"Straight", " ", "Flush"}], "0.0008410579773074818", "0"},
    {
     RowBox[{"Royal", " ", "Straight", " ", "Flush"}], 
     "0.0002331552417451717", "0"}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxBackground->{"Columns" -> {
       GrayLevel[0.5], None}, "Rows" -> {
       GrayLevel[0.85], None}},
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxItemStyle->{"Columns" -> {{"Text"}}, "Rows" -> {{"Text"}}},
   GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{1}}}],
  "Grid"]], "Input",
 CellChangeTimes->{{3.872348223255733*^9, 
  3.8723482232824*^9}},ExpressionUUID->"f9b04900-031a-44e3-953d-a1a4e8d75a0d"]
}, Closed]],

Cell[CellGroupData[{

Cell["Code", "Section",
 CellChangeTimes->{{3.872255470155498*^9, 3.872255477558011*^9}, {
  3.872515457057302*^9, 
  3.872515457793117*^9}},ExpressionUUID->"d13fe2a6-2314-4011-bd36-\
9098b2a50549"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"import", " ", "math"}], "\n", 
 RowBox[{"import", " ", "random"}], "\n", 
 RowBox[{"from", " ", "itertools", " ", "import", " ", "combinations"}], "\n", 
 RowBox[{
  RowBox[{"from", " ", "operator", " ", "import", " ", "attrgetter"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
  "\"\<\>\"", 
   "\"\< \n\n* one pair\n* two pairs\n* three of a kind\n* straight\n* flush\n\
* full house \n* four of a kinddqdq\n* straight flush\n* straight royal flush\
\n\n\>\"", "\"\<\>\""}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"class", " ", 
   RowBox[{"Card", ":", "\n", "\n", "    ", "color"}]}], " ", "=", " ", 
  "\"\<\>\""}], "\n", 
 RowBox[{"    ", 
  RowBox[{"number", " ", "=", " ", "0"}], "\n"}], "\n", 
 RowBox[{"    ", 
  RowBox[{
   RowBox[{
    RowBox[{"def", " ", "__init", "__", 
     RowBox[{"(", 
      RowBox[{"self", ",", " ", "c", ",", " ", "n"}], ")"}]}], ":", "\n", 
    "        ", 
    RowBox[{"self", ".", "color"}]}], " ", "=", " ", "c"}]}], "\n", 
 RowBox[{"        ", 
  RowBox[{
   RowBox[{"self", ".", "number"}], " ", "=", " ", "n"}], "\n", 
  "    "}], "\n", 
 RowBox[{"    ", 
  RowBox[{
   RowBox[{"def", " ", "__repr", "__", 
    RowBox[{"(", "self", ")"}]}], ":", "\n", "        ", 
   RowBox[{"return", " ", "f", "\"\<{self.color}, {self.number}\>\""}]}], 
  "\n", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"def", " ", "main", 
    RowBox[{"(", ")"}]}], ":", "\n", "    ", "deck"}], " ", "=", " ", 
  RowBox[{"generate_deck", 
   RowBox[{"(", ")"}]}]}], "\n", 
 RowBox[{"    ", 
  RowBox[{"hand", " ", "=", " ", 
   RowBox[{"pull_cards", "_from", "_deck", 
    RowBox[{"(", 
     RowBox[{"deck", ",", " ", "2"}], ")"}]}]}]}], "\n", 
 RowBox[{"    ", 
  RowBox[{"print", 
   RowBox[{"(", "\"\<First round:\>\"", ")"}]}]}], "\n", 
 RowBox[{"    ", 
  RowBox[{"test_hand", " ", "=", " ", 
   RowBox[{"[", 
    RowBox[{
     RowBox[{"Card", 
      RowBox[{"(", 
       RowBox[{"\"\<Ass\>\"", ",", " ", "2"}], ")"}]}], ",", " ", 
     RowBox[{"Card", 
      RowBox[{"(", 
       RowBox[{"\"\<Ass\>\"", ",", " ", "1"}], ")"}]}], ",", " ", 
     RowBox[{"Card", 
      RowBox[{"(", 
       RowBox[{"\"\<Ass\>\"", ",", " ", "2"}], ")"}]}], ",", " ", 
     RowBox[{"Card", 
      RowBox[{"(", 
       RowBox[{"\"\<Ass\>\"", ",", " ", "1"}], ")"}]}]}], "]"}]}]}], "\n", 
 RowBox[{"    ", 
  RowBox[{"calculate_prob", 
   RowBox[{"(", 
    RowBox[{"hand", ",", " ", "deck", ",", " ", "5"}], ")"}]}]}], "\n", 
 RowBox[{"    ", 
  RowBox[{"hand", " ", "+=", " ", 
   RowBox[{"pull_cards", "_from", "_deck", 
    RowBox[{"(", 
     RowBox[{"deck", ",", " ", "3"}], ")"}]}]}]}], "\n", 
 RowBox[{"    ", 
  RowBox[{"print", 
   RowBox[{"(", "\"\<Second round:\>\"", ")"}]}]}], "\n", 
 RowBox[{"    ", 
  RowBox[{"calculate_prob", 
   RowBox[{"(", 
    RowBox[{"hand", ",", " ", "deck", ",", " ", "2"}], ")"}]}], "\n"}], "\n", 

 RowBox[{
  RowBox[{
   RowBox[{"def", " ", "print_cards", 
    RowBox[{"(", 
     RowBox[{"cards", ",", " ", "description"}], ")"}]}], ":", "\n", "\n", 
   "    ", 
   RowBox[{"print", 
    RowBox[{"(", "description", ")"}]}]}], "\n"}], "\n", 
 RowBox[{"    ", 
  RowBox[{
   RowBox[{"for", " ", "c", " ", "in", " ", "range", 
    RowBox[{"(", 
     RowBox[{"len", 
      RowBox[{"(", "cards", ")"}]}], ")"}]}], ":", "\n", "        ", 
   RowBox[{"print", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"cards", "[", "c", "]"}], ".", "color"}], ",", " ", 
      RowBox[{
       RowBox[{"cards", "[", "c", "]"}], ".", "number"}], ",", " ", 
      RowBox[{"end", "=", "\"\< \>\""}]}], ")"}]}]}], "\n"}], "\n", 
 RowBox[{"    ", 
  RowBox[{"print", 
   RowBox[{"(", "\"\<\\n\>\"", ")"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"def", " ", "calculate_prob", 
   RowBox[{"(", 
    RowBox[{"hand", ",", " ", "deck", ",", " ", 
     RowBox[{"community_card", "_count"}]}], ")"}]}], ":", "\n", "\n", "    ", 
  RowBox[{"print", 
   RowBox[{"(", "hand", ")"}]}]}], "\n", 
 RowBox[{"    ", 
  RowBox[{"unknowns", " ", "=", " ", 
   RowBox[{"combinations", 
    RowBox[{"(", 
     RowBox[{"deck", ",", " ", 
      RowBox[{"community_card", "_count"}]}], ")"}]}]}], "\n"}], "\n", 
 RowBox[{"    ", 
  RowBox[{"tuples", " ", "=", " ", 
   RowBox[{"[", "]"}]}], "\n"}], "\n", 
 RowBox[{"    ", 
  RowBox[{
   RowBox[{"for", " ", "j", " ", "in", " ", "combinations", 
    RowBox[{"(", 
     RowBox[{"deck", ",", " ", 
      RowBox[{"community_card", "_count"}]}], ")"}]}], ":", "\n", "        ", 
   
   RowBox[{
    RowBox[{"tuples", ".", "append"}], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"unknowns", ".", "__next"}], "__", 
      RowBox[{"(", ")"}]}], ")"}]}]}], "\n"}], "\n", 
 RowBox[{"    ", 
  RowBox[{"found_pairs", " ", "=", " ", "0"}]}], "\n", 
 RowBox[{"    ", 
  RowBox[{
   RowBox[{"found_two", "_pair"}], " ", "=", " ", "0"}]}], "\n", 
 RowBox[{"    ", 
  RowBox[{
   RowBox[{"found_three", "_of"}], " ", "=", " ", "0"}]}], "\n", 
 RowBox[{"    ", 
  RowBox[{
   RowBox[{"found_royal", "_flushes"}], " ", "=", " ", "0"}]}], "\n", 
 RowBox[{"    ", 
  RowBox[{"found_flushes", " ", "=", " ", "0"}]}], "\n", 
 RowBox[{"    ", 
  RowBox[{
   RowBox[{"found_straight", "_flushes"}], " ", "=", " ", "0"}]}], "\n", 
 RowBox[{"    ", 
  RowBox[{"found_straight", " ", "=", " ", "0"}]}], "\n", 
 RowBox[{"    ", 
  RowBox[{
   RowBox[{"found_full", "_house"}], " ", "=", " ", "0"}]}], "\n", 
 RowBox[{"    ", 
  RowBox[{
   RowBox[{"found_four", "_of", "_a", "_kind"}], " ", "=", " ", "0"}], 
  "\n"}], "\n", 
 RowBox[{"    ", 
  RowBox[{
   RowBox[{
    RowBox[{"for", " ", "i", " ", "in", " ", "range", 
     RowBox[{"(", 
      RowBox[{"len", 
       RowBox[{"(", "tuples", ")"}]}], ")"}]}], ":", "\n", "        ", 
    "combo"}], " ", "=", " ", 
   RowBox[{"[", "]"}]}]}], "\n", 
 RowBox[{"        ", 
  RowBox[{
   RowBox[{"for", " ", "j", " ", "in", " ", "range", 
    RowBox[{"(", 
     RowBox[{"community_card", "_count"}], ")"}]}], ":", "\n", "            ", 
   RowBox[{
    RowBox[{"combo", ".", "append"}], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"tuples", "[", "i", "]"}], "[", "j", "]"}], ")"}]}]}], 
  "\n"}], "\n", 
 RowBox[{"        ", 
  RowBox[{"found_pairs", " ", "+=", " ", 
   RowBox[{"one_pair", 
    RowBox[{"(", 
     RowBox[{"combo", "+", "hand"}], ")"}]}]}]}], "\n", 
 RowBox[{"        ", 
  RowBox[{
   RowBox[{"found_two", "_pair"}], " ", "+=", " ", 
   RowBox[{"two_pairs", 
    RowBox[{"(", 
     RowBox[{"combo", "+", "hand"}], ")"}]}]}]}], "\n", 
 RowBox[{"        ", 
  RowBox[{
   RowBox[{"found_three", "_of"}], " ", "+=", " ", 
   RowBox[{"three_of", "_a", "_kind", 
    RowBox[{"(", 
     RowBox[{"combo", "+", "hand"}], ")"}]}]}]}], "\n", 
 RowBox[{"        ", 
  RowBox[{
   RowBox[{"found_royal", "_flushes"}], " ", "+=", " ", 
   RowBox[{"royal_straight", "_flush", 
    RowBox[{"(", 
     RowBox[{"combo", "+", "hand"}], ")"}]}]}]}], "\n", 
 RowBox[{"        ", 
  RowBox[{"found_straight", " ", "+=", " ", 
   RowBox[{"check_straight", 
    RowBox[{"(", 
     RowBox[{"combo", "+", "hand"}], ")"}]}]}]}], "\n", 
 RowBox[{"        ", 
  RowBox[{"found_flushes", " ", "+=", " ", 
   RowBox[{"check_flush", 
    RowBox[{"(", 
     RowBox[{"combo", "+", "hand"}], ")"}]}]}]}], "\n", 
 RowBox[{"        ", 
  RowBox[{
   RowBox[{"found_straight", "_flushes"}], " ", "+=", " ", 
   RowBox[{"check_straight", "_flush", 
    RowBox[{"(", 
     RowBox[{"combo", "+", "hand"}], ")"}]}]}]}], "\n", 
 RowBox[{"        ", 
  RowBox[{
   RowBox[{"found_full", "_house"}], " ", "+=", " ", 
   RowBox[{"full_house", 
    RowBox[{"(", 
     RowBox[{"combo", "+", "hand"}], ")"}]}]}]}], "\n", 
 RowBox[{"        ", 
  RowBox[{
   RowBox[{"found_four", "_of", "_a", "_kind"}], " ", "+=", " ", 
   RowBox[{"four_of", "_a", "_kind", 
    RowBox[{"(", 
     RowBox[{"combo", "+", "hand"}], ")"}]}]}], "\n", "\n", "    "}], "\n", 
 RowBox[{"    ", 
  RowBox[{"print", 
   RowBox[{"(", "\"\<Probabilities:\>\"", ")"}]}]}], "\n", 
 RowBox[{"    ", 
  RowBox[{"print", 
   RowBox[{"(", "\"\<\>\"", ")"}]}]}], "\n", 
 RowBox[{"    ", 
  RowBox[{"print", 
   RowBox[{"(", 
    RowBox[{"\"\<One pair: \>\"", ",", " ", 
     RowBox[{
      RowBox[{"found_pairs", "/", "len"}], 
      RowBox[{"(", "tuples", ")"}]}]}], ")"}]}]}], "\n", 
 RowBox[{"    ", 
  RowBox[{"print", 
   RowBox[{"(", 
    RowBox[{"\"\<Two pairs: \>\"", ",", " ", 
     RowBox[{"found_two", 
      RowBox[{"_pair", "/", "len"}], 
      RowBox[{"(", "tuples", ")"}]}]}], ")"}]}]}], "\n", 
 RowBox[{"    ", 
  RowBox[{"print", 
   RowBox[{"(", 
    RowBox[{"\"\<Three of a kind: \>\"", ",", " ", 
     RowBox[{"found_three", 
      RowBox[{"_of", "/", "len"}], 
      RowBox[{"(", "tuples", ")"}]}]}], ")"}]}]}], "\n", 
 RowBox[{"    ", 
  RowBox[{"print", 
   RowBox[{"(", 
    RowBox[{"\"\<Straight: \>\"", ",", " ", 
     RowBox[{
      RowBox[{"found_straight", "/", "len"}], 
      RowBox[{"(", "tuples", ")"}]}]}], ")"}]}]}], "\n", 
 RowBox[{"    ", 
  RowBox[{"print", 
   RowBox[{"(", 
    RowBox[{"\"\<Flush: \>\"", ",", " ", 
     RowBox[{
      RowBox[{"found_flushes", "/", "len"}], 
      RowBox[{"(", "tuples", ")"}]}]}], ")"}]}]}], "\n", 
 RowBox[{"    ", 
  RowBox[{"print", 
   RowBox[{"(", 
    RowBox[{"\"\<Full house: \>\"", ",", " ", 
     RowBox[{"found_full", 
      RowBox[{"_house", "/", "len"}], 
      RowBox[{"(", "tuples", ")"}]}]}], ")"}]}]}], "\n", 
 RowBox[{"    ", 
  RowBox[{"print", 
   RowBox[{"(", 
    RowBox[{"\"\<Four of a kind: \>\"", ",", " ", 
     RowBox[{"found_four", "_of", "_a", 
      RowBox[{"_kind", "/", "len"}], 
      RowBox[{"(", "tuples", ")"}]}]}], ")"}]}]}], "\n", 
 RowBox[{"    ", 
  RowBox[{"print", 
   RowBox[{"(", 
    RowBox[{"\"\<Straight flush: \>\"", ",", " ", 
     RowBox[{"found_straight", 
      RowBox[{"_flushes", "/", "len"}], 
      RowBox[{"(", "tuples", ")"}]}]}], ")"}]}]}], "\n", 
 RowBox[{"    ", 
  RowBox[{"print", 
   RowBox[{"(", 
    RowBox[{"\"\<Royal straight flush: \>\"", ",", " ", 
     RowBox[{"found_royal", 
      RowBox[{"_flushes", "/", "len"}], 
      RowBox[{"(", "tuples", ")"}]}]}], ")"}]}]}], "\n", 
 RowBox[{"    ", 
  RowBox[{"print", 
   RowBox[{"(", "\"\<\>\"", ")"}]}], "\n", "\n"}], "\n", 
 RowBox[{
  RowBox[{"def", " ", "one_pair", 
   RowBox[{"(", "combination", ")"}]}], " ", "->", " ", 
  RowBox[{"int", ":", "\n", "    ", 
   RowBox[{"for", " ", "i", " ", "in", " ", "range", 
    RowBox[{"(", 
     RowBox[{"len", 
      RowBox[{"(", "combination", ")"}]}], ")"}]}], ":", "    ", "\n", 
   "        ", 
   RowBox[{"for", " ", "j", " ", "in", " ", "range", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"i", "+", "1"}], ",", 
      RowBox[{"len", 
       RowBox[{"(", "combination", ")"}]}]}], ")"}]}], ":", "\n", 
   "            ", 
   RowBox[{
    RowBox[{"if", " ", "j"}], " ", ">=", " ", 
    RowBox[{"len", 
     RowBox[{"(", "combination", ")"}]}]}], ":", "\n", "                ", 
   "break"}]}], "\n", 
 RowBox[{"            ", 
  RowBox[{
   RowBox[{"if", " ", 
    RowBox[{
     RowBox[{"combination", "[", "i", "]"}], ".", "number"}]}], " ", "==", 
   " ", 
   RowBox[{
    RowBox[{"combination", "[", "j", "]"}], ".", 
    RowBox[{"number", ":", "\n", "                ", 
     RowBox[{"#print", 
      RowBox[{"(", 
       RowBox[{
       "f", "\"\<{combination[i].number} | {combination[j].number}\>\""}], 
       ")"}]}]}]}]}]}], "\n", 
 RowBox[{"                ", 
  RowBox[{"return", " ", "1"}]}], "\n", 
 RowBox[{"    ", 
  RowBox[{"return", " ", "0"}], "\n", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"def", " ", "two_pairs", 
     RowBox[{"(", "combination", ")"}]}], " ", "->", " ", 
    RowBox[{"int", ":", "\n", "    ", "found_pairs"}]}], " ", "=", " ", "0"}],
   "\n", "    "}], "\n", 
 RowBox[{"    ", 
  RowBox[{
   RowBox[{"for", " ", "i", " ", "in", " ", "range", 
    RowBox[{"(", 
     RowBox[{"len", 
      RowBox[{"(", "combination", ")"}]}], ")"}]}], ":", "    ", "\n", 
   "        ", 
   RowBox[{"for", " ", "j", " ", "in", " ", "range", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"i", "+", "1"}], ",", 
      RowBox[{"len", 
       RowBox[{"(", "combination", ")"}]}]}], ")"}]}], ":", "\n", 
   "            ", 
   RowBox[{
    RowBox[{"if", " ", "j"}], " ", ">=", " ", 
    RowBox[{"len", 
     RowBox[{"(", "combination", ")"}]}]}], ":", "\n", "                ", 
   "break"}]}], "\n", 
 RowBox[{"            ", 
  RowBox[{
   RowBox[{"if", " ", 
    RowBox[{
     RowBox[{"combination", "[", "i", "]"}], ".", "number"}]}], " ", "==", 
   " ", 
   RowBox[{
    RowBox[{"combination", "[", "j", "]"}], ".", 
    RowBox[{"number", ":", "\n", "                ", 
     RowBox[{
      RowBox[{"combination", ".", "remove"}], 
      RowBox[{"(", 
       RowBox[{"combination", "[", "i", "]"}], ")"}]}]}]}]}]}], "\n", 
 RowBox[{"                ", 
  RowBox[{
   RowBox[{"combination", ".", "remove"}], 
   RowBox[{"(", 
    RowBox[{"combination", "[", 
     RowBox[{"j", "-", "1"}], "]"}], ")"}]}]}], "\n", 
 RowBox[{"                ", 
  RowBox[{"found_pairs", "+=", " ", "1"}], "\n"}], "\n", 
 RowBox[{"    ", 
  RowBox[{
   RowBox[{"for", " ", "i", " ", "in", " ", "range", 
    RowBox[{"(", 
     RowBox[{"len", 
      RowBox[{"(", "combination", ")"}]}], ")"}]}], ":", "    ", "\n", 
   "        ", 
   RowBox[{"for", " ", "j", " ", "in", " ", "range", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"i", "+", "1"}], ",", 
      RowBox[{"len", 
       RowBox[{"(", "combination", ")"}]}]}], ")"}]}], ":", "\n", 
   "            ", 
   RowBox[{
    RowBox[{"if", " ", "j"}], " ", ">=", " ", 
    RowBox[{"len", 
     RowBox[{"(", "combination", ")"}]}]}], ":", "\n", "                ", 
   "break"}]}], "\n", 
 RowBox[{"            ", 
  RowBox[{
   RowBox[{
    RowBox[{"if", " ", 
     RowBox[{
      RowBox[{"combination", "[", "i", "]"}], ".", "number"}]}], " ", "==", 
    " ", 
    RowBox[{
     RowBox[{"combination", "[", "j", "]"}], ".", 
     RowBox[{"number", ":", "\n", "                ", "found_pairs"}]}]}], "+=",
    " ", "1"}]}], "\n", 
 RowBox[{"                ", "break", "\n"}], "\n", 
 RowBox[{"    ", 
  RowBox[{
   RowBox[{
    RowBox[{"if", " ", "found_pairs"}], " ", ">=", " ", "2"}], ":", "\n", 
   "        ", 
   RowBox[{"return", " ", "1"}]}], "\n"}], "\n", 
 RowBox[{"    ", 
  RowBox[{"return", " ", "0"}], "\n", "\n", "\n", "            "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"def", " ", "three_of", "_a", "_kind", 
    RowBox[{"(", "combinations", ")"}]}], ":", "\n", "    ", 
   RowBox[{
    RowBox[{"combinations", ".", "sort"}], 
    RowBox[{"(", 
     RowBox[{"key", "=", " ", 
      RowBox[{"attrgetter", 
       RowBox[{"(", 
        RowBox[{"'", 
         RowBox[{"number", "'"}]}], ")"}]}]}], ")"}]}]}], "\n"}], "\n", 
 RowBox[{"    ", 
  RowBox[{"found", " ", "=", " ", "0"}], "\n"}], "\n", 
 RowBox[{"    ", 
  RowBox[{
   RowBox[{
    RowBox[{"for", " ", "i", " ", "in", " ", "range", 
     RowBox[{"(", 
      RowBox[{"len", 
       RowBox[{"(", "combinations", ")"}]}], ")"}]}], ":", "\n", "\n", 
    "        ", "cards"}], " ", "=", " ", "1"}]}], "\n", 
 RowBox[{"        ", 
  RowBox[{
   RowBox[{"for", " ", "j", " ", "in", " ", "range", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"i", "+", "1"}], ",", " ", 
      RowBox[{"len", 
       RowBox[{"(", "combinations", ")"}]}]}], ")"}]}], ":", "\n", "\n", 
   "            ", 
   RowBox[{
    RowBox[{"if", " ", 
     RowBox[{
      RowBox[{"combinations", "[", "j", "]"}], ".", "number"}]}], " ", "!=", 
    " ", 
    RowBox[{
     RowBox[{"combinations", "[", "i", "]"}], ".", "number"}]}], ":", "\n", 
   "                ", "break"}]}], "\n", 
 RowBox[{"            ", 
  RowBox[{
   RowBox[{"else", ":", "\n", "                ", "cards"}], " ", "+=", " ", 
   "1"}], "\n"}], "\n", 
 RowBox[{"            ", 
  RowBox[{
   RowBox[{
    RowBox[{"if", 
     RowBox[{"(", 
      RowBox[{"cards", " ", ">=", " ", "3"}], ")"}]}], ":", "\n", 
    "                ", "found"}], " ", "=", " ", "1"}]}], "\n", 
 RowBox[{"                ", "break", "\n"}], "\n", 
 RowBox[{"    ", 
  RowBox[{"return", " ", "found"}], " ", "\n", "\n", "           "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"def", " ", "four_of", "_a", "_kind", 
    RowBox[{"(", "combinations", ")"}]}], ":", "\n", "    ", 
   RowBox[{
    RowBox[{"combinations", ".", "sort"}], 
    RowBox[{"(", 
     RowBox[{"key", "=", " ", 
      RowBox[{"attrgetter", 
       RowBox[{"(", 
        RowBox[{"'", 
         RowBox[{"number", "'"}]}], ")"}]}]}], ")"}]}]}], "\n"}], "\n", 
 RowBox[{"    ", 
  RowBox[{"found", " ", "=", " ", "0"}], "\n"}], "\n", 
 RowBox[{"    ", 
  RowBox[{
   RowBox[{
    RowBox[{"for", " ", "i", " ", "in", " ", "range", 
     RowBox[{"(", 
      RowBox[{"len", 
       RowBox[{"(", "combinations", ")"}]}], ")"}]}], ":", "\n", "\n", 
    "        ", "cards"}], " ", "=", " ", "1"}]}], "\n", 
 RowBox[{"        ", 
  RowBox[{
   RowBox[{"for", " ", "j", " ", "in", " ", "range", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"i", "+", "1"}], ",", " ", 
      RowBox[{"len", 
       RowBox[{"(", "combinations", ")"}]}]}], ")"}]}], ":", "\n", "\n", 
   "            ", 
   RowBox[{
    RowBox[{"if", " ", 
     RowBox[{
      RowBox[{"combinations", "[", "j", "]"}], ".", "number"}]}], " ", "!=", 
    " ", 
    RowBox[{
     RowBox[{"combinations", "[", "i", "]"}], ".", "number"}]}], ":", "\n", 
   "                ", "break"}]}], "\n", 
 RowBox[{"            ", 
  RowBox[{
   RowBox[{"else", ":", "\n", "                ", "cards"}], " ", "+=", " ", 
   "1"}], "\n"}], "\n", 
 RowBox[{"            ", 
  RowBox[{
   RowBox[{
    RowBox[{"if", 
     RowBox[{"(", 
      RowBox[{"cards", " ", ">=", " ", "4"}], ")"}]}], ":", "\n", 
    "                ", "found"}], " ", "=", " ", "1"}]}], "\n", 
 RowBox[{"                ", "break", "\n"}], "\n", 
 RowBox[{"    ", 
  RowBox[{"return", " ", "found"}], " ", "\n", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"def", " ", "full_house", 
    RowBox[{"(", "combinations", ")"}]}], ":", "\n", "    ", 
   RowBox[{
    RowBox[{"combinations", ".", "sort"}], 
    RowBox[{"(", 
     RowBox[{"key", "=", " ", 
      RowBox[{"attrgetter", 
       RowBox[{"(", 
        RowBox[{"'", 
         RowBox[{"number", "'"}]}], ")"}]}]}], ")"}]}]}], "\n"}], "\n", 
 RowBox[{"    ", 
  RowBox[{"found", " ", "=", " ", "0"}], "\n"}], "\n", 
 RowBox[{"    ", 
  RowBox[{
   RowBox[{
    RowBox[{"for", " ", "i", " ", "in", " ", "range", 
     RowBox[{"(", 
      RowBox[{"len", 
       RowBox[{"(", "combinations", ")"}]}], ")"}]}], ":", "\n", "\n", 
    "        ", "cards"}], " ", "=", " ", "1"}]}], "\n", 
 RowBox[{"        ", 
  RowBox[{
   RowBox[{"for", " ", "j", " ", "in", " ", "range", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"i", "+", "1"}], ",", " ", 
      RowBox[{"len", 
       RowBox[{"(", "combinations", ")"}]}]}], ")"}]}], ":", "\n", "\n", 
   "            ", 
   RowBox[{
    RowBox[{"if", " ", 
     RowBox[{
      RowBox[{"combinations", "[", "j", "]"}], ".", "number"}]}], " ", "!=", 
    " ", 
    RowBox[{
     RowBox[{"combinations", "[", "i", "]"}], ".", "number"}]}], ":", "\n", 
   "                ", "break"}]}], "\n", 
 RowBox[{"            ", 
  RowBox[{
   RowBox[{"else", ":", "\n", "                ", "cards"}], " ", "+=", " ", 
   "1"}], "\n"}], "\n", 
 RowBox[{"            ", 
  RowBox[{
   RowBox[{
    RowBox[{"if", 
     RowBox[{"(", 
      RowBox[{"cards", " ", ">=", " ", "3"}], ")"}]}], ":", "\n", 
    "                ", "found"}], " ", "=", " ", "1"}]}], "\n", 
 RowBox[{"                ", 
  RowBox[{
   RowBox[{"combinations", ".", "remove"}], 
   RowBox[{"(", 
    RowBox[{"combinations", "[", "j", "]"}], ")"}]}]}], "\n", 
 RowBox[{"                ", 
  RowBox[{
   RowBox[{"combinations", ".", "remove"}], 
   RowBox[{"(", 
    RowBox[{"combinations", "[", 
     RowBox[{"j", "-", "1"}], "]"}], ")"}]}]}], "\n", 
 RowBox[{"                ", 
  RowBox[{
   RowBox[{"combinations", ".", "remove"}], 
   RowBox[{"(", 
    RowBox[{"combinations", "[", 
     RowBox[{"j", "-", "2"}], "]"}], ")"}]}]}], "\n", 
 RowBox[{"                ", "break", "\n", "\n"}], "\n", 
 RowBox[{"    ", 
  RowBox[{
   RowBox[{
    RowBox[{"if", 
     RowBox[{"(", 
      RowBox[{"found", " ", "==", " ", "1"}], ")"}]}], ":", "\n", "        ", 
    "found"}], " ", "=", " ", 
   RowBox[{"one_pair", 
    RowBox[{"(", "combinations", ")"}]}]}], "\n"}], "\n", 
 RowBox[{"    ", 
  RowBox[{"return", " ", "found"}], " ", "\n", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"def", " ", "check_flush", 
     RowBox[{"(", "combinations", ")"}]}], ":", "\n", "\n", "    ", "flush"}],
    " ", "=", " ", "0"}], "\n"}], "\n", 
 RowBox[{"    ", 
  RowBox[{
   RowBox[{
    RowBox[{"for", " ", "i", " ", "in", " ", "range", 
     RowBox[{"(", 
      RowBox[{"len", 
       RowBox[{"(", "combinations", ")"}]}], ")"}]}], ":", "\n", "        ", 
    "same_suit"}], " ", "=", " ", "1"}]}], "\n", 
 RowBox[{"        ", 
  RowBox[{
   RowBox[{
    RowBox[{"for", " ", "j", " ", "in", " ", "range", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"i", "+", "1"}], ",", " ", 
       RowBox[{"len", 
        RowBox[{"(", "combinations", ")"}]}]}], ")"}]}], ":", "\n", 
    "            ", 
    RowBox[{"if", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"combinations", "[", "i", "]"}], ".", "color"}], " ", "==", 
       " ", 
       RowBox[{
        RowBox[{"combinations", "[", "j", "]"}], ".", "color"}]}], ")"}]}], 
    ":", "\n", "                ", "same_suit"}], " ", "+=", " ", "1"}], "\n",
   "            "}], "\n", 
 RowBox[{"            ", 
  RowBox[{
   RowBox[{
    RowBox[{"if", 
     RowBox[{"(", 
      RowBox[{"same_suit", " ", ">=", " ", "5"}], ")"}]}], ":", "\n", 
    "                ", "flush"}], " ", "=", " ", "1"}]}], "\n", 
 RowBox[{"                ", "break", "   ", "\n"}], "\n", 
 RowBox[{"    ", 
  RowBox[{"return", " ", "flush"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"def", " ", "check_straight", 
    RowBox[{"(", "combinations", ")"}]}], ":", "\n", "    ", 
   RowBox[{
    RowBox[{"combinations", ".", "sort"}], 
    RowBox[{"(", 
     RowBox[{"key", "=", " ", 
      RowBox[{"attrgetter", 
       RowBox[{"(", 
        RowBox[{"'", 
         RowBox[{"number", "'"}]}], ")"}]}]}], ")"}]}]}], "\n"}], "\n", 
 RowBox[{"    ", 
  RowBox[{"found", " ", "=", " ", "0"}], "\n"}], "\n", 
 RowBox[{"    ", 
  RowBox[{
   RowBox[{
    RowBox[{"for", " ", "i", " ", "in", " ", "range", 
     RowBox[{"(", 
      RowBox[{"len", 
       RowBox[{"(", "combinations", ")"}]}], ")"}]}], ":", "\n", "        ", 
    "straight"}], " ", "=", " ", "1"}]}], "\n", 
 RowBox[{"        ", 
  RowBox[{
   RowBox[{"for", " ", "j", " ", "in", " ", "range", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"i", "+", "1"}], ",", " ", 
      RowBox[{"len", 
       RowBox[{"(", "combinations", ")"}]}]}], ")"}]}], ":", "\n", "\n", 
   "            ", 
   RowBox[{
    RowBox[{"if", " ", 
     RowBox[{
      RowBox[{"combinations", "[", "j", "]"}], ".", "number"}]}], " ", "!=", 
    " ", 
    RowBox[{
     RowBox[{
      RowBox[{"combinations", "[", "i", "]"}], ".", "number"}], " ", "+", " ",
      "j", " ", "-", " ", "i"}]}], ":", "\n", "                ", 
   "break"}]}], "\n", 
 RowBox[{"            ", 
  RowBox[{
   RowBox[{"else", ":", "\n", "                ", "straight"}], " ", "+=", 
   " ", "1"}]}], "\n", 
 RowBox[{"                ", 
  RowBox[{
   RowBox[{
    RowBox[{"if", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"combinations", "[", "j", "]"}], ".", "number"}], " ", "==", 
       " ", 
       RowBox[{"13", " ", "and", " ", "straight"}], " ", "==", " ", "4"}], 
      ")"}]}], ":", "\n", "                    ", 
    RowBox[{"if", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"combinations", "[", "0", "]"}], ".", "number"}], " ", "==", 
       " ", "1"}], ")"}]}], ":", "\n", "                        ", "found"}], 
   " ", "=", " ", "1"}]}], "\n", 
 RowBox[{"                        ", "break", "\n"}], "\n", 
 RowBox[{"            ", 
  RowBox[{
   RowBox[{
    RowBox[{"if", 
     RowBox[{"(", 
      RowBox[{"straight", " ", ">=", " ", "5"}], ")"}]}], ":", "\n", 
    "                ", "found"}], " ", "=", " ", "1"}]}], "\n", 
 RowBox[{"                ", "break", "\n"}], "\n", 
 RowBox[{"    ", 
  RowBox[{"return", " ", "found"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"def", " ", "check_straight", "_flush", 
   RowBox[{"(", "combinations", ")"}]}], ":", "\n", "    ", 
  RowBox[{"if", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"check_straight", 
      RowBox[{"(", "combinations", ")"}]}], " ", "==", " ", 
     RowBox[{"1", " ", "and", " ", "check_flush", 
      RowBox[{"(", "combinations", ")"}]}], "==", " ", "1"}], ")"}]}], ":", 
  "\n", "        ", 
  RowBox[{"return", " ", "1"}]}], "\n", 
 RowBox[{"    ", 
  RowBox[{"else", ":", "\n", "        ", 
   RowBox[{"return", " ", "0"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"def", " ", "royal_straight", "_flush", 
    RowBox[{"(", "combinations", ")"}]}], ":", "\n", "    ", "king_exists"}], 
  " ", "=", " ", "False"}], "\n", 
 RowBox[{"    ", 
  RowBox[{"s_exists", " ", "=", " ", "False"}], "\n"}], "\n", 
 RowBox[{"    ", 
  RowBox[{
   RowBox[{
    RowBox[{"for", " ", "i", " ", "in", " ", "range", 
     RowBox[{"(", 
      RowBox[{"len", 
       RowBox[{"(", "combinations", ")"}]}], ")"}]}], ":", "\n", "        ", 
    RowBox[{"if", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"combinations", "[", "i", "]"}], ".", "number"}], " ", "==", 
       " ", "1"}], ")"}]}], ":", "\n", "            ", "s_exists"}], " ", "=",
    " ", "True"}]}], "\n", 
 RowBox[{"        ", 
  RowBox[{
   RowBox[{
    RowBox[{"if", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"combinations", "[", "i", "]"}], ".", "number"}], " ", "==", 
       " ", "13"}], ")"}]}], ":", "\n", "            ", "king_exists"}], " ", 
   "=", " ", "True"}], "\n", "    "}], "\n", 
 RowBox[{"    ", 
  RowBox[{
   RowBox[{"if", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
      "king_exists", " ", "and", " ", "s_exists", " ", "and", " ", 
       "check_straight", "_flush", 
       RowBox[{"(", "combinations", ")"}]}], " ", "==", " ", "1"}], ")"}]}], 
   ":", "\n", "        ", 
   RowBox[{"return", " ", "1"}]}], "\n", "    "}], "\n", 
 RowBox[{"    ", 
  RowBox[{"return", " ", "0"}], "\n", "\n", "\n", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"def", " ", "generate_deck", 
    RowBox[{"(", ")"}]}], ":", "\n", "    ", "colors"}], " ", "=", " ", 
  RowBox[{"[", 
   RowBox[{
   "\"\<hj\[ADoubleDot]rter\>\"", ",", " ", "\"\<spader\>\"", ",", " ", 
    "\"\<ruter\>\"", ",", " ", "\"\<kl\[ODoubleDot]ver\>\""}], "]"}]}], "\n", 

 RowBox[{"    ", 
  RowBox[{"numbers", " ", "=", " ", 
   RowBox[{"[", 
    RowBox[{
    "1", ",", " ", "2", ",", " ", "3", ",", " ", "4", ",", " ", "5", ",", " ",
      "6", ",", " ", "7", ",", " ", "8", ",", " ", "9", ",", " ", "10", ",", 
     " ", "11", ",", " ", "12", ",", " ", "13"}], "]"}]}]}], "\n", 
 RowBox[{"    ", 
  RowBox[{"cards", " ", "=", " ", 
   RowBox[{"[", "]"}]}]}], "\n", 
 RowBox[{"    ", 
  RowBox[{
   RowBox[{"for", " ", "j", " ", "in", " ", 
    RowBox[{"numbers", ":", "\n", "        ", 
     RowBox[{"for", " ", "i", " ", "in", " ", "colors"}], ":", "\n", 
     "            ", "new_card"}]}], " ", "=", " ", 
   RowBox[{"Card", 
    RowBox[{"(", 
     RowBox[{"i", ",", " ", "j"}], ")"}]}]}]}], "\n", 
 RowBox[{"            ", 
  RowBox[{
   RowBox[{"cards", ".", "append"}], 
   RowBox[{"(", "new_card", ")"}]}], "\n"}], "\n", 
 RowBox[{"    ", 
  RowBox[{"return", " ", "cards"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"def", " ", "pull_cards", "_from", "_deck", 
     RowBox[{"(", 
      RowBox[{"deck", ",", " ", 
       RowBox[{"cards_to", "_draw"}]}], ")"}]}], ":", "\n", "    ", "\n", 
    "    ", "pulled_cards"}], " ", "=", " ", 
   RowBox[{"[", "]"}]}], "\n"}], "\n", 
 RowBox[{"    ", 
  RowBox[{
   RowBox[{
    RowBox[{"for", " ", "i", " ", "in", " ", "range", 
     RowBox[{"(", 
      RowBox[{"cards_to", "_draw"}], ")"}]}], ":", "\n", "        ", "card"}],
    " ", "=", " ", 
   RowBox[{"deck", "[", 
    RowBox[{
     RowBox[{"random", ".", "randint"}], 
     RowBox[{"(", 
      RowBox[{"0", ",", " ", 
       RowBox[{
        RowBox[{"len", 
         RowBox[{"(", "deck", ")"}]}], "-", "1"}]}], ")"}]}], "]"}]}]}], "\n", 
 RowBox[{"        ", 
  RowBox[{
   RowBox[{"deck", ".", "remove"}], 
   RowBox[{"(", "card", ")"}]}]}], "\n", 
 RowBox[{"        ", 
  RowBox[{
   RowBox[{"pulled_cards", ".", "append"}], 
   RowBox[{"(", "card", ")"}]}], "\n"}], "\n", 
 RowBox[{"    ", 
  RowBox[{"return", " ", "pulled_cards"}], "\n", "\n", "        ", 
  "\n"}], "\n", 
 RowBox[{"main", 
  RowBox[{"(", ")"}]}], "\[IndentingNewLine]"}], "Code",
 CellChangeTimes->{{3.872255433736515*^9, 3.8722554414366283`*^9}, 
   3.872255479849684*^9},
 EmphasizeSyntaxErrors->True,
 CellLabel->"In[2]:=",ExpressionUUID->"f10aa016-c174-4f35-8bc4-31815cb2be6a"],

Cell[BoxData[
 RowBox[{"import", " ", "math"}]], "Output",
 CellChangeTimes->{3.872514734010943*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"822ffbb9-0153-4803-9aba-2794234e1e88"],

Cell[BoxData[
 RowBox[{"import", " ", "random"}]], "Output",
 CellChangeTimes->{3.872514734012434*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"073389a6-827b-4a98-b844-4d5bfa55e070"],

Cell[BoxData[
 RowBox[{"combinations", " ", "from", " ", "import", " ", 
  "itertools"}]], "Output",
 CellChangeTimes->{3.872514734014127*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"7ef3c507-2a6c-4a18-bf28-57df3c52a4ab"],

Cell[BoxData[
 RowBox[{"attrgetter", " ", "from", " ", "import", " ", 
  "operator"}]], "Output",
 CellChangeTimes->{3.872514734015724*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"ca8baa52-6d9c-4942-ba14-63e4597d8a8a"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["\<\"\"\>", "2"], 
  " ", "\<\" \\n\\n* one pair\\n* two pairs\\n* three of a kind\\n* \
straight\\n* flush\\n* full house \\n* four of a kinddqdq\\n* straight \
flush\\n* straight royal flush\\n\\n\"\>"}]], "Output",
 CellChangeTimes->{3.872514734017226*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"75d48f8d-7a5e-41e9-8f42-3d0c9e6aa4a1"],

Cell[BoxData[
 TemplateBox[{
  "Set", "write", 
   "\"Tag \\!\\(\\*RowBox[{\\\"Times\\\"}]\\) in \\!\\(\\*RowBox[{\\\"class\\\
\", \\\" \\\", RowBox[{\\\"(\\\", RowBox[{\\\"Card\\\", \\\":\\\", \
\\\"color\\\"}], \\\")\\\"}]}]\\) is Protected.\"", 2, 7, 1, 
   16379873887159528050, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8725147340777597`*^9},
 CellLabel->
  "During evaluation of \
In[2]:=",ExpressionUUID->"1b9ff125-2354-4745-972d-13a1fac8f2da"],

Cell[BoxData["\<\"\"\>"], "Output",
 CellChangeTimes->{3.872514734126608*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"e677ec89-a7a5-436b-a7ff-841de35b69f5"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.872514734127771*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"c7a44eaf-2696-45fd-b4ff-4bfe30247e3d"]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Task 2: Birthday Paradox", "Subchapter",
 CellChangeTimes->{{3.872423616661031*^9, 
  3.8724236203655*^9}},ExpressionUUID->"099ee814-8db2-4a63-8b88-1c9110418edc"],

Cell[CellGroupData[{

Cell["Summary", "Section",
 CellChangeTimes->{{3.872423644516287*^9, 
  3.872423660165956*^9}},ExpressionUUID->"a0a8708b-f092-4ee6-9a67-\
42b43b197e0d"],

Cell[TextData[{
 "The task covers the so called \[OpenCurlyDoubleQuote]birthday paradox\
\[CloseCurlyDoubleQuote] and how the probabilities of it change depending on \
the\n\tamount of people, ",
 Cell[BoxData[
  FormBox["N", TraditionalForm]],ExpressionUUID->
  "ed544271-6f4b-48b2-86ea-67336a780783"],
 ", that are included."
}], "Text",
 CellChangeTimes->{{3.8724878690052137`*^9, 3.8724881226787977`*^9}, {
  3.872488244719046*^9, 3.8724882771148252`*^9}, {3.872506455680169*^9, 
  3.872506496756156*^9}, {3.87251388742222*^9, 3.872513990633265*^9}, {
  3.872520185343132*^9, 
  3.8725201933240843`*^9}},ExpressionUUID->"1161e2d1-8c61-4649-a244-\
39df43510112"]
}, Closed]],

Cell[CellGroupData[{

Cell["Result", "Section",
 CellChangeTimes->{{3.872423644516287*^9, 
  3.87242367978154*^9}},ExpressionUUID->"3fb1824e-e75b-4cc5-8eaa-\
beadee826fe0"],

Cell[TextData[{
 "Assuming that the set of people, ",
 Cell[BoxData[
  FormBox["N", TraditionalForm]],ExpressionUUID->
  "385a1653-fe0a-46bd-9159-7e5e71f73911"],
 ",  are not twins and that their possible birthdays are equally likely, the \
probability \[LineSeparator]that two people in that set share the same \
birthday is ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["P", "N"], "(", "S", ")"}], " ", "=", " ", 
    RowBox[{
     RowBox[{"1", " ", "-", " ", 
      RowBox[{
       RowBox[{
        SubscriptBox["P", "N"], "'"}], 
       RowBox[{"(", "S", ")"}]}]}], " ", "=", 
     RowBox[{"1", "-", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         FractionBox["1", "365"], ")"}], "N"], "*", 
       FractionBox[
        RowBox[{"365", "!"}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"365", "-", "N"}], ")"}], "!"}]]}]}]}]}], TraditionalForm]],
  ExpressionUUID->"5da19c0e-d781-45a1-a1fc-b84e873b830b"],
 ".\n\nIf ",
 Cell[BoxData[
  FormBox[
   RowBox[{"N", "=", "40"}], TraditionalForm]],ExpressionUUID->
  "0783010b-0034-4a11-9a7a-6a55024a0b35"],
 " => ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["P", "40"], TraditionalForm]],ExpressionUUID->
  "179fa8cb-1e45-4afd-b553-06fa006608db"],
 "=",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"1", "-", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        FractionBox["1", "365"], ")"}], "40"], "*", 
      FractionBox[
       RowBox[{"365", "!"}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"365", "-", "40"}], ")"}], "!"}]]}]}], "\[TildeEqual]", 
    "0.89"}], TraditionalForm]],ExpressionUUID->
  "52d3430e-54c7-4a6f-872c-e83618c77b04"],
 ".\n\nIf my birthday was in the set, then the total amount of birthdays that \
are available for others shrink with one, \n\tsince my birthday is already \
known.\n\ti.e. instead of starting at 365 available days, it starts at 364.\n\
\t\n* See the subsection \[OpenCurlyDoubleQuote]Diagrams\
\[CloseCurlyDoubleQuote] for the theoretical and census model of the problem *"
}], "Text",
 CellChangeTimes->{
  3.8724870255526743`*^9, {3.872488289591103*^9, 3.8724883399287*^9}, {
   3.8724888607530937`*^9, 3.8724888766500473`*^9}, {3.872506435389464*^9, 
   3.872506439423839*^9}, {3.872506676151237*^9, 3.87250671480719*^9}, {
   3.872506756839706*^9, 3.872506880970001*^9}, {3.872514006273117*^9, 
   3.8725140558240023`*^9}, {3.8725146577388067`*^9, 3.872514690780205*^9}, {
   3.872514851211422*^9, 3.872514929370219*^9}, {3.8725150484790373`*^9, 
   3.872515095503866*^9}, {3.8725154779651537`*^9, 3.872515560276575*^9}, {
   3.872516016659148*^9, 3.87251602224219*^9}, {3.872516382681727*^9, 
   3.872516394718596*^9}, {3.872516535288006*^9, 3.8725167689375896`*^9}, {
   3.87251986498099*^9, 3.8725198690670433`*^9}, {3.872520230131271*^9, 
   3.872520243562603*^9}},ExpressionUUID->"d2e60fcf-ef9f-4002-b131-\
18873c634cd4"],

Cell["", "Text",ExpressionUUID->"048da40f-8692-49a1-b65f-bc166812bf19"]
}, Closed]],

Cell[CellGroupData[{

Cell["Mathematical Formulas", "Section",
 CellChangeTimes->{{3.872423644516287*^9, 
  3.872423691233396*^9}},ExpressionUUID->"8779e6db-4076-4a9b-87d6-\
ff38d13f3bac"],

Cell[TextData[{
 "Probability of ",
 Cell[BoxData[
  FormBox["N", TraditionalForm]],ExpressionUUID->
  "a56900e8-95ff-47e1-87c6-05efc411f47a"],
 " people not sharing the same birthday ",
 Cell[BoxData[
  FormBox["S", TraditionalForm]],ExpressionUUID->
  "2e29a920-5ed7-4576-847c-b17e746181c9"],
 ":\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["P", "N"], "'"}], 
    RowBox[{"(", "S", ")"}]}], TraditionalForm]],ExpressionUUID->
  "6f2f2dbb-32fc-44cb-b0d2-f7146a381f25"],
 " = ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      FractionBox["1", "365"], ")"}], "N"], "*", 
    FractionBox[
     RowBox[{"365", "!"}], 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"365", "-", "N"}], ")"}], "!"}]]}], TraditionalForm]],
  ExpressionUUID->"b2b2086c-bfe1-40d7-a82e-df0c7348f4a3"],
 "\n\t\nProbability of ",
 Cell[BoxData[
  FormBox["N", TraditionalForm]],ExpressionUUID->
  "8004f491-17ba-4a1e-9210-cf3eae8b9fef"],
 " people sharing the same birthday ",
 Cell[BoxData[
  FormBox["S", TraditionalForm]],ExpressionUUID->
  "5ba4e543-7501-41a3-b0de-2408c5858027"],
 ":\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["P", "N"], "(", "S", ")"}], " ", "=", " ", 
    RowBox[{"1", " ", "-", " ", 
     RowBox[{
      RowBox[{
       SubscriptBox["P", "N"], "'"}], 
      RowBox[{"(", "S", ")"}]}]}]}], TraditionalForm]],ExpressionUUID->
  "af4b8c18-9560-4266-a2f9-d6833ef2c3eb"],
 "\n\t\n"
}], "Text",
 CellChangeTimes->{{3.8725075740167503`*^9, 3.8725076570902443`*^9}, {
  3.8725077055963783`*^9, 3.8725077600576277`*^9}, {3.872507815777945*^9, 
  3.87250783825949*^9}, {3.87250809565355*^9, 3.8725081211364307`*^9}, {
  3.872508244713291*^9, 3.872508244713488*^9}, {3.872508430271267*^9, 
  3.8725084575755167`*^9}, {3.872508521658125*^9, 3.872508635934237*^9}, {
  3.87250889647227*^9, 3.8725089447158203`*^9}, {3.872509194098201*^9, 
  3.872509285400456*^9}, {3.872509357983015*^9, 
  3.87250939859939*^9}},ExpressionUUID->"06e44a1c-399d-43df-a357-\
11dba9bd9c47"]
}, Closed]],

Cell[CellGroupData[{

Cell["Diagrams", "Section",
 CellChangeTimes->{{3.872423644516287*^9, 3.872423660165956*^9}, {
   3.872423710446082*^9, 3.872423715194086*^9}, 
   3.872516708546772*^9},ExpressionUUID->"90ff902b-2217-475c-855d-\
0366df4e220d"],

Cell[CellGroupData[{

Cell["Graphs", "Subsection",
 CellChangeTimes->{{3.872516240507086*^9, 3.872516241156461*^9}, {
  3.872516521887035*^9, 3.872516525031857*^9}, {3.872518295884616*^9, 
  3.87251829708082*^9}},ExpressionUUID->"2df1784e-dcf5-4762-af77-\
7ae3b553fdea"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Import", "[", 
  "\"\</home/hall/Documents/IX1500/diskret-matematik-ix1500/simulated.png\>\"\
", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Import", "[", 
  "\"\</home/hall/Documents/IX1500/diskret-matematik-ix1500/mathematical.png\>\
\"", "]"}]}], "Input",
 CellChangeTimes->{{3.8725160248849277`*^9, 3.872516110725965*^9}, {
  3.872516165267568*^9, 3.872516171019114*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"b7a6c1c3-0e35-4955-a110-3f3c15708629"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzs3Xd0HNXd/3FOIEDyS+E5+eN50sHGVNPBCS0GAgESAoSEEoIhhEBooUPk
KndjXHEDY1ww7t3G6la1qiXLsmU1q0tW710r7a5/390xG6GyWq1m7kra9+vs
8dmduXPv9ZfnPOTDzNx7yT/efOylb51zzjnvXih/PPb8f+5+553nJ/75Ivnx
+BvvvvKvN17854NvvPfiv15859f/OFcO3nv+Oee0nXfOObbvZwAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAEYii8VSXFxcX1/fAAAAAAAwkiQvyV+SwjwdBEcyqfA5AAAAAABVJIV5
OgiOZPX19VqRPf2fNAAAAABghNNuMkoK83QQHMmkzlJk+dPTEwEAAACAEY78
pQBFBgAAAAA1yF8KUGQAAAAAUIP8pQBFBgAAAAA1yF8KUGQAAADAe5jN5jYo
0es+QeQvBSgyAAAA4A2sVmtpaWk6VMnMzDSZTN3+KZC/FKDIAAAAgDfQEm51
dXVra6unb3KOfC0tLdnZ2QUFBVartes/BfKXAhQZAAAAGPHMZrOWcD09ES9S
X18vNe/o6Oh6kPylAEUGAAAARry2tjYJXK2trZ6eiBeRakvNpfJdD5K/FKDI
AAAAwIinhdxugQuG6rXm5C8FKDIAAAAw4hFy1SPkegpFBgAAAEa8kRRyf/nL
Xy5ZsmRAl6xfv/6HP/xhr6d8fX2vu+467ftzzz33yCOPaN/Hjx//5ptvDmae
hFxPocgAAADAiEfI7SvkNjU1Odbj6hpya2pqGhsb3R7xDCHXcygyAAAAMOIN
r5Dbc3vZrvQNuV11DbmDHPEMIddzKDIAAAAw4g2dkDt+/PjX7H7wgx/86Ec/
mjJliraTrATJmTNnTpgw4fvf/76ETTmya9euq6666vzzz5dTCxcudPSgtXzq
qae++93v/uQnP1mxYoXj1KJFi8aOHSvHf/azn73yyitNTU3acS3k7t2799JL
L73gggt+97vfFRUVaaf6fVxZvpzTRXNzs8xw586djkGlWxnRcdvXgZDrKRQZ
AAAAGPG6Bi4JlS2mToM+WmJ1QjLj9773PcmPmZmZmzZtknj42WefnbFHV4m9
EmZz7JKSkr71rW9JmM3KypKI+p3vfEf+1HqQlhIz582bJ6eWLVt27rnnBgcH
a6eWLFkSFhaWn58fGhp6+eWXS87Vjsu13/72t2+++ebY2Fjpedy4cbfddpt2
qt+QW1NTI5FZZlJmJ0defPHF3//+946/0cMPP/zss886r7kD+UsBigwAAACM
eF0Dl0TRX/7noEEf6dz5TCQ8XnnllY4s/J///Ed+nrFH10cffdTR7Omnn77v
vvscP99///2rrrpK+y4tH3jgAcepJ5988sEHH+w50M6dO3/0ox9p3yXkSuqJ
j4/XfmZkZMjPhISEM64tPNXtcWW5UJJ1aWmpfK+oqDjvvPMiIiKc19yB/KUA
RQYAAABGvCEVcp9//nnHz3379klINJvNEiRnz57tOH7DDTdMnz69a7Nvf/vb
0uyMPXLOmDHDcWrp0qUXX3yx9j0kJOSee+75yU9+8r3vfe/CCy+UpNPS0nLG
HnJlFIvF4rjqoosu2rBhwxm3Qq649tpr582bd8b+gPTo0aN7vX9NyPUUigwA
AACMeEPqceW+Qm7XIOlGyM3Pz7/gggveeuutuLi4rKystWvXStKpq6s7Y0DI
XbZs2eWXXy5fxo4d2zWb91VzB/KXAhQZAAAAGPGG1MJTjgePhY+Pj+Nx5a5B
sufjyldffbX2XVp2fT75qaee0n7u2rVLgrAjyc6aNatryHU8nywyMzMH9Ljy
mDFjuq58JWpray+88MKPP/74W9/6VnFxca9/U0Kup1BkAAAAYMQbUiH3e9/7
3ttvvy1Jc8uWLf/v//2/Tz/99EyPkHv06FHHwlMbNmzotvDUD37wg/nz58up
FStWnHvuuYGBgXI8JSVFos3SpUtzc3M3btz405/+tGvIlfw7bty4+Pj4pKSk
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
25eqV4cAAACDQf5SgCIDMNSA1jfWni5+ZEW0XqP77D4uHX586JReHQIAAAwG
+aubFStW/PKXv7zgggvGjRuXkND7AqRLliy57LLLLrzwwp/97GdvvfVWW1ub
8z4pMgBDaesb3+Da+sYF1c3SeMwkf1OnRZfR//lFonS4Kb5Al94AAAAGifzV
1bZt284///x169alpaW9+OKLF110UUVFRbc2mzdvlggsf+bn5wcFBf34xz9+
++23nXdLkQEYKsa+vvG9i1xa39hqtV43I0japxTV6TL6Y6tipLeA1FJdegMA
ABgk8ldX48aNe+2117TvFovlJz/5ybx587q1kQb33HOP4+c777xz++23O++W
IgMw1P6UkgGtb/zs2gRp/0Vsvi6jj/8oTHo7kl+jS28AAACDRP5yMJlM5557
7t69ex1Hnn322Ycffrhbs82bN//whz/UnmTOzc294oor5syZ07O39vb2hq8V
FxdTZADGGej6xouDs6T9ZZP9r58R5ORz/5LIisZ+XscQY6cFSm+5lU2D+0sA
AADog5DrUFJSIqWIjf3vrZD3339/3LhxPVt+/PHH3/72t8877zxp//LLL/fa
m6+v7znfRJEBGERb33iqy+sbpxTVaasx9/v5KDDDeVdtHWatZX1rx6D/HgAA
ADog5Dq4GHLDw8P/93//d82aNSdOnNizZ8/Pf/7zmTNn9uyNO7kAlNHWN14a
MoD1jaua2rMrGp18NsUXaItZSYx10k9JXas0u3SSn9Xa/8LOAAAAChByHVx8
XPmOO+547733HD+//PLL73znOxaLs0VKKTIAQ71oX9/4yzg91zfuNFtunXtI
ut2VVOykWerpemkzbk6IjkMDAAAMBvmrq3Hjxr3++uvad8mtP/3pT3suPHXj
jTd+8MEHjp9btmyRkGs2O7vTQZEBGMqg9Y1XhGVLt39cftjJXdrwzApp8+DS
KH2HBgAAcBv5q6tt27ZdcMEFGzZsSE9Pf+mlly666KLy8nI5PmHCBB8fH62N
r6/v97///a1bt+bl5QUHB48ePfqJJ55w3i1FBmAog9Y3rm5qHzPZX3o+Wljb
V5tdScXS4JnP4/UdGgAAwG3kr26WL1/+i1/84vzzzx83blx8/Nn/2TZ+/Pjn
nntO+97Z2Tl9+nTJthdeeOHPf/7zV199ta6un70mKTIAQ2nrG+cYsL7xO9tT
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
CDQZAAAgDvkrAk0GAACIQ/6KQJMBAADikL8i0GQAAIA45K8INBkAACAO+SsC
TQYAAIhD/opAkwEAAOKQvyLQZAAAgDjkrwg0GQAAIA75KwJNBgAAiEP+ikCT
AQAA4pC/ItBkAACAOOSvCDQZAAAgDvkrAk0GAACIQ/6KQJMBAADikL8i0GQA
AIA45K8INBkAACAO+SsCTQYAAIhD/opAkwEAAOKQvyL44IMPQpO3bt26GwAA
gP+lkLxC/gopLN1B8GT21ltv1QMAACCWkMLSHQRPZrt27QpN3rJlS7p/pQHH
JPndl2sPyCKGluxiYsk6hpbsEpJXmNiQwtIdBE9mu10TTlYxsWQdQ0t2MbFk
HUNLdjGxEWgy2cXEknUMLdnFxJJ1DC3ZxcRGoMlkFxNL1jG0ZBcTS9YxtGQX
ExvBgQMHxo8fH/5NdyFwTEwsWcfQkl1MLFnH0JJdTCwAAAAAAAAAAAAAAAAA
AAAAAACcEOXl5cXFxbm5uSUlJcuWLUt3OVDbhAkTevXq1bRp04KCgoEDB27Y
sCG1a//+/SNHjmzVqlWTJk0GDRr03nvvpbFOONLEiRPr1at36623Jqsmloz1
t7/9bejQoWE48/LyevTosWLFimT74cOH77zzznbt2oXtF1xwwaZNm9JbJwSH
Dh264447OnToEMayU6dOd999dxjUZJeJJXMsXLhwwIABX/ziF8OZwHPPPZfa
XseU7ty585prrmnWrFmLFi2uv/76vXv3pqPwk8HMmTNzcnKmTJmydu3a4cOH
5+fn/+Mf/0h3UfApF1988dSpU998881Vq1ZdeumlRUVF+/btS3aNGDHitNNO
mzdv3muvvda7d++zzz47vaVCTcuXLw/nYGeeeWYq5JpYMtP7779fXFx87bXX
Llu27O233547d+7mzZuTXffee2841/rtb3+7evXqyy67rGPHjvv3709vtVBW
Vta6devnn3/+nXfemTVrVtOmTR9++OFkl4klc8yePfv222+vqKioFXLrmNJ+
/fr17Nlz6dKlixYtOv3006+++uo01Z71SkpKRo0alSxXVVW1b99+4sSJ6S0J
6rB9+/bwg2LhwoVh+YMPPmjUqFH4v1uya/369WHXn/70p7QWCP+xd+/ezp07
v/zyy+eee24Sck0sGWvcuHF9+/Y9cvvhw4fbtWt33333JathhnNzc2fMmBG3
Oqitf//+119/fWp10KBBQ4cOrTaxZKqaIbeOKV23bl14ZOpCmjlz5tSvX3/b
tm1pqTmrHTx4sEGDBjV/sfD973//sssuS2NJULfKysrwn/+aNWvC8rx588Ly
rl27UnuLioomTZqUvurg/4Ufp2PGjAkLqZBrYslY3bt3D+M6ePDggoKCr371
q48//niy/a233gpDu3LlytQjv/Wtb91yyy1pKhP+o6ysrLi4eOPGjWF51apV
bdu2/fWvf11tYslUNUNuHVP65JNP5ufnp7Z/9NFHIalVVFRErvYksG3bttDk
P/7xj6ktP/zhD0tKStJYEtShqqqqf//+55xzTrI6ffr0nJycmg8466yzxo4d
m47S4FNmzJjRo0eP5OqjVMg1sWSs3I/ddtttr7/++mOPPZaXlzdt2rSwfcmS
JeE84d1330098sorr7zqqqvSVyn8WzgfGDduXP369Rs2bBj+nTBhQrLdxJKZ
aobcOqa0rKysS5cuNZ9YUFAwefLkmKWeHIRcssuIESOKi4u3bt2arIoMZKYt
W7a0bdt29erVyaqQS+Zr1KhRnz59UqujR4/u3bt3tchAppoxY8aXvvSl8O8b
b7zx1FNPtWrVyq9lyGRCbmQuVyaLjBo1Kvwf7e23305tcfEnmSn8UA2T2eAT
Ybl+/fph4ZVXXjGxZKYwijfccENqNZxTtW/fvtrFn2SqcD5QXl6eWr3nnnu6
du1abWLJVC5Xjq+kpOTmm29OlquqqgoLC914ikxz+PDhkHDDGVetDwJIbuPz
zDPPJKsbNmxwGx8ywZ49e9bU0KtXr2HDhoUFE0vGuvrqq2veeGrMmDHJG7vJ
DVLuv//+ZPvu3bvdxodM0KpVq5pvb02YMKFz587VJpZMdeSNp446pcmNp157
7bVk19y5c9146rjNnDkzNHbatGmhqzfeeGN+fr7PbSTT3HTTTS1atFiwYMHf
P/Hhhx8mu0aMGFFUVDR//vzwA6HPx9JbKhwpdblytYklUy1fvrxhw4ZlZWWV
lZXTp09v3Lhxchuf6o8/6iKcG/zud7974403Bg4c6ANZyASlpaWFhYXJRwhV
VFS0adMm9acfJpbMsXfv3pUfC9F10qRJYeGvf/1rdZ1T2q9fv6997WvLli1b
vHhx586dfYTQ5/HII4+Ek66cnJySkpKlS5emuxyord4Rpk6dmuwKPxNGjhzZ
smXLcEp2xRVXhPyb1krhKGqGXBNLxvr973/fo0eP3Nzcbt26pe6uXP3xmw53
3nnnqaeeGnZdcMEFyf1sIb327NkTfq6G09e8vLxOnTrdfvvtBw8eTHaZWDLH
q6++WusMtrS0tLrOKd25c2cItk2bNm3evPl1110XYnLaqgcAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAADgJLJ48eIePXo0bNhw4MCBaSngnXfeqVev
3sqVK9Py1QEAAMhApaWlx5dSS0pKhg0btnXr1l27dp3wqo6FkAsAAEAtxx1y
W7duPWXKlBNez7ETcgEAANJuzpw555xzTosWLVq1atW/f//Nmzcn25PI9vTT
T/ft2zcvL69Xr14bN25cvnz517/+9SZNmvTr12/79u3JI6uqqu66667CwsKc
nJyePXuGAybbX3311XCE1PuqIf2F1XDYsDx16tTwFV988cVu3bqFo1188cXv
vvtu2D5+/Ph6NYQj1Kr2wIEDo0ePLigoyM3NDWWHelKlpoSD13pWcXHx3Xff
PWTIkMaNG7dv3768vDy1K5R3ww03tGnTplmzZueff/6qVatSuyZPntypU6dG
jRp16dLlqaeeSm0PXyLsCh0IbenYseOsWbNqdiwVctesWRMeE15d27Zthw0b
tmPHjuP6/gAAAPBfeOaZZ5599tnKysqQzr7zne+cccYZIbRWfxLZQggNUXTd
unW9e/cO8fa8885bvHjx66+/fvrpp48YMSI5wqRJk5o3bz5jxowNGzaMHTs2
pMJNmzZVf1bIDQ/79re/vWLFij//+c/du3e/5pprwva9e/deddVVIRv+/WMH
Dx6sVe0tt9wSUurs2bPXrl1bWlrasmXLnTt3Hjp0KDw41PDQQw+FhQ8//LDW
s0LIDRl24sSJIaf/4he/aNCgwUsvvZTsCjWEVx3KCDX/4Ac/aN26dThg2F5R
UREqfPTRR8NTHnjggfCU+fPnJ08JryI87Iknngi77rjjjrAr9Kf60yE3vOqQ
xG+77bb169eHdl144YUhQZ/obx0AAAB12bFjR4hpa9asqf4ksv3yl79MdoUM
G1bnzZuXrIbA2LVr12Q5pM6ysrLUQc4666yRI0dWf1bIDcupd41Dljz11FOT
5TouV963b18IntOnT09W//Wvf4Uv/fOf/zxZbdGixZHv4SZCyA3BObX63e9+
95JLLgkLixYtCtH4wIEDqV1f/vKXH3vssbBw9tlnDx8+PLX9yiuvvPTSS5Pl
UHkq4Aff+MY3brrppupPh9x77rnnoosuSj1m69atYVcIxUctDwAAgBNl06ZN
Q4YM6dixY7NmzZo0aRKy2AsvvFD9SWRLrgcO5s+fH1ZTlyhPmTKlZcuWYWH3
7t1h+4IFC1IHHDNmTPKuZd0ht3HjxqmnVFRU1K9fP1muI+SuXr06HOEvf/lL
asvll19+3XXXJct1h9y77rortfrQQw916NAhLJSXl59yyilNagirY8eODbvC
q5s2bVrNp4QWJcuhhl/96lc1X+95551X/emQO3jw4JDHax457Jo9e/ZRywMA
AOBE6dq160UXXfTKK6+sW7fuzTffDFnsueeeqz7iL0xrJdbkj2qr6wy5Cxcu
DLvef//9ZHvIy7X+Jjf1lPAVw65kOWbIvffeewsLCys/Lfnj2c8Zcvv16zdo
0KBaR963b99RywMAAOCE+Oc//xly2R/+8IdkddGiRf9tyK0+2uXKo0aNCgsh
NYenrF27Ntn++OOPH0vIHT58+IABA45abQiJOTk5NS9XDhH1vvvuS1brDrnJ
9cmJIUOGJKsvvfRSgwYNkpJqOfJy5f79+yfLodTk+uRE7969j7xc+cc//nHX
rl0/+uijo9YDAADA/0JVVVXr1q2HDRtWWVk5b968kE+PI+Q++OCDzZs3nzlz
5oYNG8aNG5e68VQIoaeddlqIh2H1+eefD6HvWEJuyMtFRUXhUDt27AhHqFXw
rbfeGjL1nDlzUjeeSr1TXHfIDRX+7Gc/27hxY3l5eQi2L774Yth++PDhvn37
9uzZc+7cuaGwJUuWhHC6YsWKpKTwQiZPnhyKT248lbrVcyi1TZs2Tz75ZDja
T37yk1NOOSUJ8jU7tm3btoKCgsGDBy9fvnzz5s3hy1177bWHDh067u8UAAAA
x+Lll1/u3r17bm7umWeeuWDBguMIuSEp//SnPy0sLAypsOZHCAWLFy8+44wz
8vLyvvnNb86aNetYQu727dsvvPDCpk2bHvUjhPbv3z969OiQMWt+hFDiMy9X
DnG7cePG7dq1e/jhh1O79uzZEw4YgnMoPkTyoUOHbtmyJdlVx0cIPfroo6HI
UEOHDh2efvrpZHutjoV0fMUVV+Tn53/hC1/o1q3bmDFjQqau+3sBAAAAnymE
3AcffPBEHS31ewAAAACIT8gFAADgpCHkAgAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAABw8vk/PJwn0w==
    "], {{0, 1604.}, {1271., 0}}, {0, 
    255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{352.8272727272732, Automatic},
  ImageSizeRaw->{1271., 1604.},
  PlotRange->{{0, 1271.}, {0, 1604.}}]], "Output",
 CellChangeTimes->{3.8725163270310183`*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"e5146da6-5b46-4966-a4ec-8b2b395804e9"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzs3XeYHXSd73GfVcH1uup9/ONe3SItoIjYo4LKwuqyui667mJHLIsFvSo2
UoDQktBDCUWQKr2XzKT33nvvmfRCJmUy9RzvLwyOMYQkJDPzO/M9r9dzHp6U
YfL9hJXl/czJOUd//xdf+eHfvO51r/v1m9JfvvK9C0//1a++1/W/3p6+c/bP
f/2TH/38vP/5/M9/c96PzvvVJ77/+vSD7z3ida+b8IbXvW73t/8EAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAHUigUqqqqqqurtwEAANCWUnml/koVljsEW1ka9ToAAADaS6qw3CHYylIv
N+/KHe4AAADBNX9dL1VY7hBsZWla2pX+mvsQAACA4KL2V9RdAAAApSZqf0Xd
BQAAUGqi9lfUXQAAAKUman9F3QUAALxSU1NTLe1in28mErW/ou4CAAD2VCwW
165dO4/2smDBgvr6+r3+KUTtr6i7AACAPTVH5ebNm3ft2pX7S3nx1dTULF68
eMWKFSnn9/ynELW/ou4CAABaNDU1NUdl7kPKSHV1dfo9b2ho2PMHo/ZX1F0A
AECL2tra1Di7du3KfUgZSb/b6fc8/c7v+YNR+yvqLgAAoEVzV+7VOLSpff6e
R+2vqLsAAIAWurL96UoAACCSSF357ne/u0+fPq/pb7n33nvf9ra37fOnevTo
8YEPfKD52+eee+6XvvSl5m+fdtppv/jFLw7nTl0JAABEoitfrSt37NjR8nJG
e3blli1btm/ffsi/4p90JQAAEEvH6spXvu3jnlq3K/e0Z1ce5q/4J10JAADE
Ujpdedppp/30JW9961vf8Y53XHTRRc3v8Jja7fLLLz/nnHP+7u/+LvVd+pEn
n3zyxBNPPOKII9JPXXfddS2fofkjv/71r7/5zW9+17ve1bdv35afuv766086
6aT04//wD//wk5/8ZMeOHc0/3tyVzzzzzHHHHXfkkUf+67/+66pVq5p/6oDP
g03feN0edu7cmS584oknWn7R9GnTr9jyxc0WuhIAAIhkz8ZJHVdT39hGj+ZI
3I+UaW95y1tSsi1YsODBBx9MRXbnnXf+6aVaTKWZ+nHJS6ZMmfI3f/M3qR8X
LlyYqvBv//Zv01+bP0P6yFR2vXv3Tj918803v/71rx80aFDzT/Xp02fYsGHL
ly8fOnToCSeckNKy+cfT3/vGN77xox/96Lhx49Jn7ty58ymnnNL8Uwfsyi1b
tqRKTZese0n6kfPOO+8LX/hCy6KzzjrrO9/5zv5/z1tE7a+ouwAAgBZ7Nk6q
v3df2K+NHumT7/+S1Gvvfe97W/LzwgsvTN/900u1+OUvf7nlw775zW9+7nOf
a/nub3/72xNPPLH52+kj/+3f/q3lp772ta99/vOff+Uv9MQTT7zjHe9o/nbq
ylQ9EyZMaP7u/Pnz03cnTpz4p4N73Z69ngeb/sYUs2vXrk3f3rBhwxve8IYR
I0bs//e8RdT+iroLAABoUVJd+b3vfa/lu88++2zqsqamptRuV155ZcuPf+hD
H7r00kv3/LA3vvGN6cP+9FLlXXbZZS0/deONNx511FHN3x48ePAZZ5zxrne9
6y1vecub3vSmVDo1NTV/eqkr069SKBRa/q63v/3t9913358OqSuTk08+uXfv
3n966Zm3xx577D6/SqsrAQCASErqebCv1pV7ttshdOXy5cuPPPLIX/7yl+PH
j1+4cOHdd9+dSmfr1q1/aoOuvPnmm0844YT0jZNOOmnPHH613/MWUfsr6i4A
AKBFSb1uT8szWpMuXbq0PA92z3Z75fNg3/e+9zV/O33knk98/frXv9783Sef
fDK1Z0s8XnHFFXt2ZcsTX5MFCxa8pufBdurUac8XDkpefPHFN73pTTfddNPf
/M3fVFVV7XOprgQAACIpqa58y1vecsEFF6S4e/jhh//X//pfd9xxx59e0ZVT
p05ted2e++67b6/X7XnrW9969dVXp5/q27fv61//+gEDBqQfnzFjRkqbG2+8
cenSpQ888MDf//3f79mVKTk7d+48YcKEKVOmfOIlzZ/tYLoyFe5ZZ521evXq
TZs2tVyYyveII47Y80967kVXAgAAkZRUV55//vk//vGPUxv+7//9v7t169by
PiN7Pde0+X1GUg/+0z/907XXXtvy483Pgz377LPf/OY3/9//+39vuummlp+6
4YYb3vnOd6YIPfPMM1Na7tmVb3vb25566qljjjnmyCOP/OxnP7ty5crmv+Vg
unL8+PEnn3xy+hvTJ2z5tYYOHZq++/jjj7/aUl0JAABEUlJd2dJrHVrq1ne8
4x319fWv9gG6EgAAiERXtqKampolS5aceOKJ3bp128+H6UoAACASXdmKevTo
8YY3vOGMM87YsWPHfj5MVwIAAJGUTleWD10JAABEoivbn64EAAAi0ZXtT1cC
AACRNDdOTU1N7kPKyK5du3QlAAAQRqFQWLBgweLFi6urq1Pv1NLG0m/yypUr
58+f39TUtOc/iKj9FXUXAACwp/r6+hUrVsyjvaSofOULxkbtr6i7AACAvRSL
xYaGhtxfyisXe32lslnU/oq6CwAAoNRE7a+ouwAAAEpN1P6KugsAAKDURO2v
qLsAAABKTdT+iroLAACg1ETtr6i7AAAASk3U/oq6CwAAoNRE7a+ouwAAAEpN
1P6KugsAAKDURO2vqLsAAABKTdT+iroLAACg1ETtr6i7AAAASk3U/oq6CwAA
oNRE7a+ouwAAAEpN1P6KugsAAKDURO2vqLsAAABKTdT+iroLAACg1ETtr6i7
AAAASk3U/oq6CwAAoNRE7a+ouwAAAEpN1P6KugsAAKDURO2vqLsAAABKTdT+
iroLAACg1ETtr6i7AAAASk3U/oq6CwAAoNRE7a+ouwAAAEpN1P6KugsAAKDU
RO2vqLsAAABKTdT+iroLAACg1ETtr6i7AAAASk32/ho5cuQXv/jFd77znemM
Z5555tU+bPjw4R/60IeOOOKIY4899t577z3gp82+CwAAoExk76/Kysru3bs/
/fTT++nKZcuWvfnNb/7Vr341b968W2655fWvf/2AAQP2/2mz7wIAACgTpdNf
++nK3/3ud+973/tavvu1r33tzDPP3P9nK51dAAAAsZVOf+2nKz/96U//4he/
aPnuPffc89a3vvWVH1ZXV7ftz6qqqkpkFwBA2SoWi41NhdqGpp11jdU1DZt3
1K3fVrt6666Vm2uWbNyxcP32uWu2zazaOnXli5OXb5mwdPPYJZvGLN40cuHG
YQs2DJ2/ftDc9f1nr6uctfaFmWuenb766WlVT06pemzyqkcmrnxowsoHxq+4
b+zye8Ysu2vU0t+PXHL7iCV9hy2+eciiGwcvun7QwmsHLLiq//xelfOu7Df3
sufn9nhuzsXPzu7+zKyuT8/q8lR6zLzwyZm/fWLGbx6f8evHZ/zqsRkXPDr9
l49O/8Uj0/7fw9N+9vC0nz409fyHpv7kwSk//uOUHz0w5bz7J//P/ZN/cF96
TPrevZO+e8/Ec++ZeM7dE7/9hwnp8a27JnzjzvFf//34r/1+3FfvGHf27eP+
+/ax/3Xb2P+8dcyXbx3zpb5jzuo75j9uGf3Fm0f/+82jPn/jqH+7cdSZfUbu
+fjXG3Y/PnfDiObHZ6/f/fiXPz/OuG54epze8rh29+Of//w47ZphzY/PvPT4
9NUvPz519dD0OPWqlx+n9P6rxyd7DUmPT/z58fGeux+dew5ufnzsyt2Pj/75
8ZErmh+Dmh8fvnz340N/fnzwsoHp8YE/P06+dPfj/T0GND9Oan5cku3xvkyP
Ey/un+Xx3kyP43/3ZIn01366slOnTr169Wr5bkVFRfrgXbt27fVhPXr0eN1f
K4VdAAClIPXdjrrGjdvrVm2pWbR++6yq6onLtqSIGzZ/w4A5656fsSYlW+q1
+8ctT5l26/DFqc6uGTC/Z8W8VGQpxFJ8peBKkfX9eyelkkr1lKIpVVKqoVQ6
KWdSqqQeSdGRmiL9R/Xx3SuP7Vrx7gv7eXh4lMPjH3/5eIn01+F3pa9XAgDx
pB6srmmoerFmwbrtU1ZsGbFwY7+Zax+btOq+scvvGLGkz+CFvSvnp/S78MmZ
P39k2g8fmHzO3RPPvmPcf9wy+nM3jPjU1UM/euXgky4ZcFy3Ukm8Y7pWdOpe
eeLF/d/fY8CHLh/0sSsHf7LXkHTnadcMS3362etHnNln5L/dOCoV61m3jP5S
3zFfuW3s2bfv/iLgN+4cn3o2rfvuPRN/cN+k8+6f/KMHppz/4NSfPTwtDb/g
0empfH/7xIwuT83s9vSsi56ZnX5PLnt+7pX95vaqmHdV//nXDlhw/cAFNwxa
mHr5piGLbh6yqO+wxemRCvq24UvS7+TvRy65c+TS1NR/GL3s7tHL7hmzLP0O
p8p+YNzyP45f8eCEFQ9NWPnwxJWPTlqZfvMfm7zqiSm7v3j61NSqp6dVPTt9
dXo8N2NNyvP0T6di1trKWWv7z16Xgn3gnHWD5q4fMm/90PnrU8IPX7Ah/RMc
uXDjqEUbRy/alB4p7ZsfY1seS3Y/xi3Z3PwYv3T3Y8KfHxOXbWl+TFq++zH5
z4/0fxsvPV5sfkxd+fJj2kuP6au2Nj9mvPSYWfXyY1ZVdfNj9uq/esxZs/sx
d8225se8tS8/5q/b/Uj/p9j8WLh+92PRnx+LN7Q8dqTHko0vP5a+9Fi2aWeu
x/JMjxWb8zxWbq5p/8ec5etKpL8O/3mweyqd5/cCADSra2zasL02/Vd3+u/8
lBX9Z699fPKq1C+3DF3Uq3Je92dm/eKRaamYvvb7camqUmd95IrBJ1xU2epl
lz7nBy8b+IleQ/752uH/esPIL948+j9vHZN+0VRt6Vf/8R+npExLjdb16Vkp
zXpWzEtFllosxVdqrhRZj0xcmWIqBVSKphRKqYxS9aSiSc2SeiRFRxqY/ot6
1ZaaddW1G7fXba2p317bsKu+qaGpUCgUc/9DANpE6fTX/l+356STTmr57je+
8Q2v2wMAlIjGpkKqp4Xrt49bsrnfzLV/HL+i77DFKcd++8SMHz4w+at3jDuz
z8gUce+5qP/hxGCn7pUfvnzQp68e9vkbR519+7jv3jPx/AenXvDY9G5Pz7r8
hbkp/VKcpu5Lv/qTU6rSGUPnrx+7eNPUlS/OXbNt2aada6t3pb6rbWgqFpUd
0Pqy99eOHTumvySdccMNN6RvrFy5Mv14ly5dzjnnnOaPaX6fkd/+9rfz58+/
9dZbvc8IANA+UoXtqGtcunHH+KWbn5+x5u7Ry1LBdXlqVgrG/7597OnXDf/A
ZQOP6vIa8vDoLv1OvnTgqVcNTbH5X7eNPTfl4UNTL3xy5hUvzL1h0MIUhg9P
XJl+oWHzN0xavmXe2m2rttS8uLO+vrGQ+3cCYH+y99fw4cP3erGdc889N/14
+utpp52254d98IMfPOKII4455ph77733gJ82+y4AoKNI5bho/fYRCzc+PnlV
32GLezw35ycPTknZ+Jlrhh3kFxlTWn7wsoFnXDf87NvHnXf/5N8+MaNnxbz0
qf44fsULM9eMWrRxVlV1KsTqXQ2eCAqEFLW/ou4CAA5NbUPT8k07xy7Z9OSU
qluGLur69Kzv3jPxzD4jT+ox4IDZ+L5LBvzztcPPvmPc+Q9NveTZ2X0GL3xg
3PJ+M9eOW7J54frtm3bUNalFoLxF7a+ouwCA/SsWixu21U5evuWpqVUpAC94
bPp/3z72Y1cO3n85prr83A0jvv2HCb96bMZV/effM2bZCzPXTFy2JaXozrrG
3JsASl3U/oq6CwBoUSgUV2/dNXLhxnvHLLv0+Tnfv3fSZ68fsZ8XUE0/dfq1
w7951/hfPz7j+oELHp64cviCDQvXb99e25B7CkDHFrW/ou4CgLJV29A0d822
52esuXHwov/38LQv3DTq1f7w49Fd+p161dBv3Dn+widn9h22+IWZa2ZWbd2y
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
VtvwvksGpK4ctmBD7lsAAFpB9v569NFHjzjiiHvuuWfu3LnnnXfe29/+9g0b
9v4PrYceeihVZ/rr8uXLBw4c+M53vvOCCy7Y/6fNvgvg1dw1ammKys9eP6JY
LOa+BQCgFWTvr86dO//0pz9t/nahUHjXu97Vu3fvvT4mfcAZZ5zR8t1f/epX
p5566v4/bfZdAPvU2FQ4pffQ1JWPTFyZ+xYAgNaRt7/q6+tf//rXP/PMMy0/
8p3vfOess87a68Meeuiht73tbc1PkV26dOl73vOenj17vvKz1dXVbfuzqqoq
XQmUoBdmrklR+eHLB9U2NOW+BQCgdeTtyjVr1qRffdy4cS0/8tvf/rZz586v
/MibbrrpjW984xve8Ib08T/+8Y/3+dl69Ojxur+mK4GSUiwWz+o7JnXlDYMW
5r4FAKDVdIiuHD58+P/5P//nrrvumjVr1tNPP/2P//iPl19++Ss/m69XAiVu
8vItKSo7da/cuL0u9y0AAK2mQzwP9lOf+tRvfvOblu/+8Y9//Nu//dtCobCf
z+zPVwIl6EcPTEld+bsnZuY+BACgNWXvr86dO//sZz9r/nZKxb//+79/5ev2
fPjDH/7d737X8t2HH344dWVT0/7+aFL2XQB7WbF551Fd+qWuXLh+e+5bAABa
U/b+evTRR4888sj77rtv3rx5P/zhD9/+9revX78+/fg555zTpUuX5o/p0aPH
3/3d3z3yyCPLli0bNGjQscce+9WvfnX/nzb7LoC99HhuTorK79y973fpBQDo
uEqhv2655ZZ/+qd/OuKIIzp37jxhwoTmHzzttNPOPffc5m83NjZeeumlKSff
9KY3/eM//uP555+/devW/X/OUtgF0KJ6V8N7L+6funLUoo25bwEAaGVR+yvq
LqCDunPk0hSV/3rDyGKxmPsWAIBWFrW/ou4COqJCofiZa4alrnxowsrctwAA
tL6o/RV1F9ARDVuwIUXlST0G1NQ35r4FAKD1Re2vqLuAjuh7905KXXnp83Ny
HwIA0Cai9lfUXUCHs2pLTfPbiyzduCP3LQAAbSJqf0XdBXQ4vSrmpaj89h8m
5D4EAKCtRO2vqLuAjqW2oekDlw1MXTlwzrrctwAAtJWo/RV1F9CxPDGlKkXl
Kb2HNhW8vQgAEFbU/oq6C+hYzrpldOrKvsMW5z4EAKANRe2vqLuADmTGqq0p
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
ACBsf0Xdi+S6npNTV17w0JjcgwAAAGtF7a+oe5Ecf8vg1JVPjn099yAAAMBa
Ufsr6l7MemtFisqD2ndbtGJV7lkAAIC1ovZX1L14YPiM1JWn3jks9yAAAMDf
RO2vqHtx1r0jU1feMXB67kEAAIC/idpfUfdq4Vasqm17aY/UlVPmLM09CwAA
8DdR+yvqXi1c34lzUlR+9tr+pVIp9ywAAMDfRO2vqHu1cO0fezF15RVPjs89
CAAA8A9R+yvqXi1ZqVSq6tg3deWgKfNyzwIAAPxD1P6KuldLNv71xSkqj7i8
Z/XqutyzAAAA/xC1v6Lu1ZLd2m9q6spz7h+dexAAAOAdovZX1L1aspM7D01d
+fDI13IPAgAAvEPU/oq6V4s1b2nNge27pa6cs6Q69ywAAMA7RO2vqHu1WH8e
PTNF5Um/G5J7EAAAYH1R+yvqXi3WuX98LnXlzX2m5B4EAABYX9T+irpXy7Sq
tv5fL++ZuvKFWYtyzwIAAKwvan9F3atlGjJ1forKo3/Tt76+lHsWAABgfVH7
K+peLdOVT09IXfnLR1/IPQgAALABUfsr6l4tUKlU+tx1A1JX9prwZu5ZAACA
DYjaX1H3aoGmzV2WorLtJT2W19TmngUAANiAqP0Vda8W6K7BL6euPPOeEbkH
AQAANixqf0XdqwX61u+Hp668b+gruQcBAAA2rAj91blz5zZt2rRu3bqqqmrk
yJHvfsBdd9117LHH7vG24447boOPWU8R9mLrLV65+uCLu6eufG3BityzAAAA
G5a9v7p27dqqVat777134sSJ55xzTirHuXPnrveY7373u7fffvvYsWMnT578
gx/8YPfdd3/99dcbf9rse9Eknh43O0Xll28alHsQAADgPWXvr6qqqvPPP798
ub6+fr/99uvUqVMjj6+rq9t1113vv//+xp82+140iQu7jk1deU2PSbkHAQAA
3lPe/lq1atX222//xBNPNNzy/e9//+STT27kQ5YuXbrTTjv99a9/ffddNTU1
S/5u1qxZurLS1dWXjrqqd+rKka8szD0LAADwnvJ25ezZs9NnHz58eMMtF110
UVVVVSMfct555x188MHV1dXvvqtDhw7veyddWdFGz1iYovLIK3vX1tXnngUA
AHhPldWVnTp12nPPPV944YUN3uvnlcFc13Ny6soLHhqTexAAAKAxFfQ62Btu
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
y18BAIDgdGXTGv/64o9f1TtF5fG3DJ6/rKaZPzsAAEDz05VN6PnX3mrXYe0p
RU6+bciiFaua81MDAADkoiubyvDpC/718p7lU4osrV7dbJ8XAAAgL13ZJAa+
NPfQS3ukqDzj7hErVtU2zycFAAAoAl259XpNePOQS7qnqPzRfaOqV9c1w2cE
AAAoDl25lZ4c+/rBF6+Nyp88+Pyq2vpt/ekAAACKRldusdV19Z0HTDuwfbcU
lb/oOra2TlQCAAAtka7cMi/OWvyfv30mFWX6c/HjL9bXl7bRJwIAACg4Xbm5
Vq6q69h90kFv/5jyqKt6/+W5WaWSqAQAAFouXblZhk6b/7nrBpR/THnBQ2Pm
L6tp2ucHAACoOLpyEy1esfr/+/O4clEec02/fpPmNNUzAwAAVDRduVGlUqn7
i2984td9y1F5+ZPjl1av3vqnBQAAiEFXNu7NxdX/z/2jy0X5HzcOHD1jYZOM
BwAAEIaufC/zl9XcM+SVdlf0SkX5kYu739T7pZrauiacEAAAIIYidGXnzp3b
tGnTunXrqqqqkSNHbvAxf/7znw877LD0mHbt2nXv3n2jz7nFe72xeOV9Q185
/X+Hl9/xNf05ufPQyW9G624AAICmkr0ru3bt2qpVq3vvvXfixInnnHPOHnvs
MXfu3PUeM2zYsO233/7666+fNGnSZZddtuOOO44fP77xp93cvV5dsPzOQdNP
6Ty03JLlPyf9bsgDw2fUOTclAADAe8velVVVVeeff375cn19/X777depU6f1
HnP66aefeOKJDVc/9alP/fd//3fjT7spe5VKpZfeXPrbvlOPv2VwQ0se2L7b
qXcOu/uZl2e9tWKLFgIAAGhZ8nblqlWrtt9++yeeeKLhlu9///snn3zyeg/7
8Ic/fMsttzRcveKKK4488sh3P1tNTc2Sv5s1a1bje90+cNqXbhjYkJMHX9z9
zHtG/PHZV+cuqd7qtQAAAFqQvF05e/bs9NmHDx/ecMtFF11UVVW13sN23HHH
hx56qOHq7bffvu+++7772Tp06PC+d2pkr//3kbUno2x7aY+zu4x69LlZi1as
2uptAAAAWqJIXblZP68cN3PR0+NmL6up3eolAAAAWrRIr4NdV/bfGwUAAGgh
svdXVVXVT3/60/Ll+vr6/ffff4Pv23PSSSc1XP30pz/dJO/bAwAAwNbL3l9d
u3Zt3bp1ly5dJk2a9OMf/3iPPfaYM2dOuv173/te+/bty48ZNmzYDjvscOON
N06ePLlDhw7b4jwjAAAAbJki9Ndtt912wAEHtGrVqqqqasSIEeUbv/CFL5x1
1lkNj/nzn/986KGHpsd89KMf7d69+0afswh7AQAAtARR+yvqXgAAAEUTtb+i
7gUAAFA0Ufsr6l4AAABFE7W/ou4FAABQNFH7K+peAAAARRO1v6LuBQAAUDRR
+yvqXgAAAEUTtb+i7gUAAFA0Ufsr6l4AAABFE7W/ou4FAABQNFH7K+peAAAA
RRO1v6LuBQAAUDRR+yvqXgAAAEUTtb+i7gUAAFA0Ufsr6l4AAABFE7W/ou4F
AABQNFH7K+peAAAARRO1v6LuBQAAUDRR+yvqXgAAAEUTtb+i7gUAAFA0Ufsr
6l4AAABFE7W/ou4FAABQNFH7K+peAAAARRO1v6LuBQAAUDRR+yvqXgAAAEUT
tb+i7gUAAFA0Ufsr6l4AAABFE7W/ou4FAABQNFH7K+peAAAARRO1v6LuBQAA
UDRR+yvqXgAAAEUTtb+i7gUAAFA0Ufsr6l4AAABFE7W/ou4FAABQNFH7K+pe
AAAARRO1v6LuBQAAUDRR+yvqXgAAAEUTtb+i7gUAAFA0Ufsr6l4AAABFE7W/
ou4FAABQNFH7K+peAAAARRO1v6LuBQAAUDRR+yvqXgAAAEUTtb+i7gUAAFA0
Ufsr6l4AAABFE7W/ou4FAABQNFH7K+peAAAARRO1v6LuBQAAUDRR+yvqXgAA
AEUTtb+i7gUAAFA0Ufsr6l4AAABFE7W/ou4FAABQNFH7K+peAAAARRO1v6Lu
BQAAUDRR+yvqXgAAAEUTtb+i7gUAAFA0Ufsr6l4AAABFE7W/ou4FAABQNFH7
K+peAAAARRO1v6LuBQAAUDRR+yvqXgAAAEUTtb8WL16c9po1a9YSAAAAtqVU
Xqm/UoXlDsEm9vLLL78PAACA5pIqLHcINrFFixalvWbOnJk73GGTlP8fHj9h
p4I4aKksjlgqjoOWypLKKx2xqcJyh2ATWxL09b1E5Yil4jhoqSyOWCqOg5bK
EvWIjboXUTliqTgOWiqLI5aK46ClskQ9YqPuRVSOWCqOg5bK4oil4jhoqSxR
j9iampoOHTqkf+YeBDaJI5aK46ClsjhiqTgOWiqLIxYAAAAAAAAAAAAAAAAA
AAAAAFq4zp07t2nTpnXr1lVVVSNHjsw9DqzvmmuuOfroo3fZZZd99tnnlFNO
eemllxruqq6u/slPfrLXXnu9//3v/+Y3vzlnzpyMc8K7derU6X3ve9/Pf/7z
8lVHLIX1+uuvn3HGGeng3Gmnndq1azd69Ojy7aVS6fLLL//Qhz6Ubj/uuOOm
Tp2ad05I6urqLrvssgMPPDAdlgcffPDVV1+dDtTyXY5YimPw4MEnnXTSv/zL
v6TvBJ544omG2xs5ShcuXPjd735311133X333X/0ox8tW7Ysx+BbqGvXrq1a
tbr33nsnTpx4zjnn7LHHHnPnzs09FLzD8ccff999902YMGHcuHFf+9rXDjjg
gOXLl5fvOvfccz/84Q/379//ueeeO+aYYz7zmc/kHRXWNWrUqPRtz5FHHtnQ
lY5Yiumtt95q06bND37wg5EjR77yyiu9e/eePn16+a5rr702fXvz5JNPvvDC
CyeffPJBBx1UXV2dd1ro2LHj3nvv3a1btxkzZjz66KO77LLLrbfeWr7LEUtx
9OjR49JLL3388cfX68pGjtITTjjhqKOOGjFixJAhQw455JDvfOc7mWbfElVV
Veeff375cn19/X777depU6e8I0Ej5s2bl/7dHDx4cLq8ePHiHXfcMf0PSvmu
yZMnp7ueffbZrAPC3yxbtqxt27Z9+/b9whe+UO5KRyyF9atf/erYY4999+2l
UulDH/rQDTfcUL6ajuHWrVs//PDDzTsdrO/EE0/80Y9+1HD1m9/85hlnnLHG
EUtRrduVjRylkyZNSo9seLlIz549t9tuu9mzZ2eZeXOtWrVq++23Xzefv//9
76dqzjgSNG7atGnp37jx48eny/3790+XFy1a1HDvAQcccPPNN+ebDv4h/ef0
wgsvTBcautIRS2EdccQR6XA99dRT99lnn49//ON33XVX+faXX345HbRjx45t
eOTnP//5n/3sZ5nGhL/p2LFjmzZtpkyZki6PGzdu3333ffDBB9c4Yimqdbuy
kaP0D3/4wx577NFwe21tbSq1xx9/vJmn3TKpf9New4cPb7jloosuqqqqyjgS
NKK+vv7EE0/87Gc/W776pz/9qVWrVus+4JOf/OQvf/nLHKPBOzz88MPt2rUr
v6yloSsdsRRW67ddfPHFY8aM+f3vf7/TTjt16dIl3T5s2LD0fcIbb7zR8MjT
Tjvt9NNPzzcprJW+H/jVr3613Xbb7bDDDumf11xzTfl2RyzFtG5XNnKUduzY
8dBDD133A/fZZ5877rijOUfdYrqSynLuuee2adNm1qxZ5au+S6eYZs6cue++
+77wwgvlq7qS4ttxxx0//elPN1y94IILjjnmmDW+S6eoHn744f/zf/5P+ueL
L774wAMP7LXXXv6fEIqsJXSl18FSQc4///z0PyKvvPJKwy1eVUgxpf+opiNz
+79Ll7fbbrt0oV+/fo5YiikdimeffXbD1fRtzH777bfGqwopqvT9QOfOnRuu
/vrXvz7ssMPWOGIpqpbwOtg1b79vz09/+tPy5fr6+v3339/79lA0pVIpRWX6
Jme9dwsvvwvKX/7yl/LVl156ybugUARLly4dv46jjz76zDPPTBccsRTWd77z
nXXft+fCCy8s//iy/P4SN954Y/n2JUuWeBcUimCvvfZa94c411xzTdu2bdc4
Yimqd79vzwaP0vL79jz33HPlu3r37l1B79uz5u3zjKRdunTpkhb58Y9/nBrZ
+dQomvPOO2/33XcfNGjQm3+3cuXK8l3nnnvuAQccMGDAgPTv4KfflndUeLeG
18GuccRSVKNGjdphhx06duw4bdq0P/3pTzvvvHP5XVDWvP1++Ol7g6eeeurF
F1885ZRTnLWBIjjrrLP233//8nlGHn/88Q984AMNv1PgiKU4li1bNvZtqRZv
vvnmdOG1115b0+hResIJJ/zbv/3byJEjhw4d2rZt28o6z0hy2223pe9zWrVq
VVVVNWLEiNzjwPre9y733Xdf+a7yWeb33HPP9F3QN77xjZScWSeFDVi3Kx2x
FNZf//rXdu3atW7d+vDDD294P9g1fz9/9wc/+MF013HHHVd+B07Ia+nSpem/
q+nb15122unggw++9NJLV61aVb7LEUtxDBw4cL3vYM8666w1jR6lCxcuTC25
yy677Lbbbj/84Q9TmWabHgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
ILqhQ4e2a9duhx12OOWUU7IMMGPGjPe9731jx47N8tkBAAAoO+uss7YsDKuq
qs4888xZs2YtWrSoyafaFLoSAACgCLa4K/fee+977723yefZdLoSAABomXr2
7PnZz352991332uvvU488cTp06eXby9X0iOPPHLsscfutNNORx999JQpU0aN
GvWJT3zi/e9//wknnDBv3rzyI+vr66+66qr999+/VatWRx11VHrC8u0DBw5M
z9Dw08MUXOlqetp0+b777kufsVevXocffnh6tuOPP/6NN95It3fo0OF960jP
sN60NTU1F1xwwT777NO6des0dpqnYdQG6cnX+6g2bdpcffXV3/72t3feeef9
9tuvc+fODXel8c4+++wPfOADu+6665e+9KVx48Y13HXHHXccfPDBO+6446GH
HvrAAw803J4+RborfQXSl+Wggw569NFH1/2KNXTl+PHj02PSdvvuu++ZZ545
f/78Lfr7AQAAKLq//OUvjz322LRp01IQff3rX//Yxz6WOnHN3yspdV+qv0mT
Jh1zzDGpKL/4xS8OHTp0zJgxhxxyyLnnnlt+hptvvnm33XZ7+OGHX3rppV/+
8pcpxKZOnbpmY12ZHvblL3959OjRzz///BFHHPHd73433b5s2bLTTz895dib
b1u1atV60/7sZz9LYdijR4+JEyeeddZZe+6558KFC+vq6tKD0wy//e1v04WV
K1eu91GpK1M2durUKaXx7373u+23375Pnz7lu9IMaes0Rpr5f/7nf/bee+/0
hOn2xx9/PE14++23pw+56aab0ocMGDCg/CFpi/Swu+++O9112WWXpbvS12fN
O7sybZ3i9+KLL548eXL6cn3lK19J0drUf3UAAACFM3/+/FRG48ePX/P3Srrn
nnvKd6VsTFf79+9fvpoa7bDDDitfTqHXsWPHhif55Cc/+ZOf/GTNxroyXW74
2WjKtw9+8IPly428Dnb58uWp9f70pz+Vr65evTp96uuvv758dffdd3/3TyrL
UlemVm24+q1vfes///M/04UhQ4akGq2pqWm46yMf+cjvf//7dOEzn/nMOeec
03D7aaed9rWvfa18OU3e0NTJpz71qfPOO2/NO7vy17/+9Ve/+tWGx8yaNSvd
lTp0g+MBAABUtKlTp377298+6KCDdt111/e///0pf7p3777m75VUfqFpMmDA
gHS14bWv995775577pkuLFmyJN0+aNCghie88MILyz+ba7wrd95554YPefzx
x7fbbrvy5Ua68oUXXkjP8Oqrrzbc8l//9V8//OEPy5cb78qrrrqq4epvf/vb
Aw88MF3o3LnzP/3TP71/HenqL3/5y3RX2q5Lly7rfkj6EpUvpxnuv//+dff9
4he/uOadXXnqqaemBF73mdNdPXr02OB4AAAAFe2www776le/2q9fv0mTJk2Y
MCHlzxNPPLHmXb8tuF4kln9Bck2jXTl48OB011tvvVW+PSXqer9f2fAh6TOm
u8qXm7Mrr7322v3333/aO5V/EXIru/KEE0745je/ud4zL1++fIPjAQAAVK4F
CxakFHrmmWfKV4cMGbK5XblmQ6+DPf/889OFFKrpQyZOnFi+/a677tqUrjzn
nHNOOumkDU6buqxVq1brvg42VeENN9xQvtp4V5Zf+Fr27W9/u3y1T58+22+/
fXmk9bz7dbAnnnhi+XIatfzC17Jjjjnm3a+DveSSS1Kw19bWbnAeAACAMOrr
6/fee+8zzzxz2rRp/fv3T0m4BV15yy237Lbbbl27dn3ppZd+9atfNbxvT+q+
D3/4w6nI0tVu3bqlztqUrkyJesABB6Snmj9/fnqG9Qb++c9/njK2Z8+eDe/b
0/Dz0Ma7Mk143XXXTZkypXPnzqkle/XqlW4vlUrHHnvsUUcd1bt37zTYsGHD
Ug+OHj26PFJa5I477kjDl9+3p+HNadOoH/jAB/7whz+kZ7viiiv+6Z/+qdzO
637FZs+evc8++5x66qmjRo2aPn16+nQ/+MEP6urqtvhvCgAAoLD69u17xBFH
tG7d+sgjjxw0aNAWdGWK0yuvvHL//fdPIbbueUaSoUOHfuxjH9tpp50+97nP
Pfroo5vSlfPmzfvKV76yyy67bPA8I9XV1RdccEHKunXPM1K20dfBpsLdeeed
P/ShD916660Ndy1dujQ9YWrVNHyq4DPOOGPmzJnluxo5z8jtt9+ehkwzHHjg
gY888kj59vW+YilIv/GNb+yxxx7//M//fPjhh1944YUpYxv/uwAAAKCYUlfe
csstTfVsDekNAABAC6ErAQAA2Bq6EgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAICW7P8H/JZE9g==
    
    "], {{0, 1577.}, {1224., 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{354.8727272727282, Automatic},
  ImageSizeRaw->{1224., 1577.},
  PlotRange->{{0, 1224.}, {0, 1577.}}]], "Output",
 CellChangeTimes->{3.872516327089533*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"4f990d9d-f674-43e3-9a8c-be1541d1a8c1"]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Discussion", "Section",
 CellChangeTimes->{{3.872423644516287*^9, 3.872423660165956*^9}, {
  3.872423698984667*^9, 
  3.872423701988125*^9}},ExpressionUUID->"160c0ba2-e067-4e83-996a-\
a22cd2e4c768"],

Cell[TextData[{
 "Looking at the graphs, it would seem that the census model matches the \
theoretical model quite well. \nSince there is only a set number of days a \
person could be born and every day is \[TildeEqual] equally likely, one would \
hastely \nassume that the number ",
 Cell[BoxData[
  FormBox["N", TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "8682e6a0-2390-4285-8641-1760f6682eb4"],
 " that gives a probability of 0.5 would be way higher than 23, thus the \
paradox in the name. \nPerhaps it stems from the way we map problems onto \
real world scenarios, thinking each person in that set has a single birthday, \
which is\ntrue but not in a probabilistic sense. Each person could have *any* \
birthday and the next one could have one less than the previous.\n\t   "
}], "Text",
 CellChangeTimes->{{3.8725188958316793`*^9, 3.8725189554029284`*^9}, {
  3.8725189866101503`*^9, 3.872519004390285*^9}, {3.872519084662513*^9, 
  3.872519304837476*^9}, {3.872519378917597*^9, 3.8725196138434258`*^9}, {
  3.872519745415598*^9, 
  3.8725197549831944`*^9}},ExpressionUUID->"4a8de4bd-2698-4d4b-a7fb-\
20430a4740b9"]
}, Closed]],

Cell[CellGroupData[{

Cell["Conclusion", "Section",
 CellChangeTimes->{{3.872423644516287*^9, 3.872423660165956*^9}, {
  3.8724237170038424`*^9, 
  3.872423720438121*^9}},ExpressionUUID->"38eedd4e-300c-4006-9778-\
5e47876d571d"],

Cell[TextData[{
 "Solving this problem gave way to reading about similar things, such as the \
\[OpenCurlyDoubleQuote]birthday attack\[CloseCurlyDoubleQuote], which is \
named after the very same \n\[OpenCurlyDoubleQuote]paradox\
\[CloseCurlyDoubleQuote].\n\nIf a hashing function generates hashes with \
equal probabilites, just as the year is divided into 365 equal days",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["", "*"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "37327603-6362-4388-902c-774078d01c68"],
 ", and does\n\tso on some data ",
 Cell[BoxData[
  FormBox["D", TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "ac0617cd-134a-470a-a81a-27b208498ea6"],
 ".  Even though it is practially infeasable to reverse the hash, it is \
viable to try and generate the same \n\thash on similar data ",
 Cell[BoxData[
  FormBox[
   RowBox[{"D", "'"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "49b25677-7177-4b83-a6fa-cb53a9fe9db3"],
 ", since there is only a set number of ways that the data ",
 Cell[BoxData[
  FormBox["D", TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "c1e7b9eb-a07c-45b0-8f38-ea8ba15d8b37"],
 " could be arranged.\n\t\n\t\n* ignoring leap years and all that"
}], "Text",
 CellChangeTimes->{{3.872518301485586*^9, 3.87251879190337*^9}, {
   3.872519629853726*^9, 3.8725196458940372`*^9}, {3.8725197299656076`*^9, 
   3.872519730559003*^9}, 
   3.872519899948765*^9},ExpressionUUID->"ea927233-5a90-4eb0-a4d0-\
8d009144f6cf"]
}, Closed]],

Cell[CellGroupData[{

Cell["Code", "Section",
 CellChangeTimes->{{3.872255470155498*^9, 3.872255477558011*^9}, {
  3.872515445393066*^9, 
  3.872515462132725*^9}},ExpressionUUID->"be60b009-bed8-488e-b206-\
070c2716a422"],

Cell[BoxData[{
 RowBox[{"import", " ", "math"}], "\n", 
 RowBox[{"import", " ", "random"}], "\[IndentingNewLine]", 
 RowBox[{"import", " ", 
  RowBox[{"matplotlib", ".", "pyplot"}], " ", "as", " ", "plt"}], "\n", 
 RowBox[{"import", " ", "numpy", " ", "as", " ", "np"}], "\n", 
 RowBox[{"import", " ", "pandas", " ", "as", " ", "pd"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"from", " ", "datetime", " ", "import", " ", "datetime"}], ",", 
   "timedelta"}], "\[IndentingNewLine]", "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{"def", " ", "main", 
   RowBox[{"(", ")"}]}], ":", "\[IndentingNewLine]", 
  RowBox[{"print", 
   RowBox[{"(", 
    RowBox[{"generate_trials", 
     RowBox[{"(", "23", ")"}]}], ")"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"  ", 
  RowBox[{"graph_probability", 
   RowBox[{"(", ")"}]}], "\n", "\n", " ", "\n", "\n"}], "\n", 
 RowBox[{"##", " ", "burffday"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"def", " ", "fn_generate", "_random", "_birthdays", 
    RowBox[{"(", "n", ")"}]}], ":", "first"}], "=", 
  RowBox[{"datetime", 
   RowBox[{"(", 
    RowBox[{"2022", ",", "1", ",", "1"}], ")"}]}]}], "\n", 
 RowBox[{"birthdays", "=", 
  RowBox[{"[", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"first", "+", 
       RowBox[{"timedelta", 
        RowBox[{"(", 
         RowBox[{"days", "=", 
          RowBox[{
           RowBox[{"random", ".", "randint"}], 
           RowBox[{"(", 
            RowBox[{"0", ",", "366"}], ")"}]}]}], ")"}]}]}], ")"}], ".", 
     "strftime"}], 
    RowBox[{"(", "\"\<%m/%d/%Y\>\"", ")"}], " ", "for", " ", "i", " ", "in", 
    " ", "range", 
    RowBox[{"(", "n", ")"}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"return", " ", "sorted", 
   RowBox[{"(", "birthdays", ")"}]}], "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"def", " ", "graph_probability", 
    RowBox[{"(", ")"}]}], ":", "birthdays"}], "=", 
  RowBox[{
   RowBox[{"pd", ".", "DataFrame"}], 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"np", ".", "empty"}], 
      RowBox[{"(", 
       RowBox[{"[", 
        RowBox[{"365", ",", "2"}], "]"}], ")"}]}], ",", 
     RowBox[{"columns", "=", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{"'", 
         RowBox[{"n", "'"}]}], ",", 
        RowBox[{"'", 
         RowBox[{"probability", "'"}]}]}], "]"}]}], ",", 
     RowBox[{"index", "=", 
      RowBox[{"range", 
       RowBox[{"(", 
        RowBox[{"1", ",", "366"}], ")"}]}]}]}], ")"}]}]}], "\n", 
 RowBox[{
  RowBox[{"birthdays", "[", 
   RowBox[{"'", 
    RowBox[{"n", "'"}]}], "]"}], "=", 
  RowBox[{"birthdays", ".", "index"}]}], "\n", 
 RowBox[{
  RowBox[{"#birthdays", "[", 
   RowBox[{"'", 
    RowBox[{"probability", "'"}]}], "]"}], "=", 
  RowBox[{
   RowBox[{
    RowBox[{"birthdays", "[", 
     RowBox[{"'", 
      RowBox[{"n", "'"}]}], "]"}], ".", "apply"}], 
   RowBox[{"(", 
    RowBox[{"fn_birthday", "_paradox"}], ")"}]}]}], "\n", 
 RowBox[{
  RowBox[{"#birthdays", "[", 
   RowBox[{"'", 
    RowBox[{"probability", "'"}]}], "]"}], "=", 
  RowBox[{
   RowBox[{
    RowBox[{"birthdays", "[", 
     RowBox[{"'", 
      RowBox[{"n", "'"}]}], "]"}], ".", "apply"}], 
   RowBox[{"(", "generate_trials", ")"}]}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"birthdays", "[", 
    RowBox[{"'", 
     RowBox[{"probability", "'"}]}], "]"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"birthdays", "[", 
      RowBox[{"'", 
       RowBox[{"n", "'"}]}], "]"}], ".", "apply"}], 
    RowBox[{"(", "generate_trials", ")"}]}]}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{"birthdays", ".", "plot"}], 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"x", "=", 
     RowBox[{"'", 
      RowBox[{"n", "'"}]}]}], ",", 
    RowBox[{"y", "=", 
     RowBox[{"'", 
      RowBox[{"probability", "'"}]}]}]}], ")"}]}], "\n", 
 RowBox[{
  RowBox[{"plt", ".", "xlim"}], 
  RowBox[{"(", 
   RowBox[{"0", ",", "100"}], ")"}]}], "\n", 
 RowBox[{
  RowBox[{"plt", ".", "xlabel"}], 
  RowBox[{"(", "\"\<amount of people\>\"", ")"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"plt", ".", "ylabel"}], 
   RowBox[{"(", "\"\<probability of a shared birthday\>\"", ")"}]}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"plt", ".", "show"}], 
   RowBox[{"(", ")"}]}], "\[IndentingNewLine]", "\n"}], "\[IndentingNewLine]", 
 RowBox[{"##", " ", "maffs"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"def", " ", "fn_birthday", "_paradox", 
    RowBox[{"(", "n", ")"}]}], ":", "end"}], "=", 
  RowBox[{"366", "-", "n"}]}], "\n", 
 RowBox[{"ratio", "=", "1"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"for", " ", "i", " ", "in", " ", "range", 
    RowBox[{"(", 
     RowBox[{"end", ",", "366"}], ")"}]}], ":", "ratio"}], "*=", 
  RowBox[{"i", "/", "365"}]}], "\n", 
 RowBox[{
  RowBox[{"prob_not", "_same"}], "=", 
  RowBox[{"1", "-", "ratio"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"return", " ", "prob_not", "_same"}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"def", " ", "generate_trials", 
    RowBox[{"(", "group_size", ")"}]}], ":", "counts"}], "=", 
  RowBox[{"[", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"for", " ", "i", " ", "in", " ", "range", 
   RowBox[{"(", "100", ")"}]}], ":", 
  RowBox[{
   RowBox[{"if", " ", "shared_birthday", 
    RowBox[{"(", "group_size", ")"}]}], "==", "True"}], ":", 
  RowBox[{
   RowBox[{"counts", ".", "append"}], 
   RowBox[{"(", "1", ")"}]}]}], "\n", 
 RowBox[{
  RowBox[{"return", " ", "sum", 
   RowBox[{
    RowBox[{"(", "counts", ")"}], "/", "100"}]}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"def", " ", "shared_birthday", 
    RowBox[{"(", "n", ")"}]}], ":", "birthdays"}], "=", 
  RowBox[{"fn_generate", "_random", "_birthdays", 
   RowBox[{"(", "n", ")"}]}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"for", " ", "a"}], ",", 
   RowBox[{
    RowBox[{"birthdayA", " ", "in", " ", "enumerate", 
     RowBox[{"(", "birthdays", ")"}]}], ":", 
    RowBox[{"for", " ", "b"}]}], ",", 
   RowBox[{
    RowBox[{"birthdayB", " ", "in", " ", "enumerate", 
     RowBox[{"(", 
      RowBox[{"birthdays", "[", 
       RowBox[{
        RowBox[{"a", "+", "1"}], ":"}], "]"}], ")"}]}], ":", 
    RowBox[{
     RowBox[{"if", " ", "birthdayA"}], "==", "birthdayB"}], ":", 
    RowBox[{"return", " ", "True"}]}]}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{"main", 
  RowBox[{"(", ")"}]}]}], "Input",
 CellChangeTimes->{{3.872515413144541*^9, 3.87251541316064*^9}, {
  3.872516472686874*^9, 3.872516480047641*^9}, {3.872520360796143*^9, 
  3.8725204510780907`*^9}},ExpressionUUID->"ced0e215-54e4-436d-b7e4-\
67d0a2a16445"]
}, Closed]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{Full, Full},
WindowMargins->{{12, Automatic}, {Automatic, 24}},
PageHeaders->{{None, None, None}, {
   Cell[
    TextData[{"KTH/ICT - Kommunikationssystem"}], "PageHeader", FontFamily -> 
    "Arial", FontSize -> 9], None, None}},
PageFooters->{{None, None, None}, {None, 
   Cell[
    TextData[{
      CounterBox["Page"]}], "PageNumber"], None}},
PrintingOptions->{"FacingPages"->False},
TrackCellChangeTimes->True,
Magnification:>1.1 Inherited,
FrontEndVersion->"12.3 for Linux x86 (64-bit) (July 9, 2021)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]], 
   Cell["Modify the definitions below to change the default appearance of all \
cells in a given style. \nMake modifications to any definition using commands \
in the Format menu.", "Text"], 
   Cell[
    CellGroupData[{
      Cell["Notebook Options Settings", "Section"], 
      Cell[
       StyleData["Notebook"], ShowCellBracket -> Automatic]}, Closed]], 
   Cell[
    CellGroupData[{
      Cell["Styles for Title and Section Cells", "Section"], 
      Cell[
       CellGroupData[{
         Cell["Title", "Subsection"], 
         Cell[
          StyleData["Title"], FontFamily -> "Arial", FontSize -> 36, 
          FontWeight -> "Bold", FontColor -> GrayLevel[0.5]], 
         Cell[
          StyleData["Subtitle"], FontFamily -> "Arial", FontWeight -> "Bold"], 
         Cell[
          StyleData["Subsubtitle"], FontFamily -> "Arial", FontSize -> 18]}, 
        Closed]], 
      Cell[
       CellGroupData[{
         Cell[
         "Chapter", "Subsection", 
          CellChangeTimes -> {{3.6182073006504073`*^9, 
           3.6182073204926414`*^9}}], 
         Cell[
          StyleData["Chapter"], FontFamily -> "Arial", FontSize -> 34, 
          FontWeight -> "Plain", FontSlant -> "Plain", 
          FontVariations -> {"StrikeThrough" -> False, "Underline" -> False}], 
         Cell[
          StyleData["Subchapter"], CellDingbat -> 
          StyleBox["\[FilledSmallSquare]", Alignment -> Baseline, 
            RGBColor[
            0.09803921568627451, 0.32941176470588235`, 0.6509803921568628]], 
          FontFamily -> "Arial", FontSize -> 28, FontWeight -> "Plain", 
          FontSlant -> "Plain", 
          FontVariations -> {
           "StrikeThrough" -> False, "Underline" -> False}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Section", "Subsection"], 
         Cell[
          StyleData["Section"], CellDingbat -> None, ShowGroupOpener -> True, 
          FontFamily -> "Arial", FontSize -> 24, FontWeight -> "Bold", 
          FontColor -> GrayLevel[0.5]], 
         Cell[
          StyleData["Subsection"], CellDingbat -> None, ShowGroupOpener -> 
          True, CellMargins -> {{40., 3.}, {8., 12.}}, FontFamily -> "Arial", 
          FontSize -> 18, FontWeight -> "Bold", FontColor -> GrayLevel[0.3]], 
         
         Cell[
          StyleData["Subsubsection"], CellDingbat -> None, ShowGroupOpener -> 
          True, CellMargins -> {{53., Inherited}, {2, 10}}, FontFamily -> 
          "Arial", FontSize -> 16, FontWeight -> "Bold", FontColor -> 
          GrayLevel[0.]], 
         Cell[
          StyleData["Subsubsubsection"], CellDingbat -> None, ShowGroupOpener -> 
          True, MenuSortingValue -> 1400, FontFamily -> "Arial Narrow", 
          FontSize -> 14, FontWeight -> "Bold", FontSlant -> "Plain", 
          FontVariations -> {"StrikeThrough" -> False, "Underline" -> False}, 
          FontColor -> GrayLevel[0]]}, Closed]]}, Closed]], 
   Cell[
    CellGroupData[{
      Cell["Styles for Body Text", "Section"], 
      Cell[
       CellGroupData[{
         Cell["Standard", "Subsection"], 
         Cell[
          StyleData["Text"], FontFamily -> "Times"], 
         Cell[
          StyleData["SmallText"], MenuSortingValue -> 1425, FontFamily -> 
          "Times"]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Display", "Subsection"], 
         Cell[
          CellGroupData[{
            Cell["Lists", "Subsubsection"], 
            Cell[
             StyleData["Item"], CellDingbat -> 
             StyleBox["\[FilledCircle]", Alignment -> Baseline, 
               GrayLevel[0.3]], FontFamily -> "Times"], 
            Cell[
             StyleData["ItemParagraph"], FontFamily -> "Times"], 
            Cell[
             StyleData["Subitem"], CellDingbat -> 
             StyleBox["\[FilledSmallCircle]", Alignment -> Baseline, 
               GrayLevel[0.3]], FontFamily -> "Times"], 
            Cell[
             StyleData["SubitemParagraph"], FontFamily -> "Times"], 
            Cell[
             StyleData["Subsubitem"], CellDingbat -> 
             StyleBox["\[FilledSmallCircle]", Alignment -> Baseline, 
               GrayLevel[0.5]], FontFamily -> "Times"], 
            Cell[
             StyleData["SubsubitemParagraph"], FontFamily -> "Times"], 
            Cell[
             StyleData["ItemNumbered"], FontFamily -> "Times"], 
            Cell[
             StyleData["SubitemNumbered"], FontFamily -> "Times"], 
            Cell[
             StyleData["SubsubitemNumbered"], FontFamily -> "Times"]}, 
           Closed]], 
         Cell[
          CellGroupData[{
            Cell["Templates", "Subsubsection"], 
            Cell[
             StyleData[
             "SideCaptionArray", StyleDefinitions -> StyleData["Text"]], 
             GridBoxOptions -> {
              GridBoxAlignment -> {"Columns" -> {Left}, "Rows" -> {Center}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}}], 
            Cell[
             StyleData[
             "SideCaption", StyleDefinitions -> StyleData["SmallText"]]]}, 
           Closed]]}, Closed]]}, Closed]], 
   Cell[
    CellGroupData[{
      Cell["Styles for Input and Output Cells", "Section"], 
      Cell[
       StyleData["Input"], ShowCellBracket -> True], 
      Cell[
       StyleData["InputOnly"], ShowCellBracket -> True], 
      Cell[
       StyleData["Code"], ShowCellBracket -> True], 
      Cell[
       StyleData["Output"], ShowCellBracket -> True], 
      Cell[
       StyleData["Message"], ShowCellBracket -> True], 
      Cell[
       StyleData["Print"], ShowCellBracket -> True]}, Closed]], 
   Cell[
    CellGroupData[{
      Cell["Styles for Formulas and Programming", "Section"], 
      Cell[
       StyleData["InlineFormula"]], 
      Cell[
       StyleData["DisplayFormula"], FontFamily -> "Times"], 
      Cell[
       StyleData["DisplayFormulaNumbered"], FontFamily -> "Times"], 
      Cell[
       StyleData["Program"], ShowCellBracket -> True]}, Closed]], 
   Cell[
    CellGroupData[{
      Cell["Citation Styles", "Section"], 
      Cell[
       StyleData["Reference"]]}, Closed]], 
   Cell[
    CellGroupData[{
      Cell[
       TextData[{"Styles for ", 
         StyleBox["Mathematica", FontSlant -> "Italic"], 
         " System\[Hyphen]specific Elements"}], "Section"], 
      Cell[
       CellGroupData[{
         Cell["Default Box Styles", "Subsection"], 
         Cell[
          StyleData["Graphics"], FontFamily -> "Times"], 
         Cell[
          StyleData["Graphics3D"], FontFamily -> "Times"], 
         Cell[
          StyleData["NetworkGraphics"], FontFamily -> "Times"]}, Closed]]}, 
     Closed]]}, Visible -> False, FrontEndVersion -> 
  "12.3 for Linux x86 (64-bit) (July 9, 2021)", StyleDefinitions -> 
  "PrivateStylesheetFormatting.nb"],
ExpressionUUID->"e0763a5c-f8dd-4d45-9e7f-074fd360102d"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 151, 3, 33, "Input",ExpressionUUID->"1a1a54d1-f16f-4663-92d9-341db90aaaca"],
Cell[CellGroupData[{
Cell[734, 27, 268, 4, 89, "Title",ExpressionUUID->"2e086750-1cf1-4c43-bc57-bac07652a650"],
Cell[1005, 33, 239, 7, 59, "Text",ExpressionUUID->"679e81cd-23f2-4ac3-aad0-55498a6469d8"],
Cell[1247, 42, 271, 8, 83, "Text",ExpressionUUID->"39bfcd1a-7896-4364-9d2c-9b6c98366775"],
Cell[CellGroupData[{
Cell[1543, 54, 252, 4, 68, "Subchapter",ExpressionUUID->"2760ab7a-2fed-4ae4-a63f-890119ad5062"],
Cell[CellGroupData[{
Cell[1820, 62, 151, 3, 64, "Section",ExpressionUUID->"28ab532a-4f99-4328-b494-a8a51a0e3e70"],
Cell[CellGroupData[{
Cell[1996, 69, 152, 3, 45, "Subsection",ExpressionUUID->"4df8543c-22f8-401d-8973-c66d5fa62864"],
Cell[2151, 74, 1184, 30, 409, "Text",ExpressionUUID->"8ad5d4da-afa2-434b-a402-a9f9b705fa59"]
}, Closed]],
Cell[CellGroupData[{
Cell[3372, 109, 83, 0, 35, "Subsection",ExpressionUUID->"39a0ef6c-6a2c-4081-9062-84513a76c571"],
Cell[3458, 111, 831, 17, 176, "Text",ExpressionUUID->"c5065607-a7e6-4da3-87ac-93d5a0d99f57"],
Cell[4292, 130, 2073, 48, 396, "Text",ExpressionUUID->"32be9a5f-94e1-47ff-bec6-06b360fcaaa5"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[6414, 184, 360, 6, 48, "Section",ExpressionUUID->"6943093f-8a76-4b29-9b2d-76d8c3875b28"],
Cell[6777, 192, 807, 17, 56, "Text",ExpressionUUID->"95e29c9d-1ee9-442e-84bd-9a6693494379"],
Cell[7587, 211, 493, 13, 56, "Text",ExpressionUUID->"86caaedd-0425-447b-b5bd-657f82723c6d"],
Cell[8083, 226, 1736, 46, 142, "Text",ExpressionUUID->"048bc31b-4354-46b5-b370-6c9a9c48c07f",
 InitializationCell->True],
Cell[9822, 274, 167, 3, 36, "Text",ExpressionUUID->"51d4c73d-9e3c-4a0f-a734-c6d26821de38"],
Cell[9992, 279, 197, 4, 36, "Text",ExpressionUUID->"a3aa7323-0445-4aa5-b87e-525409f92273"]
}, Closed]],
Cell[CellGroupData[{
Cell[10226, 288, 159, 3, 48, "Section",ExpressionUUID->"0f01609e-0763-4fcd-8fcd-2d660c380476"],
Cell[10388, 293, 1659, 30, 316, "Text",ExpressionUUID->"7db1cf4d-848e-436d-bfb6-d2bde7a8a488"]
}, Closed]],
Cell[CellGroupData[{
Cell[12084, 328, 155, 3, 48, "Section",ExpressionUUID->"3c88e56c-4768-4de7-b81a-146942b7ddcc"],
Cell[12242, 333, 735, 15, 129, "Text",ExpressionUUID->"b0a4dfc3-f51a-490c-bb63-651909969ee8"]
}, Closed]],
Cell[CellGroupData[{
Cell[13014, 353, 163, 3, 48, "Section",ExpressionUUID->"eb232638-2837-4382-9654-616c94d28459"],
Cell[13180, 358, 286, 7, 59, "Input",ExpressionUUID->"724ad548-2c8d-4dfd-82a4-53b64348dd55"],
Cell[CellGroupData[{
Cell[13491, 369, 2019, 49, 118, "Code",ExpressionUUID->"4c0cfd7e-bd83-42cd-9ed5-b121f577894f"],
Cell[15513, 420, 1321, 37, 88, "Output",ExpressionUUID->"862cb8a1-2449-4e7a-bf1f-c73891124916"]
}, Open  ]],
Cell[16849, 460, 907, 23, 57, "Input",ExpressionUUID->"10119438-007f-4429-a5a0-bee11d87af84"],
Cell[17759, 485, 1550, 39, 321, "Input",ExpressionUUID->"f9b04900-031a-44e3-953d-a1a4e8d75a0d"]
}, Closed]],
Cell[CellGroupData[{
Cell[19346, 529, 198, 4, 48, "Section",ExpressionUUID->"d13fe2a6-2314-4011-bd36-9098b2a50549"],
Cell[CellGroupData[{
Cell[19569, 537, 29069, 867, 6280, "Code",ExpressionUUID->"f10aa016-c174-4f35-8bc4-31815cb2be6a"],
Cell[48641, 1406, 178, 3, 37, "Output",ExpressionUUID->"822ffbb9-0153-4803-9aba-2794234e1e88"],
Cell[48822, 1411, 180, 3, 37, "Output",ExpressionUUID->"073389a6-827b-4a98-b844-4d5bfa55e070"],
Cell[49005, 1416, 220, 4, 37, "Output",ExpressionUUID->"7ef3c507-2a6c-4a18-bf28-57df3c52a4ab"],
Cell[49228, 1422, 217, 4, 37, "Output",ExpressionUUID->"ca8baa52-6d9c-4942-ba14-63e4597d8a8a"],
Cell[49448, 1428, 378, 7, 319, "Output",ExpressionUUID->"75d48f8d-7a5e-41e9-8f42-3d0c9e6aa4a1"],
Cell[49829, 1437, 481, 11, 30, "Message",ExpressionUUID->"1b9ff125-2354-4745-972d-13a1fac8f2da"],
Cell[50313, 1450, 155, 2, 37, "Output",ExpressionUUID->"e677ec89-a7a5-436b-a7ff-841de35b69f5"],
Cell[50471, 1454, 148, 2, 37, "Output",ExpressionUUID->"c7a44eaf-2696-45fd-b4ff-4bfe30247e3d"]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[50680, 1463, 168, 2, 68, "Subchapter",ExpressionUUID->"099ee814-8db2-4a63-8b88-1c9110418edc"],
Cell[CellGroupData[{
Cell[50873, 1469, 152, 3, 64, "Section",ExpressionUUID->"a0a8708b-f092-4ee6-9a67-42b43b197e0d"],
Cell[51028, 1474, 665, 14, 59, "Text",ExpressionUUID->"1161e2d1-8c61-4649-a244-39df43510112"]
}, Closed]],
Cell[CellGroupData[{
Cell[51730, 1493, 150, 3, 48, "Section",ExpressionUUID->"3fb1824e-e75b-4cc5-8eaa-beadee826fe0"],
Cell[51883, 1498, 2920, 74, 263, "Text",ExpressionUUID->"d2e60fcf-ef9f-4002-b131-18873c634cd4"],
Cell[54806, 1574, 71, 0, 36, "Text",ExpressionUUID->"048da40f-8692-49a1-b65f-bc166812bf19"]
}, Closed]],
Cell[CellGroupData[{
Cell[54914, 1579, 166, 3, 48, "Section",ExpressionUUID->"8779e6db-4076-4a9b-87d6-ff38d13f3bac"],
Cell[55083, 1584, 2054, 60, 184, "Text",ExpressionUUID->"06e44a1c-399d-43df-a357-11dba9bd9c47"]
}, Closed]],
Cell[CellGroupData[{
Cell[57174, 1649, 226, 4, 48, "Section",ExpressionUUID->"90ff902b-2217-475c-855d-0366df4e220d"],
Cell[CellGroupData[{
Cell[57425, 1657, 248, 4, 45, "Subsection",ExpressionUUID->"2df1784e-dcf5-4762-af77-7ae3b553fdea"],
Cell[CellGroupData[{
Cell[57698, 1665, 476, 9, 57, "Input",ExpressionUUID->"b7a6c1c3-0e35-4955-a110-3f3c15708629"],
Cell[58177, 1676, 78705, 1295, 508, "Output",ExpressionUUID->"e5146da6-5b46-4966-a4ec-8b2b395804e9"],
Cell[136885, 2973, 65055, 1071, 521, "Output",ExpressionUUID->"4f990d9d-f674-43e3-9a8c-be1541d1a8c1"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[202001, 4051, 204, 4, 48, "Section",ExpressionUUID->"160c0ba2-e067-4e83-996a-a22cd2e4c768"],
Cell[202208, 4057, 1147, 20, 153, "Text",ExpressionUUID->"4a8de4bd-2698-4d4b-a7fb-20430a4740b9"]
}, Closed]],
Cell[CellGroupData[{
Cell[203392, 4082, 206, 4, 48, "Section",ExpressionUUID->"38eedd4e-300c-4006-9778-5e47876d571d"],
Cell[203601, 4088, 1539, 34, 222, "Text",ExpressionUUID->"ea927233-5a90-4eb0-a4d0-8d009144f6cf"]
}, Closed]],
Cell[CellGroupData[{
Cell[205177, 4127, 198, 4, 48, "Section",ExpressionUUID->"be60b009-bed8-488e-b206-070c2716a422"],
Cell[205378, 4133, 6587, 201, 1159, "Input",ExpressionUUID->"ced0e215-54e4-436d-b7e4-67d0a2a16445"]
}, Closed]]
}, Open  ]]
}, Open  ]]
}
]
*)

