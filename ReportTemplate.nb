(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     93760,       2512]
NotebookOptionsPosition[     77824,       2197]
NotebookOutlinePosition[     85474,       2395]
CellTagsIndexPosition[     85431,       2392]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.872345465875473*^9, 
  3.87234546774129*^9}},ExpressionUUID->"1a1a54d1-f16f-4663-92d9-\
341db90aaaca"],

Cell[CellGroupData[{

Cell["Report Project X ", "Title",ExpressionUUID->"2e086750-1cf1-4c43-bc57-bac07652a650"],

Cell["\<\
Course code: IX1500
Date: 2022-09-xx\
\>", "Text",
 CellChangeTimes->{{3.872254125705349*^9, 
  3.8722541618100367`*^9}},ExpressionUUID->"679e81cd-23f2-4ac3-aad0-\
55498a6469d8"],

Cell["\<\
Deni Person, denip@kth.se
William Eriksson, werik@kth.se\
\>", "Text",
 CellChangeTimes->{{3.8722541653374987`*^9, 
  3.872254206594503*^9}},ExpressionUUID->"39bfcd1a-7896-4364-9d2c-\
9b6c98366775"],

Cell[CellGroupData[{

Cell["Task 1: Texas Hold \[OpenCurlyQuote]em Probabilities ", "Subchapter",
 CellChangeTimes->{{3.872254212221635*^9, 3.872254271374174*^9}, {
  3.8722549587709703`*^9, 
  3.872254972015833*^9}},ExpressionUUID->"2760ab7a-2fed-4ae4-a63f-\
890119ad5062"],

Cell[CellGroupData[{

Cell["Summary", "Section",
 CellChangeTimes->{{3.87225428117244*^9, 
  3.872254281320321*^9}},ExpressionUUID->"28ab532a-4f99-4328-b494-\
a8a51a0e3e70"],

Cell[CellGroupData[{

Cell["Task", "Subsection",ExpressionUUID->"4df8543c-22f8-401d-8973-c66d5fa62864"],

Cell["\<\
In Texas Hold \[OpenCurlyQuote]em poker (7 cards), there are a set number of \
hands - each ranking either higher or lower than the other based on the \
probability of their existence.
The hands are, ranked low-to-high in order of score :
\t* Pair
\t* Two pairs
\t* No pair/high card
\t* Three of a kind
\t* Straight
\t* Flush
\t* Full house
\t* Four of a kind
\t* Straight Flush
\t* Royal Straight Flush
\t
(task 1.a). Determine the probability of each hand after a player\
\[CloseCurlyQuote]s hole cards have been dealt.
(task 1.b). Determine the probability of each hand after a player\
\[CloseCurlyQuote]s hole cards have been dealt plus 3 of 
\tthe 5 community cards has been shown.
\
\>", "Text",
 CellChangeTimes->{{3.872254293363721*^9, 3.8722543246063137`*^9}, {
  3.8722543646734343`*^9, 3.872254687890245*^9}, {3.8722547255972548`*^9, 
  3.8722548527600517`*^9}, {3.872254895436355*^9, 3.872254948223963*^9}, {
  3.872255013992981*^9, 3.872255232490035*^9}, {3.87234553003161*^9, 
  3.872345571601205*^9}, {3.8723462556048822`*^9, 3.872346282708173*^9}, {
  3.872347893233926*^9, 
  3.872347895009287*^9}},ExpressionUUID->"8ad5d4da-afa2-434b-a402-\
a9f9b705fa59"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Result", "Subsection",ExpressionUUID->"39a0ef6c-6a2c-4081-9062-84513a76c571"],

Cell["\<\
Running our program, we got the hole cards:
\t{Ace of  Hearts, 7 of Diamonds} 
as well as the community cards:
\t{8 of Diamonds, 11 of Clubs, King of Hearts}.

With these, we ran our program that uses the cencus method to go through all \
of the 
combinations and got these probabilites.\
\>", "Text",
 CellChangeTimes->{{3.8723464638509283`*^9, 3.872346503309616*^9}, {
  3.872346541426227*^9, 3.872346560182078*^9}, {3.8723466057004843`*^9, 
  3.8723466118211117`*^9}, {3.87234716105091*^9, 3.872347183482136*^9}, {
  3.8723472345330048`*^9, 3.8723473778990507`*^9}, {3.872347430416937*^9, 
  3.872347436733974*^9}, {3.872347471213707*^9, 3.872347515449273*^9}, {
  3.872347855195854*^9, 
  3.872347886279975*^9}},ExpressionUUID->"c5065607-a7e6-4da3-87ac-\
93d5a0d99f57"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  TagBox[GridBox[{
     {"", 
      RowBox[{"        ", 
       RowBox[{"two", " ", "known", " ", "cards"}]}], 
      RowBox[{"       ", 
       RowBox[{"five", " ", "known", " ", "cards"}]}]},
     {
      RowBox[{"One", " ", "Pair"}], "0.7767146821725915", 
      "0.5855689176688251"},
     {
      RowBox[{"Two", " ", "Pairs"}], "0.2533897185146029", 
      "0.08325624421831637"},
     {
      RowBox[{"Three", " ", "Of", " ", "A", " ", "Kind"}], 
      "0.0683569635069569", "0.013876040703052728"},
     {"Straight", "0.027246125092034962", "0.02960222016651249"},
     {"Flush", "0.01971813702354207", "0"},
     {
      RowBox[{"Full", " ", "House"}], "0.022340425531914895", "0"},
     {
      RowBox[{"Four", " ", "Of", " ", "A", " ", "Kind"}], 
      "0.0012592270950933565", "0"},
     {
      RowBox[{"Straight", " ", "Flush"}], "0.0008410579773074818", "0"},
     {
      RowBox[{"Royal", " ", "Straight", " ", "Flush"}], 
      "0.0002331552417451717", "0"}
    },
    AutoDelete->False,
    GridBoxAlignment->{"Columns" -> {{Left}}},
    GridBoxBackground->{"Columns" -> {
        GrayLevel[0.5], None}, "Rows" -> {
        GrayLevel[0.85], None}},
    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
    GridBoxItemStyle->{"Columns" -> {{"Text"}}, "Rows" -> {{"Text"}}},
    GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{1}}}],
   "Grid"]}]], "Text",
 CellChangeTimes->{{3.872256436003867*^9, 3.872256436373304*^9}, {
   3.872346311909375*^9, 3.872346330383478*^9}, 3.872346437529422*^9, {
   3.872346509379629*^9, 3.872346519248699*^9}, {3.87234657684409*^9, 
   3.872346655193584*^9}, 3.872347092239058*^9, {3.872347141345746*^9, 
   3.8723471579347277`*^9}, {3.872347300414731*^9, 3.8723473110407333`*^9}, {
   3.872347638026177*^9, 3.8723476411076612`*^9}, {3.872347676503723*^9, 
   3.872347714523531*^9}, {3.872347756148241*^9, 
   3.87234783240492*^9}},ExpressionUUID->"32be9a5f-94e1-47ff-bec6-\
06b360fcaaa5"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Mathematical Formulas:", "Section",
 CellChangeTimes->{{3.872346149970783*^9, 3.87234615698*^9}, {
  3.872346217801449*^9, 3.8723462257941008`*^9}, {3.872349458889336*^9, 
  3.872349461966363*^9}, {3.872349513540574*^9, 3.872349515119709*^9}, {
  3.8723521077534323`*^9, 
  3.872352113240444*^9}},ExpressionUUID->"6943093f-8a76-4b29-9b2d-\
76d8c3875b28"],

Cell[TextData[{
 "Binomial coefficient for 5 cards: ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["C", "7"], "=", 
    RowBox[{
     RowBox[{"(", 
      OverscriptBox["7", "52"], ")"}], "=", "133784560"}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "ea810958-96f1-4d8b-9277-86c9d5cb9921"],
 " "
}], "Text",
 CellChangeTimes->{{3.87234965878272*^9, 3.8723496991538973`*^9}, {
  3.8723497438202887`*^9, 3.872349745491056*^9}, {3.872349796549922*^9, 
  3.8723498107912197`*^9}, {3.872349852060348*^9, 3.87234989612589*^9}, {
  3.872349935302765*^9, 3.872349971890308*^9}, {3.87235106518473*^9, 
  3.872351086227701*^9}, {3.8723512424041643`*^9, 
  3.8723512667130213`*^9}},ExpressionUUID->"95e29c9d-1ee9-442e-84bd-\
9a6693494379"],

Cell[TextData[{
 "Binomial coefficient for 5 cards ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"(", 
     OverscriptBox["5", "52"], ")"}], "=", 
    SubscriptBox["C", "5"]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "5fd49fcb-9c7b-4108-aa4c-9d3d59ebdf8a"]
}], "Text",
 CellChangeTimes->{{3.872350631058275*^9, 3.872350710486158*^9}, {
  3.872350836673708*^9, 3.872350882040196*^9}, {3.872350917261042*^9, 
  3.872351056900157*^9}},ExpressionUUID->"86caaedd-0425-447b-b5bd-\
657f82723c6d"],

Cell[TextData[{
 "Probability of a certain hand:  ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["P", "h"], "=", " ", 
    FractionBox[
     RowBox[{"|", 
      RowBox[{"h", "(", "S", ")"}], "|"}], 
     RowBox[{"|", "S", "|"}]]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "e943ba21-7796-408d-b2db-46056dc7aa04"],
 ",\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{"|", 
    RowBox[{"h", "(", "S", ")"}], "|"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "d745a2c7-7971-4b0c-9834-48c0e9738979"],
 " is the amount of occurrencies of a certain hand,\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{"S", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"h", "\[Union]", "e"}], ",", " ", 
      RowBox[{"e", "\[Element]", 
       SubscriptBox["C", "n"]}]}], "}"}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "6aefa5ba-cc0d-42a2-a3bb-9ee8dc3d4bf4"],
 ", \n\t",
 Cell[BoxData[
  FormBox["n", TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "3f58e598-c386-4459-8fc1-09cc5ec46810"],
 " is the amount of undetermined cards in the game,\n\t",
 Cell[BoxData[
  FormBox["e", TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "ebf96699-d9bd-4982-b89a-ab57abb39c7a"],
 " is an element in the set of possible combinations from C (a set of 5 or 2 \
cards in our task)."
}], "Text",
 InitializationCell->True,
 CellChangeTimes->{{3.8723499117440042`*^9, 3.8723499319611807`*^9}, {
  3.8723499824842787`*^9, 3.8723501116127872`*^9}, {3.872350273007386*^9, 
  3.87235059055064*^9}, {3.872351093205241*^9, 3.8723511011856117`*^9}, {
  3.872351158278903*^9, 3.872351210203948*^9}, {3.8723518383447638`*^9, 
  3.872351969846108*^9}, {3.87235200007402*^9, 
  3.872352100084441*^9}},ExpressionUUID->"048bc31b-4354-46b5-b370-\
6c9a9c48c07f"],

Cell["", "Text",
 CellChangeTimes->{{3.8723501246932993`*^9, 3.872350157459509*^9}, 
   3.872350240146942*^9},ExpressionUUID->"51d4c73d-9e3c-4a0f-a734-\
c6d26821de38"],

Cell["", "Text",
 CellChangeTimes->{{3.872350297510244*^9, 3.8723503034639587`*^9}, {
  3.8723511263866987`*^9, 
  3.8723511273511333`*^9}},ExpressionUUID->"a3aa7323-0445-4aa5-b87e-\
525409f92273"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Discussion", "Section",
 CellChangeTimes->{{3.8723492782159557`*^9, 
  3.8723492799442873`*^9}},ExpressionUUID->"0f01609e-0763-4fcd-8fcd-\
2d660c380476"],

Cell[TextData[{
 "We made the choice to make this simulation using python instead of \
mathematica. \n\nThe census method lets us simulate the frequency of the \
various poker hands. \nThe steps in our program is as follows:\n\t1. Generate \
deck.\n\t2. Take two random cards from the deck (hole cards).\n\t3. Generate \
frequencies of each hand based from the hole cards.\n\t4. Use the formula ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["P", "h"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "9033f896-abf5-4013-8d8f-5746b366ab56"],
 " for each of the hands in the list.\n\t5. Take 3 cards from the deck and \
use as community cards.\n\t6. Generate frequencies of each hand based from \
the previous hole cards and the new community cards.\n\t7. Use the formula ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["P", "h"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "c1fcb117-8016-4deb-8484-3e963777664a"],
 " for each of the hands in the list.\n\t\nTaking cards from the deck reduces \
the general uncertainty of the game and looking at the table in the result\n\t\
section, it empirically shows that reduced spread. Five out of nine rows are \
reduced to impossible.\n\t\n\n\t  "
}], "Text",
 CellChangeTimes->{
  3.8723494492554007`*^9, {3.872351425496168*^9, 3.872351593428549*^9}, {
   3.872351767321464*^9, 3.872351817900375*^9}, {3.872352120428548*^9, 
   3.872352284310174*^9}, {3.872352345263768*^9, 3.872352397895553*^9}, {
   3.8723526073143473`*^9, 3.872353031791637*^9}, {3.872353083234585*^9, 
   3.872353083817994*^9}, {3.872353223736713*^9, 3.872353257384261*^9}, {
   3.8723533297344923`*^9, 3.872353392605516*^9}, {3.872353571171473*^9, 
   3.8723535812999487`*^9}, {3.872353706892126*^9, 
   3.872353749179049*^9}},ExpressionUUID->"7db1cf4d-848e-436d-bfb6-\
d2bde7a8a488"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Diagrams", "Section",
 CellChangeTimes->{{3.872349341215963*^9, 3.872349348366026*^9}, 
   3.872352478535907*^9},ExpressionUUID->"211b77c1-b22b-4b11-9556-\
e0ce2981d62a"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"What", "?"}]}]], "Input",
 CellChangeTimes->{
  3.87234935047967*^9, {3.8723493975290203`*^9, 
   3.872349398280344*^9}},ExpressionUUID->"0ee87278-0151-41f9-8a9d-\
a593c98be8da"]
}, Closed]],

Cell[CellGroupData[{

Cell["Conclusion", "Section",
 CellChangeTimes->{{3.872349381340708*^9, 
  3.872349385214888*^9}},ExpressionUUID->"3c88e56c-4768-4de7-b81a-\
146942b7ddcc"],

Cell["ez", "Text",
 CellChangeTimes->{{3.87234939183327*^9, 
  3.872349391974028*^9}},ExpressionUUID->"b0a4dfc3-f51a-490c-bb63-\
651909969ee8"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Mathematica Data", "Section",
 CellChangeTimes->{{3.8722554975359793`*^9, 
  3.872255501652152*^9}},ExpressionUUID->"eb232638-2837-4382-9654-\
616c94d28459"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ClearAll", "[", "\"\<`*\>\"", "]"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.8722554297870073`*^9, 3.872255431032365*^9}, {
  3.872255506231618*^9, 
  3.872255507076623*^9}},ExpressionUUID->"724ad548-2c8d-4dfd-82a4-\
53b64348dd55"],

Cell[BoxData[
 RowBox[{"data", " ", "=", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", " ", 
     RowBox[{",", " ", 
      RowBox[{"2", "KnownCards"}], ",", " ", 
      RowBox[{"5", "KnownCards"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "OnePair", ",", " ", "0.7767146821725915", ",", " ", 
      "0.5855689176688251"}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{
     "TwoPairs", ",", " ", "0.2533897185146029", ",", " ", 
      "0.08325624421831637"}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{
     "ThreeOfAKind", ",", " ", "0.0683569635069569", ",", " ", 
      "0.013876040703052728"}], "}"}], ",", " ", "\n", 
    RowBox[{"{", 
     RowBox[{
     "Straight", ",", " ", "0.02688364892673073", ",", " ", 
      "0.1517113783533765"}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"Flush", ",", " ", "0.01971813702354207", ",", " ", "0"}], "}"}],
     ",", " ", 
    RowBox[{"{", 
     RowBox[{"FullHouse", ",", " ", "0.022329098151749136", ",", " ", "0"}], 
     "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{
     "FourOfAKind", ",", " ", "0.0012592270950933565", ",", " ", "0"}], "}"}],
     ",", " ", "\n", 
    RowBox[{"{", 
     RowBox[{
     "StraightFlush", ",", " ", "0.0008316184938360173", ",", " ", "0"}], 
     "}"}], ",", "\n", 
    RowBox[{"{", 
     RowBox[{
     "RoyalStraightFlush", ",", " ", "0.00000320942438029791", ",", " ", 
      "0"}], "}"}]}], "}"}]}]], "Code",
 CellChangeTimes->{{3.8722553528509817`*^9, 3.872255397491025*^9}, {
   3.872255559651288*^9, 3.872255596959303*^9}, {3.872255717280254*^9, 
   3.872255727504229*^9}, 3.872255778658567*^9, {3.8722558407645283`*^9, 
   3.872256000149041*^9}, {3.872256059727187*^9, 3.872256110817519*^9}, {
   3.872256182218224*^9, 3.872256263952137*^9}, {3.872256315633278*^9, 
   3.872256421929593*^9}, {3.8722566499282837`*^9, 3.872256878014625*^9}, {
   3.872256909189598*^9, 3.872256966317938*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"4c0cfd7e-bd83-42cd-9ed5-b121f577894f"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"gggggg", "=", " ", 
   RowBox[{"Grid", "[", 
    RowBox[{"data", ",", 
     RowBox[{"Alignment", "->", "Left"}], ",", 
     RowBox[{"Spacings", "->", 
      RowBox[{"{", 
       RowBox[{"2", ",", "1"}], "}"}]}], ",", 
     RowBox[{"Frame", "->", "All"}], ",", 
     RowBox[{"ItemStyle", "->", "\"\<Text\>\""}], ",", 
     RowBox[{"Background", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Gray", ",", "None"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"LightGray", ",", "None"}], "}"}]}], "}"}]}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.87225550982402*^9, 3.872255517609007*^9}, {
  3.872256538576326*^9, 3.8722565395367813`*^9}, {3.872256592834446*^9, 
  3.8722565975952883`*^9}, {3.8723482382178497`*^9, 
  3.872348240098659*^9}},ExpressionUUID->"10119438-007f-4429-a5a0-\
bee11d87af84"],

Cell[BoxData[
 TagBox[GridBox[{
    {"", 
     RowBox[{"        ", 
      RowBox[{"two", " ", "known", " ", "cards"}]}], 
     RowBox[{"       ", 
      RowBox[{"five", " ", "known", " ", "cards"}]}]},
    {
     RowBox[{"One", " ", "Pair"}], "0.7767146821725915", "0.5855689176688251"},
    {
     RowBox[{"Two", " ", "Pairs"}], "0.2533897185146029", 
     "0.08325624421831637"},
    {
     RowBox[{"Three", " ", "Of", " ", "A", " ", "Kind"}], 
     "0.0683569635069569", "0.013876040703052728"},
    {"Straight", "0.027246125092034962", "0.02960222016651249"},
    {"Flush", "0.01971813702354207", "0"},
    {
     RowBox[{"Full", " ", "House"}], "0.022340425531914895", "0"},
    {
     RowBox[{"Four", " ", "Of", " ", "A", " ", "Kind"}], 
     "0.0012592270950933565", "0"},
    {
     RowBox[{"Straight", " ", "Flush"}], "0.0008410579773074818", "0"},
    {
     RowBox[{"Royal", " ", "Straight", " ", "Flush"}], 
     "0.0002331552417451717", "0"}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxBackground->{"Columns" -> {
       GrayLevel[0.5], None}, "Rows" -> {
       GrayLevel[0.85], None}},
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxItemStyle->{"Columns" -> {{"Text"}}, "Rows" -> {{"Text"}}},
   GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{1}}}],
  "Grid"]], "Input",
 CellChangeTimes->{{3.872348223255733*^9, 
  3.8723482232824*^9}},ExpressionUUID->"f9b04900-031a-44e3-953d-a1a4e8d75a0d"]
}, Closed]],

Cell[CellGroupData[{

Cell["Code", "Section",
 CellChangeTimes->{{3.872255470155498*^9, 
  3.872255477558011*^9}},ExpressionUUID->"d13fe2a6-2314-4011-bd36-\
9098b2a50549"],

Cell[BoxData[{
 RowBox[{"import", " ", "math"}], "\n", 
 RowBox[{"import", " ", "random"}], "\n", 
 RowBox[{"from", " ", "itertools", " ", "import", " ", "combinations"}], "\n", 
 RowBox[{
  RowBox[{"from", " ", "operator", " ", "import", " ", "attrgetter"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
  "\"\<\>\"", 
   "\"\< \n\n* one pair\n* two pairs\n* three of a kind\n* straight\n* flush\n\
* full house \n* four of a kinddqdq\n* straight flush\n* straight royal flush\
\n\n\>\"", "\"\<\>\""}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"class", " ", 
   RowBox[{"Card", ":", "\n", "\n", "    ", "color"}]}], " ", "=", " ", 
  "\"\<\>\""}], "\n", 
 RowBox[{"    ", 
  RowBox[{"number", " ", "=", " ", "0"}], "\n"}], "\n", 
 RowBox[{"    ", 
  RowBox[{
   RowBox[{
    RowBox[{"def", " ", "__init", "__", 
     RowBox[{"(", 
      RowBox[{"self", ",", " ", "c", ",", " ", "n"}], ")"}]}], ":", "\n", 
    "        ", 
    RowBox[{"self", ".", "color"}]}], " ", "=", " ", "c"}]}], "\n", 
 RowBox[{"        ", 
  RowBox[{
   RowBox[{"self", ".", "number"}], " ", "=", " ", "n"}], "\n", 
  "    "}], "\n", 
 RowBox[{"    ", 
  RowBox[{
   RowBox[{"def", " ", "__repr", "__", 
    RowBox[{"(", "self", ")"}]}], ":", "\n", "        ", 
   RowBox[{"return", " ", "f", "\"\<{self.color}, {self.number}\>\""}]}], 
  "\n", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"def", " ", "main", 
    RowBox[{"(", ")"}]}], ":", "\n", "    ", "deck"}], " ", "=", " ", 
  RowBox[{"generate_deck", 
   RowBox[{"(", ")"}]}]}], "\n", 
 RowBox[{"    ", 
  RowBox[{"hand", " ", "=", " ", 
   RowBox[{"pull_cards", "_from", "_deck", 
    RowBox[{"(", 
     RowBox[{"deck", ",", " ", "2"}], ")"}]}]}]}], "\n", 
 RowBox[{"    ", 
  RowBox[{"print", 
   RowBox[{"(", "\"\<First round:\>\"", ")"}]}]}], "\n", 
 RowBox[{"    ", 
  RowBox[{"test_hand", " ", "=", " ", 
   RowBox[{"[", 
    RowBox[{
     RowBox[{"Card", 
      RowBox[{"(", 
       RowBox[{"\"\<Ass\>\"", ",", " ", "2"}], ")"}]}], ",", " ", 
     RowBox[{"Card", 
      RowBox[{"(", 
       RowBox[{"\"\<Ass\>\"", ",", " ", "1"}], ")"}]}], ",", " ", 
     RowBox[{"Card", 
      RowBox[{"(", 
       RowBox[{"\"\<Ass\>\"", ",", " ", "2"}], ")"}]}], ",", " ", 
     RowBox[{"Card", 
      RowBox[{"(", 
       RowBox[{"\"\<Ass\>\"", ",", " ", "1"}], ")"}]}]}], "]"}]}]}], "\n", 
 RowBox[{"    ", 
  RowBox[{"calculate_prob", 
   RowBox[{"(", 
    RowBox[{"hand", ",", " ", "deck", ",", " ", "5"}], ")"}]}]}], "\n", 
 RowBox[{"    ", 
  RowBox[{"hand", " ", "+=", " ", 
   RowBox[{"pull_cards", "_from", "_deck", 
    RowBox[{"(", 
     RowBox[{"deck", ",", " ", "3"}], ")"}]}]}]}], "\n", 
 RowBox[{"    ", 
  RowBox[{"print", 
   RowBox[{"(", "\"\<Second round:\>\"", ")"}]}]}], "\n", 
 RowBox[{"    ", 
  RowBox[{"calculate_prob", 
   RowBox[{"(", 
    RowBox[{"hand", ",", " ", "deck", ",", " ", "2"}], ")"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"def", " ", "print_cards", 
    RowBox[{"(", 
     RowBox[{"cards", ",", " ", "description"}], ")"}]}], ":", "\n", "\n", 
   "    ", 
   RowBox[{"print", 
    RowBox[{"(", "description", ")"}]}]}], "\n"}], "\n", 
 RowBox[{"    ", 
  RowBox[{
   RowBox[{"for", " ", "c", " ", "in", " ", "range", 
    RowBox[{"(", 
     RowBox[{"len", 
      RowBox[{"(", "cards", ")"}]}], ")"}]}], ":", "\n", "        ", 
   RowBox[{"print", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"cards", "[", "c", "]"}], ".", "color"}], ",", " ", 
      RowBox[{
       RowBox[{"cards", "[", "c", "]"}], ".", "number"}], ",", " ", 
      RowBox[{"end", "=", "\"\< \>\""}]}], ")"}]}]}], "\n"}], "\n", 
 RowBox[{"    ", 
  RowBox[{"print", 
   RowBox[{"(", "\"\<\\n\>\"", ")"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"def", " ", "calculate_prob", 
   RowBox[{"(", 
    RowBox[{"hand", ",", " ", "deck", ",", " ", 
     RowBox[{"community_card", "_count"}]}], ")"}]}], ":", "\n", "\n", "    ", 
  RowBox[{"print", 
   RowBox[{"(", "hand", ")"}]}]}], "\n", 
 RowBox[{"    ", 
  RowBox[{"unknowns", " ", "=", " ", 
   RowBox[{"combinations", 
    RowBox[{"(", 
     RowBox[{"deck", ",", " ", 
      RowBox[{"community_card", "_count"}]}], ")"}]}]}], "\n"}], "\n", 
 RowBox[{"    ", 
  RowBox[{"tuples", " ", "=", " ", 
   RowBox[{"[", "]"}]}], "\n"}], "\n", 
 RowBox[{"    ", 
  RowBox[{
   RowBox[{"for", " ", "j", " ", "in", " ", "combinations", 
    RowBox[{"(", 
     RowBox[{"deck", ",", " ", 
      RowBox[{"community_card", "_count"}]}], ")"}]}], ":", "\n", "        ", 
   RowBox[{
    RowBox[{"tuples", ".", "append"}], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"unknowns", ".", "__next"}], "__", 
      RowBox[{"(", ")"}]}], ")"}]}]}], "\n"}], "\n", 
 RowBox[{"    ", 
  RowBox[{"found_pairs", " ", "=", " ", "0"}]}], "\n", 
 RowBox[{"    ", 
  RowBox[{
   RowBox[{"found_two", "_pair"}], " ", "=", " ", "0"}]}], "\n", 
 RowBox[{"    ", 
  RowBox[{
   RowBox[{"found_three", "_of"}], " ", "=", " ", "0"}]}], "\n", 
 RowBox[{"    ", 
  RowBox[{
   RowBox[{"found_royal", "_flushes"}], " ", "=", " ", "0"}]}], "\n", 
 RowBox[{"    ", 
  RowBox[{"found_flushes", " ", "=", " ", "0"}]}], "\n", 
 RowBox[{"    ", 
  RowBox[{
   RowBox[{"found_straight", "_flushes"}], " ", "=", " ", "0"}]}], "\n", 
 RowBox[{"    ", 
  RowBox[{"found_straight", " ", "=", " ", "0"}]}], "\n", 
 RowBox[{"    ", 
  RowBox[{
   RowBox[{"found_full", "_house"}], " ", "=", " ", "0"}]}], "\n", 
 RowBox[{"    ", 
  RowBox[{
   RowBox[{"found_four", "_of", "_a", "_kind"}], " ", "=", " ", "0"}], 
  "\n"}], "\n", 
 RowBox[{"    ", 
  RowBox[{
   RowBox[{
    RowBox[{"for", " ", "i", " ", "in", " ", "range", 
     RowBox[{"(", 
      RowBox[{"len", 
       RowBox[{"(", "tuples", ")"}]}], ")"}]}], ":", "\n", "        ", 
    "combo"}], " ", "=", " ", 
   RowBox[{"[", "]"}]}]}], "\n", 
 RowBox[{"        ", 
  RowBox[{
   RowBox[{"for", " ", "j", " ", "in", " ", "range", 
    RowBox[{"(", 
     RowBox[{"community_card", "_count"}], ")"}]}], ":", "\n", "            ", 
   RowBox[{
    RowBox[{"combo", ".", "append"}], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"tuples", "[", "i", "]"}], "[", "j", "]"}], ")"}]}]}], 
  "\n"}], "\n", 
 RowBox[{"        ", 
  RowBox[{"found_pairs", " ", "+=", " ", 
   RowBox[{"one_pair", 
    RowBox[{"(", 
     RowBox[{"combo", "+", "hand"}], ")"}]}]}]}], "\n", 
 RowBox[{"        ", 
  RowBox[{
   RowBox[{"found_two", "_pair"}], " ", "+=", " ", 
   RowBox[{"two_pairs", 
    RowBox[{"(", 
     RowBox[{"combo", "+", "hand"}], ")"}]}]}]}], "\n", 
 RowBox[{"        ", 
  RowBox[{
   RowBox[{"found_three", "_of"}], " ", "+=", " ", 
   RowBox[{"three_of", "_a", "_kind", 
    RowBox[{"(", 
     RowBox[{"combo", "+", "hand"}], ")"}]}]}]}], "\n", 
 RowBox[{"        ", 
  RowBox[{
   RowBox[{"found_royal", "_flushes"}], " ", "+=", " ", 
   RowBox[{"royal_straight", "_flush", 
    RowBox[{"(", 
     RowBox[{"combo", "+", "hand"}], ")"}]}]}]}], "\n", 
 RowBox[{"        ", 
  RowBox[{"found_straight", " ", "+=", " ", 
   RowBox[{"check_straight", 
    RowBox[{"(", 
     RowBox[{"combo", "+", "hand"}], ")"}]}]}]}], "\n", 
 RowBox[{"        ", 
  RowBox[{"found_flushes", " ", "+=", " ", 
   RowBox[{"check_flush", 
    RowBox[{"(", 
     RowBox[{"combo", "+", "hand"}], ")"}]}]}]}], "\n", 
 RowBox[{"        ", 
  RowBox[{
   RowBox[{"found_straight", "_flushes"}], " ", "+=", " ", 
   RowBox[{"check_straight", "_flush", 
    RowBox[{"(", 
     RowBox[{"combo", "+", "hand"}], ")"}]}]}]}], "\n", 
 RowBox[{"        ", 
  RowBox[{
   RowBox[{"found_full", "_house"}], " ", "+=", " ", 
   RowBox[{"full_house", 
    RowBox[{"(", 
     RowBox[{"combo", "+", "hand"}], ")"}]}]}]}], "\n", 
 RowBox[{"        ", 
  RowBox[{
   RowBox[{"found_four", "_of", "_a", "_kind"}], " ", "+=", " ", 
   RowBox[{"four_of", "_a", "_kind", 
    RowBox[{"(", 
     RowBox[{"combo", "+", "hand"}], ")"}]}]}], "\n", "\n", "    "}], "\n", 
 RowBox[{"    ", 
  RowBox[{"print", 
   RowBox[{"(", "\"\<Probabilities:\>\"", ")"}]}]}], "\n", 
 RowBox[{"    ", 
  RowBox[{"print", 
   RowBox[{"(", "\"\<\>\"", ")"}]}]}], "\n", 
 RowBox[{"    ", 
  RowBox[{"print", 
   RowBox[{"(", 
    RowBox[{"\"\<One pair: \>\"", ",", " ", 
     RowBox[{
      RowBox[{"found_pairs", "/", "len"}], 
      RowBox[{"(", "tuples", ")"}]}]}], ")"}]}]}], "\n", 
 RowBox[{"    ", 
  RowBox[{"print", 
   RowBox[{"(", 
    RowBox[{"\"\<Two pairs: \>\"", ",", " ", 
     RowBox[{"found_two", 
      RowBox[{"_pair", "/", "len"}], 
      RowBox[{"(", "tuples", ")"}]}]}], ")"}]}]}], "\n", 
 RowBox[{"    ", 
  RowBox[{"print", 
   RowBox[{"(", 
    RowBox[{"\"\<Three of a kind: \>\"", ",", " ", 
     RowBox[{"found_three", 
      RowBox[{"_of", "/", "len"}], 
      RowBox[{"(", "tuples", ")"}]}]}], ")"}]}]}], "\n", 
 RowBox[{"    ", 
  RowBox[{"print", 
   RowBox[{"(", 
    RowBox[{"\"\<Straight: \>\"", ",", " ", 
     RowBox[{
      RowBox[{"found_straight", "/", "len"}], 
      RowBox[{"(", "tuples", ")"}]}]}], ")"}]}]}], "\n", 
 RowBox[{"    ", 
  RowBox[{"print", 
   RowBox[{"(", 
    RowBox[{"\"\<Flush: \>\"", ",", " ", 
     RowBox[{
      RowBox[{"found_flushes", "/", "len"}], 
      RowBox[{"(", "tuples", ")"}]}]}], ")"}]}]}], "\n", 
 RowBox[{"    ", 
  RowBox[{"print", 
   RowBox[{"(", 
    RowBox[{"\"\<Full house: \>\"", ",", " ", 
     RowBox[{"found_full", 
      RowBox[{"_house", "/", "len"}], 
      RowBox[{"(", "tuples", ")"}]}]}], ")"}]}]}], "\n", 
 RowBox[{"    ", 
  RowBox[{"print", 
   RowBox[{"(", 
    RowBox[{"\"\<Four of a kind: \>\"", ",", " ", 
     RowBox[{"found_four", "_of", "_a", 
      RowBox[{"_kind", "/", "len"}], 
      RowBox[{"(", "tuples", ")"}]}]}], ")"}]}]}], "\n", 
 RowBox[{"    ", 
  RowBox[{"print", 
   RowBox[{"(", 
    RowBox[{"\"\<Straight flush: \>\"", ",", " ", 
     RowBox[{"found_straight", 
      RowBox[{"_flushes", "/", "len"}], 
      RowBox[{"(", "tuples", ")"}]}]}], ")"}]}]}], "\n", 
 RowBox[{"    ", 
  RowBox[{"print", 
   RowBox[{"(", 
    RowBox[{"\"\<Royal straight flush: \>\"", ",", " ", 
     RowBox[{"found_royal", 
      RowBox[{"_flushes", "/", "len"}], 
      RowBox[{"(", "tuples", ")"}]}]}], ")"}]}]}], "\n", 
 RowBox[{"    ", 
  RowBox[{"print", 
   RowBox[{"(", "\"\<\>\"", ")"}]}], "\n", "\n"}], "\n", 
 RowBox[{
  RowBox[{"def", " ", "one_pair", 
   RowBox[{"(", "combination", ")"}]}], " ", "->", " ", 
  RowBox[{"int", ":", "\n", "    ", 
   RowBox[{"for", " ", "i", " ", "in", " ", "range", 
    RowBox[{"(", 
     RowBox[{"len", 
      RowBox[{"(", "combination", ")"}]}], ")"}]}], ":", "    ", "\n", 
   "        ", 
   RowBox[{"for", " ", "j", " ", "in", " ", "range", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"i", "+", "1"}], ",", 
      RowBox[{"len", 
       RowBox[{"(", "combination", ")"}]}]}], ")"}]}], ":", "\n", 
   "            ", 
   RowBox[{
    RowBox[{"if", " ", "j"}], " ", ">=", " ", 
    RowBox[{"len", 
     RowBox[{"(", "combination", ")"}]}]}], ":", "\n", "                ", 
   "break"}]}], "\n", 
 RowBox[{"            ", 
  RowBox[{
   RowBox[{"if", " ", 
    RowBox[{
     RowBox[{"combination", "[", "i", "]"}], ".", "number"}]}], " ", "==", 
   " ", 
   RowBox[{
    RowBox[{"combination", "[", "j", "]"}], ".", 
    RowBox[{"number", ":", "\n", "                ", 
     RowBox[{"#print", 
      RowBox[{"(", 
       RowBox[{
       "f", "\"\<{combination[i].number} | {combination[j].number}\>\""}], 
       ")"}]}]}]}]}]}], "\n", 
 RowBox[{"                ", 
  RowBox[{"return", " ", "1"}]}], "\n", 
 RowBox[{"    ", 
  RowBox[{"return", " ", "0"}], "\n", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"def", " ", "two_pairs", 
     RowBox[{"(", "combination", ")"}]}], " ", "->", " ", 
    RowBox[{"int", ":", "\n", "    ", "found_pairs"}]}], " ", "=", " ", "0"}],
   "\n", "    "}], "\n", 
 RowBox[{"    ", 
  RowBox[{
   RowBox[{"for", " ", "i", " ", "in", " ", "range", 
    RowBox[{"(", 
     RowBox[{"len", 
      RowBox[{"(", "combination", ")"}]}], ")"}]}], ":", "    ", "\n", 
   "        ", 
   RowBox[{"for", " ", "j", " ", "in", " ", "range", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"i", "+", "1"}], ",", 
      RowBox[{"len", 
       RowBox[{"(", "combination", ")"}]}]}], ")"}]}], ":", "\n", 
   "            ", 
   RowBox[{
    RowBox[{"if", " ", "j"}], " ", ">=", " ", 
    RowBox[{"len", 
     RowBox[{"(", "combination", ")"}]}]}], ":", "\n", "                ", 
   "break"}]}], "\n", 
 RowBox[{"            ", 
  RowBox[{
   RowBox[{"if", " ", 
    RowBox[{
     RowBox[{"combination", "[", "i", "]"}], ".", "number"}]}], " ", "==", 
   " ", 
   RowBox[{
    RowBox[{"combination", "[", "j", "]"}], ".", 
    RowBox[{"number", ":", "\n", "                ", 
     RowBox[{
      RowBox[{"combination", ".", "remove"}], 
      RowBox[{"(", 
       RowBox[{"combination", "[", "i", "]"}], ")"}]}]}]}]}]}], "\n", 
 RowBox[{"                ", 
  RowBox[{
   RowBox[{"combination", ".", "remove"}], 
   RowBox[{"(", 
    RowBox[{"combination", "[", 
     RowBox[{"j", "-", "1"}], "]"}], ")"}]}]}], "\n", 
 RowBox[{"                ", 
  RowBox[{"found_pairs", "+=", " ", "1"}], "\n"}], "\n", 
 RowBox[{"    ", 
  RowBox[{
   RowBox[{"for", " ", "i", " ", "in", " ", "range", 
    RowBox[{"(", 
     RowBox[{"len", 
      RowBox[{"(", "combination", ")"}]}], ")"}]}], ":", "    ", "\n", 
   "        ", 
   RowBox[{"for", " ", "j", " ", "in", " ", "range", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"i", "+", "1"}], ",", 
      RowBox[{"len", 
       RowBox[{"(", "combination", ")"}]}]}], ")"}]}], ":", "\n", 
   "            ", 
   RowBox[{
    RowBox[{"if", " ", "j"}], " ", ">=", " ", 
    RowBox[{"len", 
     RowBox[{"(", "combination", ")"}]}]}], ":", "\n", "                ", 
   "break"}]}], "\n", 
 RowBox[{"            ", 
  RowBox[{
   RowBox[{
    RowBox[{"if", " ", 
     RowBox[{
      RowBox[{"combination", "[", "i", "]"}], ".", "number"}]}], " ", "==", 
    " ", 
    RowBox[{
     RowBox[{"combination", "[", "j", "]"}], ".", 
     RowBox[{"number", ":", "\n", "                ", "found_pairs"}]}]}], "+=",
    " ", "1"}]}], "\n", 
 RowBox[{"                ", "break", "\n"}], "\n", 
 RowBox[{"    ", 
  RowBox[{
   RowBox[{
    RowBox[{"if", " ", "found_pairs"}], " ", ">=", " ", "2"}], ":", "\n", 
   "        ", 
   RowBox[{"return", " ", "1"}]}], "\n"}], "\n", 
 RowBox[{"    ", 
  RowBox[{"return", " ", "0"}], "\n", "\n", "\n", "            "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"def", " ", "three_of", "_a", "_kind", 
    RowBox[{"(", "combinations", ")"}]}], ":", "\n", "    ", 
   RowBox[{
    RowBox[{"combinations", ".", "sort"}], 
    RowBox[{"(", 
     RowBox[{"key", "=", " ", 
      RowBox[{"attrgetter", 
       RowBox[{"(", 
        RowBox[{"'", 
         RowBox[{"number", "'"}]}], ")"}]}]}], ")"}]}]}], "\n"}], "\n", 
 RowBox[{"    ", 
  RowBox[{"found", " ", "=", " ", "0"}], "\n"}], "\n", 
 RowBox[{"    ", 
  RowBox[{
   RowBox[{
    RowBox[{"for", " ", "i", " ", "in", " ", "range", 
     RowBox[{"(", 
      RowBox[{"len", 
       RowBox[{"(", "combinations", ")"}]}], ")"}]}], ":", "\n", "\n", 
    "        ", "cards"}], " ", "=", " ", "1"}]}], "\n", 
 RowBox[{"        ", 
  RowBox[{
   RowBox[{"for", " ", "j", " ", "in", " ", "range", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"i", "+", "1"}], ",", " ", 
      RowBox[{"len", 
       RowBox[{"(", "combinations", ")"}]}]}], ")"}]}], ":", "\n", "\n", 
   "            ", 
   RowBox[{
    RowBox[{"if", " ", 
     RowBox[{
      RowBox[{"combinations", "[", "j", "]"}], ".", "number"}]}], " ", "!=", 
    " ", 
    RowBox[{
     RowBox[{"combinations", "[", "i", "]"}], ".", "number"}]}], ":", "\n", 
   "                ", "break"}]}], "\n", 
 RowBox[{"            ", 
  RowBox[{
   RowBox[{"else", ":", "\n", "                ", "cards"}], " ", "+=", " ", 
   "1"}], "\n"}], "\n", 
 RowBox[{"            ", 
  RowBox[{
   RowBox[{
    RowBox[{"if", 
     RowBox[{"(", 
      RowBox[{"cards", " ", ">=", " ", "3"}], ")"}]}], ":", "\n", 
    "                ", "found"}], " ", "=", " ", "1"}]}], "\n", 
 RowBox[{"                ", "break", "\n"}], "\n", 
 RowBox[{"    ", 
  RowBox[{"return", " ", "found"}], " ", "\n", "\n", "           "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"def", " ", "four_of", "_a", "_kind", 
    RowBox[{"(", "combinations", ")"}]}], ":", "\n", "    ", 
   RowBox[{
    RowBox[{"combinations", ".", "sort"}], 
    RowBox[{"(", 
     RowBox[{"key", "=", " ", 
      RowBox[{"attrgetter", 
       RowBox[{"(", 
        RowBox[{"'", 
         RowBox[{"number", "'"}]}], ")"}]}]}], ")"}]}]}], "\n"}], "\n", 
 RowBox[{"    ", 
  RowBox[{"found", " ", "=", " ", "0"}], "\n"}], "\n", 
 RowBox[{"    ", 
  RowBox[{
   RowBox[{
    RowBox[{"for", " ", "i", " ", "in", " ", "range", 
     RowBox[{"(", 
      RowBox[{"len", 
       RowBox[{"(", "combinations", ")"}]}], ")"}]}], ":", "\n", "\n", 
    "        ", "cards"}], " ", "=", " ", "1"}]}], "\n", 
 RowBox[{"        ", 
  RowBox[{
   RowBox[{"for", " ", "j", " ", "in", " ", "range", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"i", "+", "1"}], ",", " ", 
      RowBox[{"len", 
       RowBox[{"(", "combinations", ")"}]}]}], ")"}]}], ":", "\n", "\n", 
   "            ", 
   RowBox[{
    RowBox[{"if", " ", 
     RowBox[{
      RowBox[{"combinations", "[", "j", "]"}], ".", "number"}]}], " ", "!=", 
    " ", 
    RowBox[{
     RowBox[{"combinations", "[", "i", "]"}], ".", "number"}]}], ":", "\n", 
   "                ", "break"}]}], "\n", 
 RowBox[{"            ", 
  RowBox[{
   RowBox[{"else", ":", "\n", "                ", "cards"}], " ", "+=", " ", 
   "1"}], "\n"}], "\n", 
 RowBox[{"            ", 
  RowBox[{
   RowBox[{
    RowBox[{"if", 
     RowBox[{"(", 
      RowBox[{"cards", " ", ">=", " ", "4"}], ")"}]}], ":", "\n", 
    "                ", "found"}], " ", "=", " ", "1"}]}], "\n", 
 RowBox[{"                ", "break", "\n"}], "\n", 
 RowBox[{"    ", 
  RowBox[{"return", " ", "found"}], " ", "\n", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"def", " ", "full_house", 
    RowBox[{"(", "combinations", ")"}]}], ":", "\n", "    ", 
   RowBox[{
    RowBox[{"combinations", ".", "sort"}], 
    RowBox[{"(", 
     RowBox[{"key", "=", " ", 
      RowBox[{"attrgetter", 
       RowBox[{"(", 
        RowBox[{"'", 
         RowBox[{"number", "'"}]}], ")"}]}]}], ")"}]}]}], "\n"}], "\n", 
 RowBox[{"    ", 
  RowBox[{"found", " ", "=", " ", "0"}], "\n"}], "\n", 
 RowBox[{"    ", 
  RowBox[{
   RowBox[{
    RowBox[{"for", " ", "i", " ", "in", " ", "range", 
     RowBox[{"(", 
      RowBox[{"len", 
       RowBox[{"(", "combinations", ")"}]}], ")"}]}], ":", "\n", "\n", 
    "        ", "cards"}], " ", "=", " ", "1"}]}], "\n", 
 RowBox[{"        ", 
  RowBox[{
   RowBox[{"for", " ", "j", " ", "in", " ", "range", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"i", "+", "1"}], ",", " ", 
      RowBox[{"len", 
       RowBox[{"(", "combinations", ")"}]}]}], ")"}]}], ":", "\n", "\n", 
   "            ", 
   RowBox[{
    RowBox[{"if", " ", 
     RowBox[{
      RowBox[{"combinations", "[", "j", "]"}], ".", "number"}]}], " ", "!=", 
    " ", 
    RowBox[{
     RowBox[{"combinations", "[", "i", "]"}], ".", "number"}]}], ":", "\n", 
   "                ", "break"}]}], "\n", 
 RowBox[{"            ", 
  RowBox[{
   RowBox[{"else", ":", "\n", "                ", "cards"}], " ", "+=", " ", 
   "1"}], "\n"}], "\n", 
 RowBox[{"            ", 
  RowBox[{
   RowBox[{
    RowBox[{"if", 
     RowBox[{"(", 
      RowBox[{"cards", " ", ">=", " ", "3"}], ")"}]}], ":", "\n", 
    "                ", "found"}], " ", "=", " ", "1"}]}], "\n", 
 RowBox[{"                ", 
  RowBox[{
   RowBox[{"combinations", ".", "remove"}], 
   RowBox[{"(", 
    RowBox[{"combinations", "[", "j", "]"}], ")"}]}]}], "\n", 
 RowBox[{"                ", 
  RowBox[{
   RowBox[{"combinations", ".", "remove"}], 
   RowBox[{"(", 
    RowBox[{"combinations", "[", 
     RowBox[{"j", "-", "1"}], "]"}], ")"}]}]}], "\n", 
 RowBox[{"                ", 
  RowBox[{
   RowBox[{"combinations", ".", "remove"}], 
   RowBox[{"(", 
    RowBox[{"combinations", "[", 
     RowBox[{"j", "-", "2"}], "]"}], ")"}]}]}], "\n", 
 RowBox[{"                ", "break", "\n", "\n"}], "\n", 
 RowBox[{"    ", 
  RowBox[{
   RowBox[{
    RowBox[{"if", 
     RowBox[{"(", 
      RowBox[{"found", " ", "==", " ", "1"}], ")"}]}], ":", "\n", "        ", 
    "found"}], " ", "=", " ", 
   RowBox[{"one_pair", 
    RowBox[{"(", "combinations", ")"}]}]}], "\n"}], "\n", 
 RowBox[{"    ", 
  RowBox[{"return", " ", "found"}], " ", "\n", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"def", " ", "check_flush", 
     RowBox[{"(", "combinations", ")"}]}], ":", "\n", "\n", "    ", "flush"}],
    " ", "=", " ", "0"}], "\n"}], "\n", 
 RowBox[{"    ", 
  RowBox[{
   RowBox[{
    RowBox[{"for", " ", "i", " ", "in", " ", "range", 
     RowBox[{"(", 
      RowBox[{"len", 
       RowBox[{"(", "combinations", ")"}]}], ")"}]}], ":", "\n", "        ", 
    "same_suit"}], " ", "=", " ", "1"}]}], "\n", 
 RowBox[{"        ", 
  RowBox[{
   RowBox[{
    RowBox[{"for", " ", "j", " ", "in", " ", "range", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"i", "+", "1"}], ",", " ", 
       RowBox[{"len", 
        RowBox[{"(", "combinations", ")"}]}]}], ")"}]}], ":", "\n", 
    "            ", 
    RowBox[{"if", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"combinations", "[", "i", "]"}], ".", "color"}], " ", "==", 
       " ", 
       RowBox[{
        RowBox[{"combinations", "[", "j", "]"}], ".", "color"}]}], ")"}]}], 
    ":", "\n", "                ", "same_suit"}], " ", "+=", " ", "1"}], "\n",
   "            "}], "\n", 
 RowBox[{"            ", 
  RowBox[{
   RowBox[{
    RowBox[{"if", 
     RowBox[{"(", 
      RowBox[{"same_suit", " ", ">=", " ", "5"}], ")"}]}], ":", "\n", 
    "                ", "flush"}], " ", "=", " ", "1"}]}], "\n", 
 RowBox[{"                ", "break", "   ", "\n"}], "\n", 
 RowBox[{"    ", 
  RowBox[{"return", " ", "flush"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"def", " ", "check_straight", 
    RowBox[{"(", "combinations", ")"}]}], ":", "\n", "    ", 
   RowBox[{
    RowBox[{"combinations", ".", "sort"}], 
    RowBox[{"(", 
     RowBox[{"key", "=", " ", 
      RowBox[{"attrgetter", 
       RowBox[{"(", 
        RowBox[{"'", 
         RowBox[{"number", "'"}]}], ")"}]}]}], ")"}]}]}], "\n"}], "\n", 
 RowBox[{"    ", 
  RowBox[{"found", " ", "=", " ", "0"}], "\n"}], "\n", 
 RowBox[{"    ", 
  RowBox[{
   RowBox[{
    RowBox[{"for", " ", "i", " ", "in", " ", "range", 
     RowBox[{"(", 
      RowBox[{"len", 
       RowBox[{"(", "combinations", ")"}]}], ")"}]}], ":", "\n", "        ", 
    "straight"}], " ", "=", " ", "1"}]}], "\n", 
 RowBox[{"        ", 
  RowBox[{
   RowBox[{"for", " ", "j", " ", "in", " ", "range", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"i", "+", "1"}], ",", " ", 
      RowBox[{"len", 
       RowBox[{"(", "combinations", ")"}]}]}], ")"}]}], ":", "\n", "\n", 
   "            ", 
   RowBox[{
    RowBox[{"if", " ", 
     RowBox[{
      RowBox[{"combinations", "[", "j", "]"}], ".", "number"}]}], " ", "!=", 
    " ", 
    RowBox[{
     RowBox[{
      RowBox[{"combinations", "[", "i", "]"}], ".", "number"}], " ", "+", " ",
      "j", " ", "-", " ", "i"}]}], ":", "\n", "                ", 
   "break"}]}], "\n", 
 RowBox[{"            ", 
  RowBox[{
   RowBox[{"else", ":", "\n", "                ", "straight"}], " ", "+=", 
   " ", "1"}]}], "\n", 
 RowBox[{"                ", 
  RowBox[{
   RowBox[{
    RowBox[{"if", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"combinations", "[", "j", "]"}], ".", "number"}], " ", "==", 
       " ", 
       RowBox[{"13", " ", "and", " ", "straight"}], " ", "==", " ", "4"}], 
      ")"}]}], ":", "\n", "                    ", 
    RowBox[{"if", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"combinations", "[", "0", "]"}], ".", "number"}], " ", "==", 
       " ", "1"}], ")"}]}], ":", "\n", "                        ", "found"}], 
   " ", "=", " ", "1"}]}], "\n", 
 RowBox[{"                        ", "break", "\n"}], "\n", 
 RowBox[{"            ", 
  RowBox[{
   RowBox[{
    RowBox[{"if", 
     RowBox[{"(", 
      RowBox[{"straight", " ", ">=", " ", "5"}], ")"}]}], ":", "\n", 
    "                ", "found"}], " ", "=", " ", "1"}]}], "\n", 
 RowBox[{"                ", "break", "\n"}], "\n", 
 RowBox[{"    ", 
  RowBox[{"return", " ", "found"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"def", " ", "check_straight", "_flush", 
   RowBox[{"(", "combinations", ")"}]}], ":", "\n", "    ", 
  RowBox[{"if", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"check_straight", 
      RowBox[{"(", "combinations", ")"}]}], " ", "==", " ", 
     RowBox[{"1", " ", "and", " ", "check_flush", 
      RowBox[{"(", "combinations", ")"}]}], "==", " ", "1"}], ")"}]}], ":", 
  "\n", "        ", 
  RowBox[{"return", " ", "1"}]}], "\n", 
 RowBox[{"    ", 
  RowBox[{"else", ":", "\n", "        ", 
   RowBox[{"return", " ", "0"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"def", " ", "royal_straight", "_flush", 
    RowBox[{"(", "combinations", ")"}]}], ":", "\n", "    ", "king_exists"}], 
  " ", "=", " ", "False"}], "\n", 
 RowBox[{"    ", 
  RowBox[{"s_exists", " ", "=", " ", "False"}], "\n"}], "\n", 
 RowBox[{"    ", 
  RowBox[{
   RowBox[{
    RowBox[{"for", " ", "i", " ", "in", " ", "range", 
     RowBox[{"(", 
      RowBox[{"len", 
       RowBox[{"(", "combinations", ")"}]}], ")"}]}], ":", "\n", "        ", 
    RowBox[{"if", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"combinations", "[", "i", "]"}], ".", "number"}], " ", "==", 
       " ", "1"}], ")"}]}], ":", "\n", "            ", "s_exists"}], " ", "=",
    " ", "True"}]}], "\n", 
 RowBox[{"        ", 
  RowBox[{
   RowBox[{
    RowBox[{"if", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"combinations", "[", "i", "]"}], ".", "number"}], " ", "==", 
       " ", "13"}], ")"}]}], ":", "\n", "            ", "king_exists"}], " ", 
   "=", " ", "True"}], "\n", "    "}], "\n", 
 RowBox[{"    ", 
  RowBox[{
   RowBox[{"if", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
      "king_exists", " ", "and", " ", "s_exists", " ", "and", " ", 
       "check_straight", "_flush", 
       RowBox[{"(", "combinations", ")"}]}], " ", "==", " ", "1"}], ")"}]}], 
   ":", "\n", "        ", 
   RowBox[{"return", " ", "1"}]}], "\n", "    "}], "\n", 
 RowBox[{"    ", 
  RowBox[{"return", " ", "0"}], "\n", "\n", "\n", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"def", " ", "generate_deck", 
    RowBox[{"(", ")"}]}], ":", "\n", "    ", "colors"}], " ", "=", " ", 
  RowBox[{"[", 
   RowBox[{
   "\"\<hj\[ADoubleDot]rter\>\"", ",", " ", "\"\<spader\>\"", ",", " ", 
    "\"\<ruter\>\"", ",", " ", "\"\<kl\[ODoubleDot]ver\>\""}], "]"}]}], "\n", 
 RowBox[{"    ", 
  RowBox[{"numbers", " ", "=", " ", 
   RowBox[{"[", 
    RowBox[{
    "1", ",", " ", "2", ",", " ", "3", ",", " ", "4", ",", " ", "5", ",", " ",
      "6", ",", " ", "7", ",", " ", "8", ",", " ", "9", ",", " ", "10", ",", 
     " ", "11", ",", " ", "12", ",", " ", "13"}], "]"}]}]}], "\n", 
 RowBox[{"    ", 
  RowBox[{"cards", " ", "=", " ", 
   RowBox[{"[", "]"}]}]}], "\n", 
 RowBox[{"    ", 
  RowBox[{
   RowBox[{"for", " ", "j", " ", "in", " ", 
    RowBox[{"numbers", ":", "\n", "        ", 
     RowBox[{"for", " ", "i", " ", "in", " ", "colors"}], ":", "\n", 
     "            ", "new_card"}]}], " ", "=", " ", 
   RowBox[{"Card", 
    RowBox[{"(", 
     RowBox[{"i", ",", " ", "j"}], ")"}]}]}]}], "\n", 
 RowBox[{"            ", 
  RowBox[{
   RowBox[{"cards", ".", "append"}], 
   RowBox[{"(", "new_card", ")"}]}], "\n"}], "\n", 
 RowBox[{"    ", 
  RowBox[{"return", " ", "cards"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"def", " ", "pull_cards", "_from", "_deck", 
     RowBox[{"(", 
      RowBox[{"deck", ",", " ", 
       RowBox[{"cards_to", "_draw"}]}], ")"}]}], ":", "\n", "    ", "\n", 
    "    ", "pulled_cards"}], " ", "=", " ", 
   RowBox[{"[", "]"}]}], "\n"}], "\n", 
 RowBox[{"    ", 
  RowBox[{
   RowBox[{
    RowBox[{"for", " ", "i", " ", "in", " ", "range", 
     RowBox[{"(", 
      RowBox[{"cards_to", "_draw"}], ")"}]}], ":", "\n", "        ", "card"}],
    " ", "=", " ", 
   RowBox[{"deck", "[", 
    RowBox[{
     RowBox[{"random", ".", "randint"}], 
     RowBox[{"(", 
      RowBox[{"0", ",", " ", 
       RowBox[{
        RowBox[{"len", 
         RowBox[{"(", "deck", ")"}]}], "-", "1"}]}], ")"}]}], "]"}]}]}], "\n", 
 RowBox[{"        ", 
  RowBox[{
   RowBox[{"deck", ".", "remove"}], 
   RowBox[{"(", "card", ")"}]}]}], "\n", 
 RowBox[{"        ", 
  RowBox[{
   RowBox[{"pulled_cards", ".", "append"}], 
   RowBox[{"(", "card", ")"}]}], "\n"}], "\n", 
 RowBox[{"    ", 
  RowBox[{"return", " ", "pulled_cards"}], "\n", "\n", "        ", 
  "\n"}], "\n", 
 RowBox[{"main", 
  RowBox[{"(", ")"}]}], "\[IndentingNewLine]"}], "Code",
 CellChangeTimes->{{3.872255433736515*^9, 3.8722554414366283`*^9}, 
   3.872255479849684*^9},ExpressionUUID->"f10aa016-c174-4f35-8bc4-\
31815cb2be6a"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Task 2: Kick Length", "Subchapter",ExpressionUUID->"099ee814-8db2-4a63-8b88-1c9110418edc"],

Cell[CellGroupData[{

Cell["Summary", "Section",
 CellChangeTimes->{{3.872254283514531*^9, 
  3.8722542835845203`*^9}},ExpressionUUID->"4332511c-4b0e-4fff-a557-\
cc5bbf57a309"],

Cell[CellGroupData[{

Cell["Task", "Subsection",ExpressionUUID->"5c103694-4f0e-4da5-8449-310c802b22a8"],

Cell["\<\
A certain football path can be described by the following differential \
equations.\
\>", "Text",ExpressionUUID->"c299c6da-f79a-4138-80fb-9d77fb5a52bc"],

Cell[BoxData[
 FormBox[
  TagBox[Cell[BoxData[
    FormBox[
     RowBox[{"\[Piecewise]", GridBox[{
        {
         RowBox[{
          RowBox[{"m", " ", 
           SuperscriptBox["x", "\[Prime]\[Prime]",
            MultilineFunction->None], 
           RowBox[{"(", "t", ")"}]}], "=", 
          RowBox[{
           RowBox[{"-", "\[Mu]"}], " ", 
           RowBox[{
            SuperscriptBox["x", "\[Prime]",
             MultilineFunction->None], "(", "t", ")"}], " ", 
           TemplateBox[{
             RowBox[{
               SuperscriptBox["x", "\[Prime]", MultilineFunction -> None], 
               "(", "t", ")"}]},
            "Abs"]}]}]},
        {
         RowBox[{
          RowBox[{"m", " ", 
           SuperscriptBox["y", "\[Prime]\[Prime]",
            MultilineFunction->None], 
           RowBox[{"(", "t", ")"}]}], "=", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "m"}], " ", "g"}], "-", 
           RowBox[{"\[Mu]", " ", 
            RowBox[{
             SuperscriptBox["y", "\[Prime]",
              MultilineFunction->None], "(", "t", ")"}], 
            TemplateBox[{
              RowBox[{
                SuperscriptBox["y", "\[Prime]", MultilineFunction -> None], 
                "(", "t", ")"}]},
             "Abs"]}]}]}]}
       }]}], TraditionalForm]], "DisplayFormula",
    CellChangeTimes->{{3.6494831153047237`*^9, 3.64948315219319*^9}, 
      3.649483223906516*^9, {3.6494834560349236`*^9, 
      3.6494834618069334`*^9}, {3.6494839443781815`*^9, 
      3.6494839449709826`*^9}, {3.649484703294715*^9, 3.649484718894743*^9}, 
      3.6494847524816017`*^9, {3.649484784617658*^9, 3.649484791965271*^9}, {
      3.649484822291724*^9, 3.649484854427781*^9}, {3.649484932505918*^9, 
      3.649484974610392*^9}, {3.64948505320333*^9, 3.6494850973202076`*^9}, 
      3.649485157817114*^9},ExpressionUUID->
    "c1687d82-81fd-405e-b8f1-eefbba282e2f"],
   DisplayForm], TraditionalForm]], "DisplayFormula",
 GridBoxOptions->{
 GridBoxAlignment->{
  "Columns" -> {{
     Left}}}},ExpressionUUID->"27cae548-12cc-478c-8bfe-277d63403154"],

Cell[TextData[{
 "In this case, the friction force is proportional to the square of the speed \
",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["v", "2"], TraditionalForm]],ExpressionUUID->
  "ee8adf0b-9dcd-4f62-baaa-a4d46811639a"],
 " and opposite to the velocity ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["v", "\[RightVector]"], TraditionalForm]],ExpressionUUID->
  "9ddd38b7-a128-4db8-b217-9a16b36ec110"],
 ". Determine the kick angle toward the ground which gives the greatest kick \
length. Assume the following data:"
}], "Text",ExpressionUUID->"4b8eab51-f160-44c4-ab8d-a5efeaede9d4"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"m", "=", 
    RowBox[{"0.4", "kg"}]}], ",", " ", 
   RowBox[{"\[Mu]", "=", 
    RowBox[{"0.01", " ", 
     RowBox[{"kg", "/", 
      StyleBox["m",
       FontSlant->"Plain"]}]}]}], ",", " ", 
   RowBox[{"g", "=", 
    RowBox[{"9.8", 
     RowBox[{
      StyleBox["m",
       FontSlant->"Plain"], "/", 
      SuperscriptBox[
       StyleBox["s",
        FontSlant->"Plain"], "2"]}]}]}]}], TraditionalForm]], "DisplayFormula",\
ExpressionUUID->"138da779-b707-4019-a122-1b30b08c05c4"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Result", "Subsection",ExpressionUUID->"7b609863-e4df-4ca9-8aa1-cbe4137518cf"],

Cell[TextData[{
 "The differential equations are solved numerically for different angles and \
then a function ",
 Cell[BoxData[
  FormBox[
   RowBox[{"L", "(", "\[Theta]", ")"}], TraditionalForm]],ExpressionUUID->
  "95baba6d-6f77-4b09-bee3-408dfc157207"],
 " is interpolated whose maximum is determined."
}], "Text",ExpressionUUID->"e21c54be-d0fb-4236-8998-57acdd091c0d"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    SubscriptBox["L", "max"], "\[TildeTilde]", 
    RowBox[{"35", 
     StyleBox["m",
      FontSlant->"Plain"]}]}], ",", " ", 
   RowBox[{
    SubscriptBox["\[Theta]", "max"], "\[TildeTilde]", 
    RowBox[{"42", "\[Degree]"}]}]}], TraditionalForm]], "DisplayFormula",Expre\
ssionUUID->"fe607734-3729-4e8e-b73e-a849bf3e3f4d"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Kick Length", "Section",ExpressionUUID->"83cb7efb-74f9-49c7-bc0a-32c858940cc2"],

Cell[CellGroupData[{

Cell["Solution to the differential equations", "Subsection",ExpressionUUID->"0689b3ed-5547-40c0-815e-4d3bc101d4e9"],

Cell[TextData[{
 "The angle ",
 Cell[BoxData[
  FormBox["\[Theta]", TraditionalForm]],ExpressionUUID->
  "c49e2c50-b65e-4b1a-beb7-08f82a0ab1d9"],
 " is set which gives initial values ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"x", "(", "0", ")"}], ",", 
      RowBox[{"y", "(", "0", ")"}]}], ")"}], "=", 
    RowBox[{"(", 
     RowBox[{"0", ",", "0"}], ")"}]}], TraditionalForm]],ExpressionUUID->
  "0c6ca47d-fe9a-4595-96e1-225659863361"],
 " och ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SuperscriptBox["x", "\[Prime]",
        MultilineFunction->None], "(", "0", ")"}], ",", 
      RowBox[{
       SuperscriptBox["y", "\[Prime]",
        MultilineFunction->None], "(", "0", ")"}]}], ")"}], "=", 
    RowBox[{
     SubscriptBox["v", "0"], "(", 
     RowBox[{
      RowBox[{"cos", "(", "\[Theta]", ")"}], ",", 
      RowBox[{"sin", "(", "\[Theta]", ")"}]}], ")"}]}], TraditionalForm]],
  ExpressionUUID->"a26259d0-cb7f-4698-802a-9789cd1fcea3"],
 ". Thereafter, the differential equations are solved numerically."
}], "Text",ExpressionUUID->"383b1d75-69c5-40a2-b206-cf298a0dbe4c"],

Cell[BoxData[
 FormBox[
  TagBox[Cell[BoxData[
    FormBox[
     RowBox[{"\[Piecewise]", GridBox[{
        {
         RowBox[{
          RowBox[{"m", " ", 
           SuperscriptBox["x", "\[Prime]\[Prime]",
            MultilineFunction->None], 
           RowBox[{"(", "t", ")"}]}], "=", 
          RowBox[{
           RowBox[{"-", "\[Mu]"}], " ", 
           RowBox[{
            SuperscriptBox["x", "\[Prime]",
             MultilineFunction->None], "(", "t", ")"}], 
           SqrtBox[
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox["x", "\[Prime]",
                MultilineFunction->None], "(", "t", ")"}], ")"}], "2"]]}]}]},
        {
         RowBox[{
          RowBox[{"m", " ", 
           SuperscriptBox["y", "\[Prime]\[Prime]",
            MultilineFunction->None], 
           RowBox[{"(", "t", ")"}]}], "=", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "m"}], " ", "g"}], "-", 
           RowBox[{"\[Mu]", " ", 
            RowBox[{
             SuperscriptBox["y", "\[Prime]",
              MultilineFunction->None], "(", "t", ")"}], 
            SqrtBox[
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                SuperscriptBox["y", "\[Prime]",
                 MultilineFunction->None], "(", "t", ")"}], ")"}], "2"]]}]}]}]}
       }]}], TraditionalForm]], "DisplayFormula",
    CellChangeTimes->{{3.6494831153047237`*^9, 3.64948315219319*^9}, 
      3.649483223906516*^9, {3.6494834560349236`*^9, 
      3.6494834618069334`*^9}, {3.6494839443781815`*^9, 
      3.6494839449709826`*^9}, {3.649484703294715*^9, 3.649484718894743*^9}, 
      3.6494847524816017`*^9, {3.649484784617658*^9, 3.649484791965271*^9}, {
      3.649484822291724*^9, 3.649484854427781*^9}, {3.649484932505918*^9, 
      3.649484974610392*^9}, {3.64948505320333*^9, 3.6494850973202076`*^9}, 
      3.649485157817114*^9},ExpressionUUID->
    "1e80ff74-68c4-4ae6-b7e5-b49c5b8efe66"],
   DisplayForm], TraditionalForm]], "DisplayFormula",
 GridBoxOptions->{
 GridBoxAlignment->{
  "Columns" -> {{
     Left}}}},ExpressionUUID->"118ed50e-a293-4853-8a2e-287f0e82de88"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`\[Theta]$$ = 0.6447246256867053, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`\[Theta]$$], 45 Degree}, 25 Degree, 55 Degree}}, 
    Typeset`size$$ = {288., {79., 82.878515625}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    False, $CellContext`\[Theta]$160158$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`\[Theta]$$ = 45 Degree}, 
      "ControllerVariables" :> {
        Hold[$CellContext`\[Theta]$$, $CellContext`\[Theta]$160158$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> ParametricPlot[
        Evaluate[
         ReplaceAll[{
           $CellContext`x[$CellContext`t], 
           $CellContext`y[$CellContext`t]}, 
          $CellContext`sol[$CellContext`\[Theta]$$]]], {$CellContext`t, 0, 
         3.5}, AxesLabel -> {
         "\!\(\*\nStyleBox[\"x\",\nFontSlant->\"Italic\"]\)", 
          "\!\(\*\nStyleBox[\"y\",\nFontSlant->\"Italic\"]\)"}, PlotLabel -> 
        StringForm["\[Theta] = `1`\[Degree]", $CellContext`\[Theta]$$/Degree],
         PlotRange -> {{0, 40}, {-5, 15}}], 
      "Specifications" :> {{{$CellContext`\[Theta]$$, 45 Degree}, 25 Degree, 
         55 Degree}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{327., {116.8515625, 122.1484375}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({$CellContext`sol[
         Pattern[$CellContext`\[Theta], 
          Blank[]]] := NDSolve[
         $CellContext`de[$CellContext`\[Theta]], {$CellContext`x, \
$CellContext`y}, {$CellContext`t, 0, 5}], $CellContext`de[
         Pattern[$CellContext`\[Theta], 
          Blank[]]] := {$CellContext`m 
          Derivative[
           2][$CellContext`x][$CellContext`t] == ((-$CellContext`\[Mu]) 
           Derivative[1][$CellContext`x][$CellContext`t]) 
          Sqrt[Derivative[
             1][$CellContext`x][$CellContext`t]^2], $CellContext`m 
          Derivative[
           2][$CellContext`y][$CellContext`t] == (-$CellContext`m) \
$CellContext`g - ($CellContext`\[Mu] 
           Derivative[1][$CellContext`y][$CellContext`t]) 
          Sqrt[Derivative[
             1][$CellContext`y][$CellContext`t]^2], $CellContext`x[0] == 
         0, $CellContext`y[0] == 0, 
         Derivative[1][$CellContext`x][0] == $CellContext`v0 
          Cos[$CellContext`\[Theta]], 
         Derivative[1][$CellContext`y][0] == $CellContext`v0 
          Sin[$CellContext`\[Theta]]}, $CellContext`m = 0.4, 
       Attributes[Derivative] = {NHoldAll, ReadProtected}, $CellContext`\[Mu] = 
       0.01, $CellContext`g = 9.8, $CellContext`v0 = 25}; 
     Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Text",
 CellContext->Cell,ExpressionUUID->"074ea7d8-b624-46a1-b77a-71901ede70e6"],

Cell[TextData[{
 "The kick time ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["t", "0"], TraditionalForm]],ExpressionUUID->
  "3e4fc240-500b-4eda-b341-bd57def15825"],
 " is determined so that ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"y", "(", 
     SubscriptBox["t", "0"], ")"}], "=", "0"}], TraditionalForm]],
  ExpressionUUID->"1d15cef2-fceb-4268-b442-a5749adf2d92"],
 ". Finally, the kick length is ",
 Cell[BoxData[
  FormBox[
   RowBox[{"L", "=", 
    RowBox[{"x", "(", 
     SubscriptBox["t", "0"], ")"}]}], TraditionalForm]],ExpressionUUID->
  "68470181-c55f-44e1-a2a9-d5b4141774ea"],
 ". "
}], "Text",ExpressionUUID->"427597e8-0af3-4ace-b4d8-fdc224fc7b7b"],

Cell[TextData[{
 "The above procedure is repeated for different angles and then interpolated \
a function ",
 Cell[BoxData[
  FormBox[
   RowBox[{"L", "(", "\[Theta]", ")"}], TraditionalForm]],ExpressionUUID->
  "6dd02b23-5d53-491c-ab05-898142e99c84"],
 " whose maximum is determined."
}], "Text",ExpressionUUID->"72c1b14d-47b0-4f44-a221-f0ce2ebcfc6d"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    SubscriptBox["L", "max"], "\[TildeTilde]", 
    RowBox[{"35", 
     StyleBox["m",
      FontSlant->"Plain"]}]}], ",", " ", 
   RowBox[{
    SubscriptBox["\[Theta]", "max"], "\[TildeTilde]", 
    RowBox[{"42", "\[Degree]"}]}]}], TraditionalForm]], "DisplayFormula",Expre\
ssionUUID->"69a267a0-0db2-4395-843b-559dcfa8d60e"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Calculation of kick time and kick length", "Subsection",ExpressionUUID->"a5dee6dc-e40d-412d-bc72-cb48cb6b5209"],

Cell[TextData[{
 "The time ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["t", "0"], TraditionalForm]],ExpressionUUID->
  "0eb6b34b-1170-4217-a3b1-6302439caad8"],
 " is determined so that ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"y", "(", 
     SubscriptBox["t", "0"], ")"}], "=", "0"}], TraditionalForm]],
  ExpressionUUID->"45f4f3bf-a1ad-4153-b77a-75584136cc83"],
 ". Finally the kick length is computed as ",
 Cell[BoxData[
  FormBox[
   RowBox[{"L", "=", 
    RowBox[{"x", "(", 
     SubscriptBox["t", "0"], ")"}]}], TraditionalForm]],ExpressionUUID->
  "56b1e9a8-d11c-47b1-8cdb-7e002e4f3d97"],
 ". "
}], "Text",ExpressionUUID->"ebaa4d63-b840-4196-9d61-9d15c1aaff02"],

Cell[TextData[{
 "The solution is repeated for different angles and then interpolated a \
function ",
 Cell[BoxData[
  FormBox[
   RowBox[{"L", "(", "\[Theta]", ")"}], TraditionalForm]],ExpressionUUID->
  "d401c41b-d511-48d2-af98-f5ec77c9f6f5"],
 " whose maximum is determined."
}], "Text",ExpressionUUID->"ab555893-fa7c-4ce4-a382-a9aa18010de5"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      TagBox["\[Theta]",
       HoldForm], "10", "20", "30", "40", "50", "60", "70", "80"},
     {
      TagBox["L",
       HoldForm], "17.243398938857474`", "27.352586387741027`", 
      "32.738772881100324`", "34.632738588882226`", "33.66937491639685`", 
      "30.080861252865706`", "23.75454675154313`", "14.159124216955485`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxDividers->{
     "Columns" -> {False, True, {False}, False}, "ColumnsIndexed" -> {}, 
      "Rows" -> {{False}}, "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   {OutputFormsDump`HeadedRows, None}],
  Function[BoxForm`e$, 
   TableForm[
   BoxForm`e$, 
    TableHeadings -> {{$CellContext`\[Theta], $CellContext`L}, 
      None}]]]], "Output",
 ShowCellBracket->Automatic,
 FontSize->12,ExpressionUUID->"14145529-9fe8-4221-afab-f2abafa6225d"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.019444444444444445`],
      AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJwtVgk01esXvahIGh4iStGgULi497rz/hmuzHfQQIYmqickL5GKK0N4pkpK
pYF6KkKJSEplKmkUGUNCSS+KiPzv+9e31lnf2mud9Z191j77rE9rs5/QU5pE
IhVJ4r/711mKxbwjWx05ZGiO06qOipdCuY2ikhlFBsk0wdJGYRl+Ere6xl6S
8ZfT27irZ5dh8ivZYHSZEQSDM65ymdqg7bvtYrHfCLuuD9xIaNNGpZNPtfi1
Ec5SvIo0Y5ajRnZj01oTY9xewK88wFiBTSrZg9tTjHFELvbLqsEVuCLzZ4Db
qDGmpH2xLs7VwWPh9bI3HiZo99/69p/dumiNOkM9VG2C74b3KsQMPUgtsWBP
GlGwIqhT/um0lVh/pcxkKJ0CTm/WPdWGlRg/uyx0igIVKou/jHRdWQWl6OSD
jcFUhFWeKL8t1setTvUU5V4q1gYe0F++wQDy1Kal7mtpoO0oW75uviFWTelN
dHlIw1N2SVp/jCG4z1xNc8mmWD/9/HfVUUOs1xCESaWbwuJ0h/WZ7WSc922t
GZaj40flh+NoJINipb7XZDcd3c56vRVWRjDS1fzg8YYOv2WKvC+FRihOk41c
yGFgytjM4qhlxvg4v+/y3HMMKGfFW9scNUavYWvJh58M/NLHBI9dx9XMXZio
o/OOBXmbIKa5yb0xn4lvejP2F9WbILj2x3DBVBZClHe21HIoKJV1jxxZw4I/
Oaqp+hIFhzxJOWUXWHh9L/DU7ZlU9N7pmKPTz0IZaYPFzQAq5vWRnNYYsUE2
4I9VNFLBvuuqtnkPG9TYgM4JFg3B877K+N5ko92xU8vnHA0jtRWFqYOS/LLi
1iUypmgtePZqYiUHNCVVppGnKYRZSlJ3t3Iw+beqR1alKQ6GxreNnuTgyI5G
3+PL6TisyJ7zpJaDsfeBiQqH6Uiha9HXTXAA8znv1XvpeFprOl6ox8We0vLU
51YMuGeGj8uv5yI9KasG/zCw9cREi384FxUTHeeCpjGhIM6C/FUuhok4sxhP
Jg5Qwx8NPueCc6r8ZfhDJtqSYjRsRrjItLoQvGcJC7oF7r6pMwFqpI2zfzgL
UTYJ9e0LgcnkhtSoDhaOjbxIiTcA5LK9XCrAxo7l2aQ8LrD+j7mV7HNszOWd
3LbWEZD6vz4c5N9VW5DkDpxoP1k0byMHKyPXRezwAcbuXK6IusfBYJq2c1cI
kPTCNt5Siwu72Knbf8QAVU6n/fmSPqJbdh/MTZXUk6h5oYuLPvVPOyYygY67
rrNOLwbK6wZHOvOBbNv2V5EiwEksPexWBmgc+OL3dwTw7+008s5HQI+fVnLO
TaBJlhE04zVwnzvR9/49sGnAPZXeAXjJKa2kziPw7Hu069ePQFj3v3InrQl4
5xmn0IeBx4NLjWaGEAhNfztLlkRgwpbtnJRNwNluZqrLdAI1CtUGmm0EOOam
P8iKBDr5om0ls82wX+GtXJw6gakmPvmuhBlcyYfitywm0P484+6UADNoM8+t
LdYhoMeLNM/LNMPyGzfJsYYETmWfHXB9bYZLi836X1IJ9GiKd8vJmWNA8aHo
GItAeVlRWB7dHDYzSyg1BIGu888fCb3NMe3UBY9dPAKk967Sn06bY7vleHq0
DYHHl3oa99eZozTFslzBgfjtHwvYzp04OsEn4BH1rPQvsgVuKLxwWS+S9Hf9
24XmzRZ4W0410lgjyQ/KekM5ZoEZjLpsu7UEEqu0DkdUWGDvPqZbjwTXHk2r
rx62gNthrdefJPhtnW2fzApL/Ny+5MpGCf78p+8HqrMlUrTeeUPy3gIXJmlL
rCU2Fk27Fi+pl5zwURBz2xJnDfRlrAUEfMaKpl3tt0Rc4sTEbgnf5sQ3ljUa
PGxrUSUr2Er4EDHUbgcefOZrGsy1+t1PGA8tguLYBDMCP8sCa9Tzefg3Iup1
EJvAol3aJdROHnqLdS++okn4T1096qRkBdLw6pgLZAK+/srXAi2sEMyJmNul
K+F/8eHk6T1WiD0R2nJ8CYFZKclzay5ZIWh6266y+RL+5AKV8QYrHDhu5umi
RMBwp6cubfpqvLbg23nLE/AzbdsbwliN+2pXbn2RzMt49DrtR96rcVB9iDUg
mSeSvbzb0jOrwbOr897UD6QHG5jH1a3GhoK2BlvJPP7SxxrD66qUrtUDxs7z
lh8iW0OHFzMlpgb4qZYxobjFGpybZxrbSgF1d31KzjFr8Lub51zPBejE6lDH
SmuIVebrT70AqLQfjB8ZsUbfYaP8pqPARtHGPzJ0bJCxf1SdEgm8KN5X6rjB
Bk/JVv0qgRL/6Lvix982iOkdvBjuBXx/fMQho8wGH9++rN63FlDNzT5h+a8N
FDeU10vxJPtiiPasXcsWGqlH7NUpEn437l/yE9lCu35hfuUSwHBm85PBCFvY
rGGLpysC+9Vnj3gVSnBu7IFHk1ykjfS/rOmxRZbpgvpbTVww7kmrqKnZobuy
Vb6rgAuVpDZfoY2dxMAHNB0SuHgbPispIMQOvYNXVCe9uBAWaOrty7bDwmSl
wTEOFwuR8WVLqx1UKF75PJX/9t/SFP1Z9pjhIVjX089BWj25qoFjD2rioe6O
+xzcVHGhu/nZ44nlVTfmCQ6ktPTOlJ61xyyZveXfd3JgOMc4c+ipPVZZpSgu
Iji/9XHA5iMFwhvKHAj3flvQYeCAyJ9yt2/2sDF5uVZ4xsMBD2e0blYqYUOa
plzASnTAt5ekkwVxbHjdcRFVlTmgeZdFttiVjZUt+uaWAw4Qju/9uHklG5uM
Fh0v03CEepL3RfxgYapHiTvT3hEzeJ9XyNSwoCmVmPtgvyM+0F4+PJLCQn6R
3imPbEckh/ZUNWxkoVJrkYlqiyPKqeNhJbosGHwO4Y1O5cNpbwdnyRATZrzF
LeMafEzfsI0/VsxEWrf1VnUqH/d+uE1ZEcrE3QWM3jUOfNACUi4fM2PCkMnw
v+HFB6+5NWHFFCYCkpLlaKF8FNjLytQ+YEB2Z3TRu1Q+nN91OG0TM7BbY0v0
vTw+hm+xX3ayGDD66i2uq+Fje/eHWu1hOp5x+64pdvGx81Bx0vwcOqodF6sl
j/PRlh3sc3kTHRkB7jX2KgKEhfzIv6VER8vYu2o7QwEMps/OIT8wBYkyoXnE
RoAsv4iccT9TxPoPNGl5CvCoWk9aWt309z4QwEq/flSnnIbxlNM+q04JIFZr
febjSUOouFSQXihAgPh5sLwsDZmBIdfMXwhwvrT2lf0lKqJ0vkXOGhDgoFZf
eaQ5FWYOlk2fpwuROI3QIrVT8PlEdE7jMiEc7g+8kA+m4PKdBqkSQgjaVYWi
oT8oiNsleBPhJsRz1Zs5cldMcN1zDlU3WIgEd+nUVMIEJgJD9VPHhPhcP0s0
0GgMw57a6OpcIf569bXcZZcxSpulxBmPhEjLq3ugK2eMkc4PshrdQjTdKzTN
PmeEsbyMhdqTQhRuqCKtYhihY9SqKneeCFkN6uNjr8h44D8kc5UsgkncY/mt
/mSU1Za/lrMR4UntkELhbDI+ldURJZtE+D6Y08nJM8T2cYpVXpAIBk7KO+1E
hrClK/U1J4jQFR+u6DxogHydcB39TBHCzNNNXCwMUChOlz9xSwStwLyftDP6
8P92KEG+VoSqF58MEyZWgUR3KApsE8F3Wlzcd89VCCGpRT/5LMLcstI6Rck/
9Jd/nJB+qagkSLAS/wNcK+Y0
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox[
     InterpretationBox["\"\\!\\(TraditionalForm\\`\[Theta]\\) [\[Degree]]\"", 
      StringForm["`1` [\[Degree]]", $CellContext`\[Theta]], Editable -> 
      False], TraditionalForm], 
    FormBox[
     InterpretationBox["\"\\!\\(TraditionalForm\\`\\(L(\[Theta])\\)\\) [m]\"", 
      StringForm["`1` [m]", 
       $CellContext`L[$CellContext`\[Theta]]], Editable -> False], 
     TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotLabel->FormBox["\"sparkl\[ADoubleDot]ngd\"", TraditionalForm],
  PlotRange->{{0, 80.}, {0, 36}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Text",ExpressionUUID->"7d165e76-d0c4-40b4-\
80a4-49a6f50ee15a"],

Cell["The maximum is computed as", "Text",ExpressionUUID->"7197b174-85aa-49df-bc5e-85781da71591"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    SubscriptBox["L", "max"], "\[TildeTilde]", 
    RowBox[{"35", 
     StyleBox["m",
      FontSlant->"Plain"]}]}], ",", " ", 
   RowBox[{
    SubscriptBox["\[Theta]", "max"], "\[TildeTilde]", 
    RowBox[{"41", "\[Degree]"}]}]}], TraditionalForm]], "DisplayFormula",Expre\
ssionUUID->"39d3b2ac-2f35-4c84-97c8-c2f8d5d81890"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Code", "Section",ExpressionUUID->"2b00b3de-35aa-4a76-8352-7cea3b011e46"],

Cell[BoxData[
 RowBox[{"ClearAll", "[", "\"\<`*\>\"", "]"}]], "Input",ExpressionUUID->"78e95c2b-95b5-4921-b45f-4811389e3a38"],

Cell["Enter given data.", "Text",ExpressionUUID->"21d50c9e-bfb9-428e-9d3b-9e853d34952e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"m", "=", "0.4"}], ";", 
  RowBox[{"\[Mu]", "=", "0.01"}], ";", 
  RowBox[{"g", "=", "9.8"}], ";", 
  RowBox[{"v0", "=", "25"}], ";"}]], "Input",ExpressionUUID->"db8547b6-be31-\
4d85-a136-942a242ce9fb"],

Cell["Define differential equations and there initial conditions.", "Text",ExpressionUUID->"0e68d567-cdba-47e3-9079-16529b597a21"],

Cell[BoxData[
 RowBox[{
  RowBox[{"de", "[", "\[Theta]_", "]"}], ":=", 
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"m", " ", 
      RowBox[{
       RowBox[{"x", "''"}], "[", "t", "]"}]}], "\[Equal]", 
     RowBox[{
      RowBox[{"-", "\[Mu]"}], " ", 
      RowBox[{
       RowBox[{"x", "'"}], "[", "t", "]"}], 
      SqrtBox[
       SuperscriptBox[
        RowBox[{
         RowBox[{"x", "'"}], "[", "t", "]"}], "2"]]}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"m", " ", 
      RowBox[{
       RowBox[{"y", "''"}], "[", "t", "]"}]}], "\[Equal]", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "m"}], " ", "g"}], "-", 
      RowBox[{"\[Mu]", " ", 
       RowBox[{
        RowBox[{"y", "'"}], "[", "t", "]"}], 
       SqrtBox[
        SuperscriptBox[
         RowBox[{
          RowBox[{"y", "'"}], "[", "t", "]"}], "2"]]}]}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"x", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
    RowBox[{
     RowBox[{"y", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"x", "'"}], "[", "0", "]"}], "\[Equal]", 
     RowBox[{"v0", " ", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"y", "'"}], "[", "0", "]"}], "\[Equal]", 
     RowBox[{"v0", " ", 
      RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}]}], "\[IndentingNewLine]", 
   "}"}]}]], "Input",ExpressionUUID->"303396bf-bb07-4ba4-aeca-b45289854016"],

Cell["Solve the DE.", "Text",ExpressionUUID->"7ee4ab93-a1fa-46f3-ad38-91bbd6196442"],

Cell[BoxData[
 RowBox[{
  RowBox[{"sol", "[", "\[Theta]_", "]"}], ":=", 
  RowBox[{"NDSolve", "[", 
   RowBox[{
    RowBox[{"de", "[", "\[Theta]", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "y"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", "5"}], "}"}]}], "]"}]}]], "Input",ExpressionU\
UID->"7e612b5b-a362-4a99-aefa-d8ef28cbcf1d"],

Cell[TextData[{
 "Example for ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Theta]", "=", 
    RowBox[{"45", "\[Degree]"}]}], TraditionalForm]],ExpressionUUID->
  "b38c910e-83de-4ca5-a47a-ced3d9feceae"]
}], "Text",ExpressionUUID->"6be87396-4d51-49a2-96ef-fb9955751f49"],

Cell[BoxData[
 RowBox[{"sol", "[", 
  RowBox[{"45", "\[Degree]"}], "]"}]], "Input",ExpressionUUID->"cb160d51-ab97-\
43f8-b291-f08aa366cf8b"],

Cell[BoxData[
 RowBox[{"ParametricPlot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"x", "[", "t", "]"}], ",", 
       RowBox[{"y", "[", "t", "]"}]}], "}"}], "/.", 
     RowBox[{"sol", "[", 
      RowBox[{"45", "\[Degree]"}], "]"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "3.5"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*StyleBox[\"x\",FontSlant->\"Italic\"]\)\>\"", ",", 
      "\"\<\!\(\*StyleBox[\"y\",FontSlant->\"Italic\"]\)\>\""}], "}"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "40"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "5"}], ",", "15"}], "}"}]}], "}"}]}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",ExpressionUUID->"dcc29bc3-7a9f-4ce0-\
97c4-6735ba118825"],

Cell["The curve for different angles.", "Text",ExpressionUUID->"d52e22f7-3cd0-4d5a-8d9b-8dfad5ccbff0"],

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ParametricPlot", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "[", "t", "]"}], ",", 
         RowBox[{"y", "[", "t", "]"}]}], "}"}], "/.", 
       RowBox[{"sol", "[", "\[Theta]", "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "3.5"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\!\(\*StyleBox[\"x\",FontSlant->\"Italic\"]\)\>\"", ",", 
        "\"\<\!\(\*StyleBox[\"y\",FontSlant->\"Italic\"]\)\>\""}], "}"}]}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"PlotLabel", "\[Rule]", 
      RowBox[{"StringForm", "[", 
       RowBox[{"\"\<\[Theta] = `1`\[Degree]\>\"", ",", 
        RowBox[{"\[Theta]", "/", "Degree"}]}], "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "40"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "5"}], ",", "15"}], "}"}]}], "}"}]}]}], 
    "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Theta]", ",", 
       RowBox[{"45", "\[Degree]"}]}], "}"}], ",", 
     RowBox[{"25", "\[Degree]"}], ",", 
     RowBox[{"55", "\[Degree]"}]}], "}"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",ExpressionUUID->"fbf96614-bbbb-49fc-9e4b-97abdc499a76"],

Cell["The function for kick length.", "Text",ExpressionUUID->"fa917d29-08a1-4229-a772-c50846b24666"],

Cell[BoxData[
 RowBox[{
  RowBox[{"len", "[", "\[Theta]_", "]"}], ":=", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", "t0", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"t0", "=", 
      RowBox[{"t", "/.", 
       RowBox[{"FindRoot", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Evaluate", "[", 
           RowBox[{
            RowBox[{"y", "[", "t", "]"}], "/.", 
            RowBox[{"sol", "[", "\[Theta]", "]"}]}], "]"}], "\[Equal]", "0"}],
          ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "2", ",", "4"}], "}"}]}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"First", "[", 
      RowBox[{
       RowBox[{"x", "[", "t0", "]"}], "/.", 
       RowBox[{"sol", "[", "\[Theta]", "]"}]}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",ExpressionUUID->"c1e034ed-d2a6-\
408c-94b9-25c49699acb1"],

Cell["Example", "Text",ExpressionUUID->"00d812ab-572e-47ed-acf5-365ddd647edb"],

Cell[BoxData[
 RowBox[{"len", "[", 
  RowBox[{"45", "\[Degree]"}], "]"}]], "Input",ExpressionUUID->"ad6e56a3-7579-\
40a4-9bd1-26f4acf6a37a"],

Cell["A table for different angles.", "Text",ExpressionUUID->"fceafb35-1f98-460f-8274-1a8c8e8f8417"],

Cell[BoxData[
 RowBox[{"data", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\[Theta]", ",", 
      RowBox[{"len", "[", 
       RowBox[{"\[Theta]", " ", "\[Degree]"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Theta]", ",", "10", ",", "80", ",", "10"}], "}"}]}], 
   "]"}]}]], "Input",ExpressionUUID->"0471da91-f836-431c-8caa-5d5056014222"],

Cell[BoxData[
 RowBox[{"TableForm", "[", 
  RowBox[{
   RowBox[{"Transpose", "[", "data", "]"}], ",", 
   RowBox[{"TableHeadings", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[Theta]", ",", "L"}], "}"}], ",", "None"}], "}"}]}]}], 
  "]"}]], "Input",ExpressionUUID->"e5f86be7-1a31-4c62-856b-4aa788e537d8"],

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{"data", ",", 
   RowBox[{"InterpolationOrder", "\[Rule]", "3"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "36"}], "}"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"StringForm", "[", 
       RowBox[{"\"\<`1` [\[Degree]]\>\"", ",", "\[Theta]"}], "]"}], ",", 
      RowBox[{"StringForm", "[", 
       RowBox[{"\"\<`1` [m]\>\"", ",", 
        RowBox[{"L", "[", "\[Theta]", "]"}]}], "]"}]}], "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<sparkl\[ADoubleDot]ngd\>\""}]}], 
  "]"}]], "Input",ExpressionUUID->"a5f4b01e-b579-4738-a9b8-215607b2c092"],

Cell["Higher accuracy around the max value.", "Text",ExpressionUUID->"3641d113-384a-42e6-95e5-66f241fec469"],

Cell[BoxData[
 RowBox[{"data2", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Theta]", " ", "Degree"}], ",", 
      RowBox[{"len", "[", 
       RowBox[{"\[Theta]", " ", "Degree"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Theta]", ",", "35", ",", "45", ",", "1"}], "}"}]}], 
   "]"}]}]], "Input",ExpressionUUID->"6f53c218-118e-4a94-b689-b278e7515043"],

Cell["Now, search for the maximum.", "Text",ExpressionUUID->"2109f8c6-bc29-4def-80c9-3b09adcdfcd8"],

Cell[BoxData[
 RowBox[{"max", "=", 
  RowBox[{"FindMaximum", "[", 
   RowBox[{
    RowBox[{"length", "[", "\[Theta]", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Theta]", ",", 
      RowBox[{"40", "\[Degree]"}], ",", 
      RowBox[{"45", "\[Degree]"}]}], "}"}]}], "]"}]}]], "Input",ExpressionUUID\
->"9181b388-7a00-421f-8c68-de58e9ad6534"],

Cell[BoxData[
 RowBox[{"\[Theta]0", "=", 
  FractionBox[
   RowBox[{"\[Theta]", "/.", 
    RowBox[{"max", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
   "Degree"]}]], "Input",ExpressionUUID->"7cd982a4-cee1-46b0-b034-\
8f77e4d519e9"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{Full, Full},
WindowMargins->{{12, Automatic}, {Automatic, 24}},
PageHeaders->{{None, None, None}, {
   Cell[
    TextData[{"KTH/ICT - Kommunikationssystem"}], "PageHeader", FontFamily -> 
    "Arial", FontSize -> 9], None, None}},
PageFooters->{{None, None, None}, {None, 
   Cell[
    TextData[{
      CounterBox["Page"]}], "PageNumber"], None}},
PrintingOptions->{"FacingPages"->False},
TrackCellChangeTimes->True,
Magnification:>0.8 Inherited,
FrontEndVersion->"12.3 for Linux x86 (64-bit) (July 9, 2021)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]], 
   Cell["Modify the definitions below to change the default appearance of all \
cells in a given style. \nMake modifications to any definition using commands \
in the Format menu.", "Text"], 
   Cell[
    CellGroupData[{
      Cell["Notebook Options Settings", "Section"], 
      Cell[
       StyleData["Notebook"], ShowCellBracket -> Automatic]}, Closed]], 
   Cell[
    CellGroupData[{
      Cell["Styles for Title and Section Cells", "Section"], 
      Cell[
       CellGroupData[{
         Cell["Title", "Subsection"], 
         Cell[
          StyleData["Title"], FontFamily -> "Arial", FontSize -> 36, 
          FontWeight -> "Bold", FontColor -> GrayLevel[0.5]], 
         Cell[
          StyleData["Subtitle"], FontFamily -> "Arial", FontWeight -> "Bold"], 
         Cell[
          StyleData["Subsubtitle"], FontFamily -> "Arial", FontSize -> 18]}, 
        Closed]], 
      Cell[
       CellGroupData[{
         Cell[
         "Chapter", "Subsection", 
          CellChangeTimes -> {{3.6182073006504073`*^9, 
           3.6182073204926414`*^9}}], 
         Cell[
          StyleData["Chapter"], FontFamily -> "Arial", FontSize -> 34, 
          FontWeight -> "Plain", FontSlant -> "Plain", 
          FontVariations -> {"StrikeThrough" -> False, "Underline" -> False}], 
         Cell[
          StyleData["Subchapter"], CellDingbat -> 
          StyleBox["\[FilledSmallSquare]", Alignment -> Baseline, 
            RGBColor[
            0.09803921568627451, 0.32941176470588235`, 0.6509803921568628]], 
          FontFamily -> "Arial", FontSize -> 28, FontWeight -> "Plain", 
          FontSlant -> "Plain", 
          FontVariations -> {
           "StrikeThrough" -> False, "Underline" -> False}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Section", "Subsection"], 
         Cell[
          StyleData["Section"], CellDingbat -> None, ShowGroupOpener -> True, 
          FontFamily -> "Arial", FontSize -> 24, FontWeight -> "Bold", 
          FontColor -> GrayLevel[0.5]], 
         Cell[
          StyleData["Subsection"], CellDingbat -> None, ShowGroupOpener -> 
          True, CellMargins -> {{40., 3.}, {8., 12.}}, FontFamily -> "Arial", 
          FontSize -> 18, FontWeight -> "Bold", FontColor -> GrayLevel[0.3]], 
         
         Cell[
          StyleData["Subsubsection"], CellDingbat -> None, ShowGroupOpener -> 
          True, CellMargins -> {{53., Inherited}, {2, 10}}, FontFamily -> 
          "Arial", FontSize -> 16, FontWeight -> "Bold", FontColor -> 
          GrayLevel[0.]], 
         Cell[
          StyleData["Subsubsubsection"], CellDingbat -> None, ShowGroupOpener -> 
          True, MenuSortingValue -> 1400, FontFamily -> "Arial Narrow", 
          FontSize -> 14, FontWeight -> "Bold", FontSlant -> "Plain", 
          FontVariations -> {"StrikeThrough" -> False, "Underline" -> False}, 
          FontColor -> GrayLevel[0]]}, Closed]]}, Closed]], 
   Cell[
    CellGroupData[{
      Cell["Styles for Body Text", "Section"], 
      Cell[
       CellGroupData[{
         Cell["Standard", "Subsection"], 
         Cell[
          StyleData["Text"], FontFamily -> "Times"], 
         Cell[
          StyleData["SmallText"], MenuSortingValue -> 1425, FontFamily -> 
          "Times"]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Display", "Subsection"], 
         Cell[
          CellGroupData[{
            Cell["Lists", "Subsubsection"], 
            Cell[
             StyleData["Item"], CellDingbat -> 
             StyleBox["\[FilledCircle]", Alignment -> Baseline, 
               GrayLevel[0.3]], FontFamily -> "Times"], 
            Cell[
             StyleData["ItemParagraph"], FontFamily -> "Times"], 
            Cell[
             StyleData["Subitem"], CellDingbat -> 
             StyleBox["\[FilledSmallCircle]", Alignment -> Baseline, 
               GrayLevel[0.3]], FontFamily -> "Times"], 
            Cell[
             StyleData["SubitemParagraph"], FontFamily -> "Times"], 
            Cell[
             StyleData["Subsubitem"], CellDingbat -> 
             StyleBox["\[FilledSmallCircle]", Alignment -> Baseline, 
               GrayLevel[0.5]], FontFamily -> "Times"], 
            Cell[
             StyleData["SubsubitemParagraph"], FontFamily -> "Times"], 
            Cell[
             StyleData["ItemNumbered"], FontFamily -> "Times"], 
            Cell[
             StyleData["SubitemNumbered"], FontFamily -> "Times"], 
            Cell[
             StyleData["SubsubitemNumbered"], FontFamily -> "Times"]}, 
           Closed]], 
         Cell[
          CellGroupData[{
            Cell["Templates", "Subsubsection"], 
            Cell[
             StyleData[
             "SideCaptionArray", StyleDefinitions -> StyleData["Text"]], 
             GridBoxOptions -> {
              GridBoxAlignment -> {"Columns" -> {Left}, "Rows" -> {Center}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}}], 
            Cell[
             StyleData[
             "SideCaption", StyleDefinitions -> StyleData["SmallText"]]]}, 
           Closed]]}, Closed]]}, Closed]], 
   Cell[
    CellGroupData[{
      Cell["Styles for Input and Output Cells", "Section"], 
      Cell[
       StyleData["Input"], ShowCellBracket -> True], 
      Cell[
       StyleData["InputOnly"], ShowCellBracket -> True], 
      Cell[
       StyleData["Code"], ShowCellBracket -> True], 
      Cell[
       StyleData["Output"], ShowCellBracket -> True], 
      Cell[
       StyleData["Message"], ShowCellBracket -> True], 
      Cell[
       StyleData["Print"], ShowCellBracket -> True]}, Closed]], 
   Cell[
    CellGroupData[{
      Cell["Styles for Formulas and Programming", "Section"], 
      Cell[
       StyleData["InlineFormula"]], 
      Cell[
       StyleData["DisplayFormula"], FontFamily -> "Times"], 
      Cell[
       StyleData["DisplayFormulaNumbered"], FontFamily -> "Times"], 
      Cell[
       StyleData["Program"], ShowCellBracket -> True]}, Closed]], 
   Cell[
    CellGroupData[{
      Cell["Citation Styles", "Section"], 
      Cell[
       StyleData["Reference"]]}, Closed]], 
   Cell[
    CellGroupData[{
      Cell[
       TextData[{"Styles for ", 
         StyleBox["Mathematica", FontSlant -> "Italic"], 
         " System\[Hyphen]specific Elements"}], "Section"], 
      Cell[
       CellGroupData[{
         Cell["Default Box Styles", "Subsection"], 
         Cell[
          StyleData["Graphics"], FontFamily -> "Times"], 
         Cell[
          StyleData["Graphics3D"], FontFamily -> "Times"], 
         Cell[
          StyleData["NetworkGraphics"], FontFamily -> "Times"]}, Closed]]}, 
     Closed]]}, Visible -> False, FrontEndVersion -> 
  "12.3 for Linux x86 (64-bit) (July 9, 2021)", StyleDefinitions -> 
  "PrivateStylesheetFormatting.nb"],
ExpressionUUID->"e0763a5c-f8dd-4d45-9e7f-074fd360102d"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 151, 3, 23, "Input",ExpressionUUID->"1a1a54d1-f16f-4663-92d9-341db90aaaca"],
Cell[CellGroupData[{
Cell[734, 27, 89, 0, 66, "Title",ExpressionUUID->"2e086750-1cf1-4c43-bc57-bac07652a650"],
Cell[826, 29, 188, 6, 44, "Text",ExpressionUUID->"679e81cd-23f2-4ac3-aad0-55498a6469d8"],
Cell[1017, 37, 208, 6, 44, "Text",ExpressionUUID->"39bfcd1a-7896-4364-9d2c-9b6c98366775"],
Cell[CellGroupData[{
Cell[1250, 47, 252, 4, 49, "Subchapter",ExpressionUUID->"2760ab7a-2fed-4ae4-a63f-890119ad5062"],
Cell[CellGroupData[{
Cell[1527, 55, 151, 3, 47, "Section",ExpressionUUID->"28ab532a-4f99-4328-b494-a8a51a0e3e70"],
Cell[CellGroupData[{
Cell[1703, 62, 81, 0, 34, "Subsection",ExpressionUUID->"4df8543c-22f8-401d-8973-c66d5fa62864"],
Cell[1787, 64, 1184, 30, 322, "Text",ExpressionUUID->"8ad5d4da-afa2-434b-a402-a9f9b705fa59"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3008, 99, 83, 0, 34, "Subsection",ExpressionUUID->"39a0ef6c-6a2c-4081-9062-84513a76c571"],
Cell[3094, 101, 783, 17, 131, "Text",ExpressionUUID->"c5065607-a7e6-4da3-87ac-93d5a0d99f57"],
Cell[3880, 120, 2073, 48, 287, "Text",ExpressionUUID->"32be9a5f-94e1-47ff-bec6-06b360fcaaa5"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[6002, 174, 360, 6, 47, "Section",ExpressionUUID->"6943093f-8a76-4b29-9b2d-76d8c3875b28"],
Cell[6365, 182, 766, 19, 41, "Text",ExpressionUUID->"95e29c9d-1ee9-442e-84bd-9a6693494379"],
Cell[7134, 203, 524, 14, 41, "Text",ExpressionUUID->"86caaedd-0425-447b-b5bd-657f82723c6d"],
Cell[7661, 219, 1838, 50, 106, "Text",ExpressionUUID->"048bc31b-4354-46b5-b370-6c9a9c48c07f",
 InitializationCell->True],
Cell[9502, 271, 167, 3, 27, "Text",ExpressionUUID->"51d4c73d-9e3c-4a0f-a734-c6d26821de38"],
Cell[9672, 276, 197, 4, 27, "Text",ExpressionUUID->"a3aa7323-0445-4aa5-b87e-525409f92273"]
}, Open  ]],
Cell[CellGroupData[{
Cell[9906, 285, 159, 3, 47, "Section",ExpressionUUID->"0f01609e-0763-4fcd-8fcd-2d660c380476"],
Cell[10068, 290, 1838, 33, 305, "Text",ExpressionUUID->"7db1cf4d-848e-436d-bfb6-d2bde7a8a488"]
}, Open  ]],
Cell[CellGroupData[{
Cell[11943, 328, 176, 3, 47, "Section",ExpressionUUID->"211b77c1-b22b-4b11-9556-e0ce2981d62a"],
Cell[12122, 333, 236, 6, 40, "Input",ExpressionUUID->"0ee87278-0151-41f9-8a9d-a593c98be8da"]
}, Closed]],
Cell[CellGroupData[{
Cell[12395, 344, 155, 3, 37, "Section",ExpressionUUID->"3c88e56c-4768-4de7-b81a-146942b7ddcc"],
Cell[12553, 349, 143, 3, 27, "Text",ExpressionUUID->"b0a4dfc3-f51a-490c-bb63-651909969ee8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[12733, 357, 163, 3, 47, "Section",ExpressionUUID->"eb232638-2837-4382-9654-616c94d28459"],
Cell[12899, 362, 286, 7, 41, "Input",ExpressionUUID->"724ad548-2c8d-4dfd-82a4-53b64348dd55"],
Cell[13188, 371, 1997, 49, 86, "Code",ExpressionUUID->"4c0cfd7e-bd83-42cd-9ed5-b121f577894f"],
Cell[15188, 422, 907, 23, 41, "Input",ExpressionUUID->"10119438-007f-4429-a5a0-bee11d87af84"],
Cell[16098, 447, 1550, 39, 230, InheritFromParent,ExpressionUUID->"f9b04900-031a-44e3-953d-a1a4e8d75a0d"]
}, Closed]],
Cell[CellGroupData[{
Cell[17685, 491, 149, 3, 37, "Section",ExpressionUUID->"d13fe2a6-2314-4011-bd36-9098b2a50549"],
Cell[17837, 496, 29012, 863, 4564, "Code",ExpressionUUID->"f10aa016-c174-4f35-8bc4-31815cb2be6a"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[46898, 1365, 96, 0, 49, "Subchapter",ExpressionUUID->"099ee814-8db2-4a63-8b88-1c9110418edc"],
Cell[CellGroupData[{
Cell[47019, 1369, 154, 3, 47, "Section",ExpressionUUID->"4332511c-4b0e-4fff-a557-cc5bbf57a309"],
Cell[CellGroupData[{
Cell[47198, 1376, 81, 0, 34, "Subsection",ExpressionUUID->"5c103694-4f0e-4da5-8449-310c802b22a8"],
Cell[47282, 1378, 162, 3, 27, "Text",ExpressionUUID->"c299c6da-f79a-4138-80fb-9d77fb5a52bc"],
Cell[47447, 1383, 2092, 53, 38, "DisplayFormula",ExpressionUUID->"27cae548-12cc-478c-8bfe-277d63403154"],
Cell[49542, 1438, 593, 14, 44, "Text",ExpressionUUID->"4b8eab51-f160-44c4-ab8d-a5efeaede9d4"],
Cell[50138, 1454, 528, 18, 21, "DisplayFormula",ExpressionUUID->"138da779-b707-4019-a122-1b30b08c05c4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[50703, 1477, 83, 0, 34, "Subsection",ExpressionUUID->"7b609863-e4df-4ca9-8aa1-cbe4137518cf"],
Cell[50789, 1479, 373, 8, 44, "Text",ExpressionUUID->"e21c54be-d0fb-4236-8998-57acdd091c0d"],
Cell[51165, 1489, 372, 11, 19, "DisplayFormula",ExpressionUUID->"fe607734-3729-4e8e-b73e-a849bf3e3f4d"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[51586, 1506, 85, 0, 47, "Section",ExpressionUUID->"83cb7efb-74f9-49c7-bc0a-32c858940cc2"],
Cell[CellGroupData[{
Cell[51696, 1510, 115, 0, 34, "Subsection",ExpressionUUID->"0689b3ed-5547-40c0-815e-4d3bc101d4e9"],
Cell[51814, 1512, 1176, 35, 44, "Text",ExpressionUUID->"383b1d75-69c5-40a2-b206-cf298a0dbe4c"],
Cell[52993, 1549, 2172, 55, 46, "DisplayFormula",ExpressionUUID->"118ed50e-a293-4853-8a2e-287f0e82de88"],
Cell[55168, 1606, 3530, 69, 253, "Text",ExpressionUUID->"074ea7d8-b624-46a1-b77a-71901ede70e6"],
Cell[58701, 1677, 675, 21, 27, "Text",ExpressionUUID->"427597e8-0af3-4ace-b4d8-fdc224fc7b7b"],
Cell[59379, 1700, 352, 8, 44, "Text",ExpressionUUID->"72c1b14d-47b0-4f44-a221-f0ce2ebcfc6d"],
Cell[59734, 1710, 372, 11, 19, "DisplayFormula",ExpressionUUID->"69a267a0-0db2-4395-843b-559dcfa8d60e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[60143, 1726, 117, 0, 34, "Subsection",ExpressionUUID->"a5dee6dc-e40d-412d-bc72-cb48cb6b5209"],
Cell[60263, 1728, 681, 21, 27, "Text",ExpressionUUID->"ebaa4d63-b840-4196-9d61-9d15c1aaff02"],
Cell[60947, 1751, 345, 8, 44, "Text",ExpressionUUID->"ab555893-fa7c-4ce4-a382-a9aa18010de5"],
Cell[61295, 1761, 1229, 32, 37, "Output",ExpressionUUID->"14145529-9fe8-4221-afab-f2abafa6225d"],
Cell[62527, 1795, 5051, 95, 210, "Text",ExpressionUUID->"7d165e76-d0c4-40b4-80a4-49a6f50ee15a"],
Cell[67581, 1892, 97, 0, 27, "Text",ExpressionUUID->"7197b174-85aa-49df-bc5e-85781da71591"],
Cell[67681, 1894, 372, 11, 19, "DisplayFormula",ExpressionUUID->"39d3b2ac-2f35-4c84-97c8-c2f8d5d81890"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[68102, 1911, 78, 0, 47, "Section",ExpressionUUID->"2b00b3de-35aa-4a76-8352-7cea3b011e46"],
Cell[68183, 1913, 125, 1, 25, "Input",ExpressionUUID->"78e95c2b-95b5-4921-b45f-4811389e3a38"],
Cell[68311, 1916, 88, 0, 27, "Text",ExpressionUUID->"21d50c9e-bfb9-428e-9d3b-9e853d34952e"],
Cell[68402, 1918, 236, 6, 23, "Input",ExpressionUUID->"db8547b6-be31-4d85-a136-942a242ce9fb"],
Cell[68641, 1926, 130, 0, 27, "Text",ExpressionUUID->"0e68d567-cdba-47e3-9079-16529b597a21"],
Cell[68774, 1928, 1488, 47, 103, "Input",ExpressionUUID->"303396bf-bb07-4ba4-aeca-b45289854016"],
Cell[70265, 1977, 84, 0, 27, "Text",ExpressionUUID->"7ee4ab93-a1fa-46f3-ad38-91bbd6196442"],
Cell[70352, 1979, 363, 10, 23, "Input",ExpressionUUID->"7e612b5b-a362-4a99-aefa-d8ef28cbcf1d"],
Cell[70718, 1991, 266, 7, 27, "Text",ExpressionUUID->"6be87396-4d51-49a2-96ef-fb9955751f49"],
Cell[70987, 2000, 140, 3, 23, "Input",ExpressionUUID->"cb160d51-ab97-43f8-b291-f08aa366cf8b"],
Cell[71130, 2005, 976, 27, 71, "Input",ExpressionUUID->"dcc29bc3-7a9f-4ce0-97c4-6735ba118825"],
Cell[72109, 2034, 102, 0, 27, "Text",ExpressionUUID->"d52e22f7-3cd0-4d5a-8d9b-8dfad5ccbff0"],
Cell[72214, 2036, 1590, 41, 157, "Input",ExpressionUUID->"fbf96614-bbbb-49fc-9e4b-97abdc499a76"],
Cell[73807, 2079, 100, 0, 27, "Text",ExpressionUUID->"fa917d29-08a1-4229-a772-c50846b24666"],
Cell[73910, 2081, 897, 25, 90, "Input",ExpressionUUID->"c1e034ed-d2a6-408c-94b9-25c49699acb1"],
Cell[74810, 2108, 78, 0, 27, "Text",ExpressionUUID->"00d812ab-572e-47ed-acf5-365ddd647edb"],
Cell[74891, 2110, 140, 3, 23, "Input",ExpressionUUID->"ad6e56a3-7579-40a4-9bd1-26f4acf6a37a"],
Cell[75034, 2115, 100, 0, 27, "Text",ExpressionUUID->"fceafb35-1f98-460f-8274-1a8c8e8f8417"],
Cell[75137, 2117, 383, 10, 23, "Input",ExpressionUUID->"0471da91-f836-431c-8caa-5d5056014222"],
Cell[75523, 2129, 341, 9, 25, "Input",ExpressionUUID->"e5f86be7-1a31-4c62-856b-4aa788e537d8"],
Cell[75867, 2140, 694, 16, 42, "Input",ExpressionUUID->"a5f4b01e-b579-4738-a9b8-215607b2c092"],
Cell[76564, 2158, 108, 0, 27, "Text",ExpressionUUID->"3641d113-384a-42e6-95e5-66f241fec469"],
Cell[76675, 2160, 412, 11, 23, "Input",ExpressionUUID->"6f53c218-118e-4a94-b689-b278e7515043"],
Cell[77090, 2173, 99, 0, 27, "Text",ExpressionUUID->"2109f8c6-bc29-4def-80c9-3b09adcdfcd8"],
Cell[77192, 2175, 342, 9, 23, "Input",ExpressionUUID->"9181b388-7a00-421f-8c68-de58e9ad6534"],
Cell[77537, 2186, 247, 6, 38, "Input",ExpressionUUID->"7cd982a4-cee1-46b0-b034-8f77e4d519e9"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

